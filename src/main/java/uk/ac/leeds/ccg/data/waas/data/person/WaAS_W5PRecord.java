/**
 * Source code generated by uk.ac.leeds.ccg.data.waascg.process.WaASCG_Main
 */

package uk.ac.leeds.ccg.data.waas.data.person;
import uk.ac.leeds.ccg.data.waas.data.id.WaAS_RecordID;

public class WaAS_W5PRecord extends WaAS_W4W5PRecord {

    protected double ANYOTHERBAMT;

    protected byte ANYOTHERBPD;

    protected byte CAEXTRA;

    protected byte CAOLDER;

    protected byte CAOTHER1;

    protected boolean CAOTHER2;

    protected boolean CAOTHER3;

    protected boolean CAOTHER4;

    protected boolean CAOTHER5;

    protected short CASEW5;

    protected double CTAMT;

    protected byte CTAXRED;

    protected short CTAXREDAMT;

    protected byte CTBAND;

    protected byte CTINSTAL;

    protected byte CTTIME;

    protected byte DBURDH;

    protected boolean DBURD___W5;

    protected int DNEWLOWE1;

    protected int DNEWLOWE1_I;

    protected boolean DNEWLOWE1_IFLAG;

    protected int DNEWLOWE2;

    protected int DNEWLOWE2_I;

    protected boolean DNEWLOWE2_IFLAG;

    protected short DNEWLOWE3;

    protected short DNEWLOWE3_I;

    protected boolean DNEWLOWE3_IFLAG;

    protected byte DNEWLOWEB1;

    protected byte DNEWLOWEB1_I;

    protected boolean DNEWLOWEB1_IFLAG;

    protected boolean DNEWLOWEB2;

    protected byte DNEWLOWEB2_I;

    protected boolean DNEWLOWEB2_IFLAG;

    protected boolean DNEWLOWEB3;

    protected byte DNEWLOWEB3_I;

    protected boolean DNEWLOWEB3_IFLAG;

    protected byte DNEWLTYPE1;

    protected byte DNEWLTYPE1_I;

    protected boolean DNEWLTYPE1_IFLAG;

    protected byte DNEWLTYPE2;

    protected byte DNEWLTYPE2_I;

    protected boolean DNEWLTYPE2_IFLAG;

    protected byte DNEWLTYPE3;

    protected byte DNEWLTYPE3_I;

    protected boolean DNEWLTYPE3_IFLAG;

    protected byte DVAGEW5BAND;

    protected double DVBENEFITANNUAL;

    protected boolean DVBENEFITANNUAL_IFLAG;

    protected double DVBENEFITANNUAL_MISS;

    protected boolean FINVTY_IFLAG;

    protected byte HRPEDLEVEL;

    protected byte MONTHW4;

    protected byte MORSAVRE1;

    protected byte MORSAVRE2;

    protected byte MORSAVRE3;

    protected byte MORSAVRE4;

    protected byte MORSAVRE5;

    protected boolean MORSAVRE6;

    protected byte OMAKEMOST;

    protected byte OSAFERET;

    protected byte OSVEXTO;

    protected byte PAYPER2;

    protected byte PERSONW5;

    protected byte PFACC;

    protected short PFANNUITYMVAL1;

    protected short PFANNUITYMVAL2;

    protected short PFANNUITYMVAL4;

    protected short PFPENSIONMVAL1;

    protected short PFPENSIONMVAL2;

    protected short PFPENSIONMVAL3;

    protected boolean PFPENSIONMVAL4;

    protected byte PFPENSIONMVB1;

    protected boolean PFPENSIONMVB4;

    protected boolean PFPENWISEFUTURE1;

    protected byte PFPENWISEHELP1;

    protected byte PFTAKELUMFLEX1;

    protected boolean PFTAKELUMFLEX2;

    protected short POANNUITYMVAL1;

    protected short POPENSIONMVAL1;

    protected short POPENSIONMVAL2;

    protected boolean POPENSIONMVB1;

    protected boolean POPENSIONMVB2;

    protected byte POPENWISEFUTURE1;

    protected byte POPENWISEFUTURE2;

    protected byte POPENWISEHELP1;

    protected byte POPENWISEHELP2;

    protected byte POPLANLUMFLEX1;

    protected byte POPLANLUMFLEX2;

    protected byte POTAKELUMFLEX1;

    protected boolean POTAKELUMFLEX2;

    protected short PPANNUITYMVAL1;

    protected short PPANNUITYMVAL2;

    protected short PPANNUITYMVAL3;

    protected boolean PPANNUITYMVB1;

    protected boolean PPANNUITYMVB2;

    protected boolean PPANNUITYMVB3;

    protected byte RELEASEEQUITY1;

    protected byte RELEASEEQUITY2;

    protected byte RELEASEEQUITY3;

    protected double RENTAMOUNT;

    protected byte RENTPERIOD;

    protected boolean RENTSPECIFY;

    protected byte SOURC2PMULTI1;

    protected byte SOURC2PMULTI2;

    protected byte SOURC2PMULTI3;

    protected byte SOURC2PMULTI4;

    protected byte SOURC2PMULTI5;

    protected byte SOURC2PMULTI6;

    protected boolean SOURC2PMULTI7;

    protected boolean SOURC2PMULTI8;

    protected boolean SOURC2PMULTI9;

    protected double W1W5WGT;

    protected double W4_LONGWGT;

    protected double W5XSHHWGT;

    protected double W5XSPERSWGT;

    protected byte WPRINF;

    protected short XSOC2010;

    protected short YEARW4;

    protected final void initANYOTHERBAMT(String s) {
        if (!s.trim().isEmpty()) {
            ANYOTHERBAMT = Double.parseDouble(s);
        } else {
            ANYOTHERBAMT = Double.NaN;
        }
    }

    protected final void initANYOTHERBPD(String s) {
        if (!s.trim().isEmpty()) {
            ANYOTHERBPD = Byte.parseByte(s);
        } else {
            ANYOTHERBPD = Byte.MIN_VALUE;
        }
    }

    protected final void initCAEXTRA(String s) {
        if (!s.trim().isEmpty()) {
            CAEXTRA = Byte.parseByte(s);
        } else {
            CAEXTRA = Byte.MIN_VALUE;
        }
    }

    protected final void initCAOLDER(String s) {
        if (!s.trim().isEmpty()) {
            CAOLDER = Byte.parseByte(s);
        } else {
            CAOLDER = Byte.MIN_VALUE;
        }
    }

    protected final void initCAOTHER1(String s) {
        if (!s.trim().isEmpty()) {
            CAOTHER1 = Byte.parseByte(s);
        } else {
            CAOTHER1 = Byte.MIN_VALUE;
        }
    }

    protected final void initCAOTHER2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                CAOTHER2 = false;
            } else {
                CAOTHER2 = true;
            }
        }
    }

    protected final void initCAOTHER3(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                CAOTHER3 = false;
            } else {
                CAOTHER3 = true;
            }
        }
    }

    protected final void initCAOTHER4(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                CAOTHER4 = false;
            } else {
                CAOTHER4 = true;
            }
        }
    }

    protected final void initCAOTHER5(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                CAOTHER5 = false;
            } else {
                CAOTHER5 = true;
            }
        }
    }

    protected final void initCASEW5(String s) {
        if (!s.trim().isEmpty()) {
            CASEW5 = Short.parseShort(s);
        } else {
            CASEW5 = Short.MIN_VALUE;
        }
    }

    protected final void initCTAMT(String s) {
        if (!s.trim().isEmpty()) {
            CTAMT = Double.parseDouble(s);
        } else {
            CTAMT = Double.NaN;
        }
    }

    protected final void initCTAXRED(String s) {
        if (!s.trim().isEmpty()) {
            CTAXRED = Byte.parseByte(s);
        } else {
            CTAXRED = Byte.MIN_VALUE;
        }
    }

    protected final void initCTAXREDAMT(String s) {
        if (!s.trim().isEmpty()) {
            CTAXREDAMT = Short.parseShort(s);
        } else {
            CTAXREDAMT = Short.MIN_VALUE;
        }
    }

    protected final void initCTBAND(String s) {
        if (!s.trim().isEmpty()) {
            CTBAND = Byte.parseByte(s);
        } else {
            CTBAND = Byte.MIN_VALUE;
        }
    }

    protected final void initCTINSTAL(String s) {
        if (!s.trim().isEmpty()) {
            CTINSTAL = Byte.parseByte(s);
        } else {
            CTINSTAL = Byte.MIN_VALUE;
        }
    }

    protected final void initCTTIME(String s) {
        if (!s.trim().isEmpty()) {
            CTTIME = Byte.parseByte(s);
        } else {
            CTTIME = Byte.MIN_VALUE;
        }
    }

    protected final void initDBURDH(String s) {
        if (!s.trim().isEmpty()) {
            DBURDH = Byte.parseByte(s);
        } else {
            DBURDH = Byte.MIN_VALUE;
        }
    }

    protected final void initDBURD___W5(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                DBURD___W5 = false;
            } else {
                DBURD___W5 = true;
            }
        }
    }

    protected final void initDNEWLOWE1(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWE1 = Integer.parseInt(s);
        } else {
            DNEWLOWE1 = Integer.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWE1_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWE1_I = Integer.parseInt(s);
        } else {
            DNEWLOWE1_I = Integer.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWE1_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLOWE1_IFLAG = false;
            } else {
                DNEWLOWE1_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLOWE2(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWE2 = Integer.parseInt(s);
        } else {
            DNEWLOWE2 = Integer.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWE2_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWE2_I = Integer.parseInt(s);
        } else {
            DNEWLOWE2_I = Integer.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWE2_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLOWE2_IFLAG = false;
            } else {
                DNEWLOWE2_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLOWE3(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWE3 = Short.parseShort(s);
        } else {
            DNEWLOWE3 = Short.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWE3_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWE3_I = Short.parseShort(s);
        } else {
            DNEWLOWE3_I = Short.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWE3_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLOWE3_IFLAG = false;
            } else {
                DNEWLOWE3_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLOWEB1(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWEB1 = Byte.parseByte(s);
        } else {
            DNEWLOWEB1 = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWEB1_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWEB1_I = Byte.parseByte(s);
        } else {
            DNEWLOWEB1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWEB1_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLOWEB1_IFLAG = false;
            } else {
                DNEWLOWEB1_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLOWEB2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                DNEWLOWEB2 = false;
            } else {
                DNEWLOWEB2 = true;
            }
        }
    }

    protected final void initDNEWLOWEB2_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWEB2_I = Byte.parseByte(s);
        } else {
            DNEWLOWEB2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWEB2_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLOWEB2_IFLAG = false;
            } else {
                DNEWLOWEB2_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLOWEB3(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                DNEWLOWEB3 = false;
            } else {
                DNEWLOWEB3 = true;
            }
        }
    }

    protected final void initDNEWLOWEB3_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLOWEB3_I = Byte.parseByte(s);
        } else {
            DNEWLOWEB3_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLOWEB3_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLOWEB3_IFLAG = false;
            } else {
                DNEWLOWEB3_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLTYPE1(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLTYPE1 = Byte.parseByte(s);
        } else {
            DNEWLTYPE1 = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLTYPE1_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLTYPE1_I = Byte.parseByte(s);
        } else {
            DNEWLTYPE1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLTYPE1_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLTYPE1_IFLAG = false;
            } else {
                DNEWLTYPE1_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLTYPE2(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLTYPE2 = Byte.parseByte(s);
        } else {
            DNEWLTYPE2 = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLTYPE2_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLTYPE2_I = Byte.parseByte(s);
        } else {
            DNEWLTYPE2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLTYPE2_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLTYPE2_IFLAG = false;
            } else {
                DNEWLTYPE2_IFLAG = true;
            }
        }
    }

    protected final void initDNEWLTYPE3(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLTYPE3 = Byte.parseByte(s);
        } else {
            DNEWLTYPE3 = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLTYPE3_I(String s) {
        if (!s.trim().isEmpty()) {
            DNEWLTYPE3_I = Byte.parseByte(s);
        } else {
            DNEWLTYPE3_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDNEWLTYPE3_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DNEWLTYPE3_IFLAG = false;
            } else {
                DNEWLTYPE3_IFLAG = true;
            }
        }
    }

    protected final void initDVAGEW5BAND(String s) {
        if (!s.trim().isEmpty()) {
            DVAGEW5BAND = Byte.parseByte(s);
        } else {
            DVAGEW5BAND = Byte.MIN_VALUE;
        }
    }

    protected final void initDVBENEFITANNUAL(String s) {
        if (!s.trim().isEmpty()) {
            DVBENEFITANNUAL = Double.parseDouble(s);
        } else {
            DVBENEFITANNUAL = Double.NaN;
        }
    }

    protected final void initDVBENEFITANNUAL_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                DVBENEFITANNUAL_IFLAG = false;
            } else {
                DVBENEFITANNUAL_IFLAG = true;
            }
        }
    }

    protected final void initDVBENEFITANNUAL_MISS(String s) {
        if (!s.trim().isEmpty()) {
            DVBENEFITANNUAL_MISS = Double.parseDouble(s);
        } else {
            DVBENEFITANNUAL_MISS = Double.NaN;
        }
    }

    protected final void initFINVTY_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == 0) {
                FINVTY_IFLAG = false;
            } else {
                FINVTY_IFLAG = true;
            }
        }
    }

    protected final void initHRPEDLEVEL(String s) {
        if (!s.trim().isEmpty()) {
            HRPEDLEVEL = Byte.parseByte(s);
        } else {
            HRPEDLEVEL = Byte.MIN_VALUE;
        }
    }

    protected final void initMONTHW4(String s) {
        if (!s.trim().isEmpty()) {
            MONTHW4 = Byte.parseByte(s);
        } else {
            MONTHW4 = Byte.MIN_VALUE;
        }
    }

    protected final void initMORSAVRE1(String s) {
        if (!s.trim().isEmpty()) {
            MORSAVRE1 = Byte.parseByte(s);
        } else {
            MORSAVRE1 = Byte.MIN_VALUE;
        }
    }

    protected final void initMORSAVRE2(String s) {
        if (!s.trim().isEmpty()) {
            MORSAVRE2 = Byte.parseByte(s);
        } else {
            MORSAVRE2 = Byte.MIN_VALUE;
        }
    }

    protected final void initMORSAVRE3(String s) {
        if (!s.trim().isEmpty()) {
            MORSAVRE3 = Byte.parseByte(s);
        } else {
            MORSAVRE3 = Byte.MIN_VALUE;
        }
    }

    protected final void initMORSAVRE4(String s) {
        if (!s.trim().isEmpty()) {
            MORSAVRE4 = Byte.parseByte(s);
        } else {
            MORSAVRE4 = Byte.MIN_VALUE;
        }
    }

    protected final void initMORSAVRE5(String s) {
        if (!s.trim().isEmpty()) {
            MORSAVRE5 = Byte.parseByte(s);
        } else {
            MORSAVRE5 = Byte.MIN_VALUE;
        }
    }

    protected final void initMORSAVRE6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                MORSAVRE6 = false;
            } else {
                MORSAVRE6 = true;
            }
        }
    }

    protected final void initOMAKEMOST(String s) {
        if (!s.trim().isEmpty()) {
            OMAKEMOST = Byte.parseByte(s);
        } else {
            OMAKEMOST = Byte.MIN_VALUE;
        }
    }

    protected final void initOSAFERET(String s) {
        if (!s.trim().isEmpty()) {
            OSAFERET = Byte.parseByte(s);
        } else {
            OSAFERET = Byte.MIN_VALUE;
        }
    }

    protected final void initOSVEXTO(String s) {
        if (!s.trim().isEmpty()) {
            OSVEXTO = Byte.parseByte(s);
        } else {
            OSVEXTO = Byte.MIN_VALUE;
        }
    }

    protected final void initPAYPER2(String s) {
        if (!s.trim().isEmpty()) {
            PAYPER2 = Byte.parseByte(s);
        } else {
            PAYPER2 = Byte.MIN_VALUE;
        }
    }

    protected final void initPERSONW5(String s) {
        if (!s.trim().isEmpty()) {
            PERSONW5 = Byte.parseByte(s);
        } else {
            PERSONW5 = Byte.MIN_VALUE;
        }
    }

    protected final void initPFACC(String s) {
        if (!s.trim().isEmpty()) {
            PFACC = Byte.parseByte(s);
        } else {
            PFACC = Byte.MIN_VALUE;
        }
    }

    protected final void initPFANNUITYMVAL1(String s) {
        if (!s.trim().isEmpty()) {
            PFANNUITYMVAL1 = Short.parseShort(s);
        } else {
            PFANNUITYMVAL1 = Short.MIN_VALUE;
        }
    }

    protected final void initPFANNUITYMVAL2(String s) {
        if (!s.trim().isEmpty()) {
            PFANNUITYMVAL2 = Short.parseShort(s);
        } else {
            PFANNUITYMVAL2 = Short.MIN_VALUE;
        }
    }

    protected final void initPFANNUITYMVAL4(String s) {
        if (!s.trim().isEmpty()) {
            PFANNUITYMVAL4 = Short.parseShort(s);
        } else {
            PFANNUITYMVAL4 = Short.MIN_VALUE;
        }
    }

    protected final void initPFPENSIONMVAL1(String s) {
        if (!s.trim().isEmpty()) {
            PFPENSIONMVAL1 = Short.parseShort(s);
        } else {
            PFPENSIONMVAL1 = Short.MIN_VALUE;
        }
    }

    protected final void initPFPENSIONMVAL2(String s) {
        if (!s.trim().isEmpty()) {
            PFPENSIONMVAL2 = Short.parseShort(s);
        } else {
            PFPENSIONMVAL2 = Short.MIN_VALUE;
        }
    }

    protected final void initPFPENSIONMVAL3(String s) {
        if (!s.trim().isEmpty()) {
            PFPENSIONMVAL3 = Short.parseShort(s);
        } else {
            PFPENSIONMVAL3 = Short.MIN_VALUE;
        }
    }

    protected final void initPFPENSIONMVAL4(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PFPENSIONMVAL4 = false;
            } else {
                PFPENSIONMVAL4 = true;
            }
        }
    }

    protected final void initPFPENSIONMVB1(String s) {
        if (!s.trim().isEmpty()) {
            PFPENSIONMVB1 = Byte.parseByte(s);
        } else {
            PFPENSIONMVB1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPFPENSIONMVB4(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PFPENSIONMVB4 = false;
            } else {
                PFPENSIONMVB4 = true;
            }
        }
    }

    protected final void initPFPENWISEFUTURE1(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PFPENWISEFUTURE1 = false;
            } else {
                PFPENWISEFUTURE1 = true;
            }
        }
    }

    protected final void initPFPENWISEHELP1(String s) {
        if (!s.trim().isEmpty()) {
            PFPENWISEHELP1 = Byte.parseByte(s);
        } else {
            PFPENWISEHELP1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPFTAKELUMFLEX1(String s) {
        if (!s.trim().isEmpty()) {
            PFTAKELUMFLEX1 = Byte.parseByte(s);
        } else {
            PFTAKELUMFLEX1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPFTAKELUMFLEX2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PFTAKELUMFLEX2 = false;
            } else {
                PFTAKELUMFLEX2 = true;
            }
        }
    }

    protected final void initPOANNUITYMVAL1(String s) {
        if (!s.trim().isEmpty()) {
            POANNUITYMVAL1 = Short.parseShort(s);
        } else {
            POANNUITYMVAL1 = Short.MIN_VALUE;
        }
    }

    protected final void initPOPENSIONMVAL1(String s) {
        if (!s.trim().isEmpty()) {
            POPENSIONMVAL1 = Short.parseShort(s);
        } else {
            POPENSIONMVAL1 = Short.MIN_VALUE;
        }
    }

    protected final void initPOPENSIONMVAL2(String s) {
        if (!s.trim().isEmpty()) {
            POPENSIONMVAL2 = Short.parseShort(s);
        } else {
            POPENSIONMVAL2 = Short.MIN_VALUE;
        }
    }

    protected final void initPOPENSIONMVB1(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                POPENSIONMVB1 = false;
            } else {
                POPENSIONMVB1 = true;
            }
        }
    }

    protected final void initPOPENSIONMVB2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                POPENSIONMVB2 = false;
            } else {
                POPENSIONMVB2 = true;
            }
        }
    }

    protected final void initPOPENWISEFUTURE1(String s) {
        if (!s.trim().isEmpty()) {
            POPENWISEFUTURE1 = Byte.parseByte(s);
        } else {
            POPENWISEFUTURE1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOPENWISEFUTURE2(String s) {
        if (!s.trim().isEmpty()) {
            POPENWISEFUTURE2 = Byte.parseByte(s);
        } else {
            POPENWISEFUTURE2 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOPENWISEHELP1(String s) {
        if (!s.trim().isEmpty()) {
            POPENWISEHELP1 = Byte.parseByte(s);
        } else {
            POPENWISEHELP1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOPENWISEHELP2(String s) {
        if (!s.trim().isEmpty()) {
            POPENWISEHELP2 = Byte.parseByte(s);
        } else {
            POPENWISEHELP2 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOPLANLUMFLEX1(String s) {
        if (!s.trim().isEmpty()) {
            POPLANLUMFLEX1 = Byte.parseByte(s);
        } else {
            POPLANLUMFLEX1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOPLANLUMFLEX2(String s) {
        if (!s.trim().isEmpty()) {
            POPLANLUMFLEX2 = Byte.parseByte(s);
        } else {
            POPLANLUMFLEX2 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOTAKELUMFLEX1(String s) {
        if (!s.trim().isEmpty()) {
            POTAKELUMFLEX1 = Byte.parseByte(s);
        } else {
            POTAKELUMFLEX1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOTAKELUMFLEX2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                POTAKELUMFLEX2 = false;
            } else {
                POTAKELUMFLEX2 = true;
            }
        }
    }

    protected final void initPPANNUITYMVAL1(String s) {
        if (!s.trim().isEmpty()) {
            PPANNUITYMVAL1 = Short.parseShort(s);
        } else {
            PPANNUITYMVAL1 = Short.MIN_VALUE;
        }
    }

    protected final void initPPANNUITYMVAL2(String s) {
        if (!s.trim().isEmpty()) {
            PPANNUITYMVAL2 = Short.parseShort(s);
        } else {
            PPANNUITYMVAL2 = Short.MIN_VALUE;
        }
    }

    protected final void initPPANNUITYMVAL3(String s) {
        if (!s.trim().isEmpty()) {
            PPANNUITYMVAL3 = Short.parseShort(s);
        } else {
            PPANNUITYMVAL3 = Short.MIN_VALUE;
        }
    }

    protected final void initPPANNUITYMVB1(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PPANNUITYMVB1 = false;
            } else {
                PPANNUITYMVB1 = true;
            }
        }
    }

    protected final void initPPANNUITYMVB2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PPANNUITYMVB2 = false;
            } else {
                PPANNUITYMVB2 = true;
            }
        }
    }

    protected final void initPPANNUITYMVB3(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                PPANNUITYMVB3 = false;
            } else {
                PPANNUITYMVB3 = true;
            }
        }
    }

    protected final void initRELEASEEQUITY1(String s) {
        if (!s.trim().isEmpty()) {
            RELEASEEQUITY1 = Byte.parseByte(s);
        } else {
            RELEASEEQUITY1 = Byte.MIN_VALUE;
        }
    }

    protected final void initRELEASEEQUITY2(String s) {
        if (!s.trim().isEmpty()) {
            RELEASEEQUITY2 = Byte.parseByte(s);
        } else {
            RELEASEEQUITY2 = Byte.MIN_VALUE;
        }
    }

    protected final void initRELEASEEQUITY3(String s) {
        if (!s.trim().isEmpty()) {
            RELEASEEQUITY3 = Byte.parseByte(s);
        } else {
            RELEASEEQUITY3 = Byte.MIN_VALUE;
        }
    }

    protected final void initRENTAMOUNT(String s) {
        if (!s.trim().isEmpty()) {
            RENTAMOUNT = Double.parseDouble(s);
        } else {
            RENTAMOUNT = Double.NaN;
        }
    }

    protected final void initRENTPERIOD(String s) {
        if (!s.trim().isEmpty()) {
            RENTPERIOD = Byte.parseByte(s);
        } else {
            RENTPERIOD = Byte.MIN_VALUE;
        }
    }

    protected final void initRENTSPECIFY(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            RENTSPECIFY = false;
        }
    }

    protected final void initSOURC2PMULTI1(String s) {
        if (!s.trim().isEmpty()) {
            SOURC2PMULTI1 = Byte.parseByte(s);
        } else {
            SOURC2PMULTI1 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOURC2PMULTI2(String s) {
        if (!s.trim().isEmpty()) {
            SOURC2PMULTI2 = Byte.parseByte(s);
        } else {
            SOURC2PMULTI2 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOURC2PMULTI3(String s) {
        if (!s.trim().isEmpty()) {
            SOURC2PMULTI3 = Byte.parseByte(s);
        } else {
            SOURC2PMULTI3 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOURC2PMULTI4(String s) {
        if (!s.trim().isEmpty()) {
            SOURC2PMULTI4 = Byte.parseByte(s);
        } else {
            SOURC2PMULTI4 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOURC2PMULTI5(String s) {
        if (!s.trim().isEmpty()) {
            SOURC2PMULTI5 = Byte.parseByte(s);
        } else {
            SOURC2PMULTI5 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOURC2PMULTI6(String s) {
        if (!s.trim().isEmpty()) {
            SOURC2PMULTI6 = Byte.parseByte(s);
        } else {
            SOURC2PMULTI6 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOURC2PMULTI7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                SOURC2PMULTI7 = false;
            } else {
                SOURC2PMULTI7 = true;
            }
        }
    }

    protected final void initSOURC2PMULTI8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                SOURC2PMULTI8 = false;
            } else {
                SOURC2PMULTI8 = true;
            }
        }
    }

    protected final void initSOURC2PMULTI9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            if (b == -7) {
                SOURC2PMULTI9 = false;
            } else {
                SOURC2PMULTI9 = true;
            }
        }
    }

    protected final void initW1W5WGT(String s) {
        if (!s.trim().isEmpty()) {
            W1W5WGT = Double.parseDouble(s);
        } else {
            W1W5WGT = Double.NaN;
        }
    }

    protected final void initW4_LONGWGT(String s) {
        if (!s.trim().isEmpty()) {
            W4_LONGWGT = Double.parseDouble(s);
        } else {
            W4_LONGWGT = Double.NaN;
        }
    }

    protected final void initW5XSHHWGT(String s) {
        if (!s.trim().isEmpty()) {
            W5XSHHWGT = Double.parseDouble(s);
        } else {
            W5XSHHWGT = Double.NaN;
        }
    }

    protected final void initW5XSPERSWGT(String s) {
        if (!s.trim().isEmpty()) {
            W5XSPERSWGT = Double.parseDouble(s);
        } else {
            W5XSPERSWGT = Double.NaN;
        }
    }

    protected final void initWPRINF(String s) {
        if (!s.trim().isEmpty()) {
            WPRINF = Byte.parseByte(s);
        } else {
            WPRINF = Byte.MIN_VALUE;
        }
    }

    protected final void initXSOC2010(String s) {
        if (!s.trim().isEmpty()) {
            XSOC2010 = Short.parseShort(s);
        } else {
            XSOC2010 = Short.MIN_VALUE;
        }
    }

    protected final void initYEARW4(String s) {
        if (!s.trim().isEmpty()) {
            YEARW4 = Short.parseShort(s);
        } else {
            YEARW4 = Short.MIN_VALUE;
        }
    }

    public double getANYOTHERBAMT() {
        return ANYOTHERBAMT;
    }

    public byte getANYOTHERBPD() {
        return ANYOTHERBPD;
    }

    public byte getCAEXTRA() {
        return CAEXTRA;
    }

    public byte getCAOLDER() {
        return CAOLDER;
    }

    public byte getCAOTHER1() {
        return CAOTHER1;
    }

    public boolean getCAOTHER2() {
        return CAOTHER2;
    }

    public boolean getCAOTHER3() {
        return CAOTHER3;
    }

    public boolean getCAOTHER4() {
        return CAOTHER4;
    }

    public boolean getCAOTHER5() {
        return CAOTHER5;
    }

    public short getCASEW5() {
        return CASEW5;
    }

    public double getCTAMT() {
        return CTAMT;
    }

    public byte getCTAXRED() {
        return CTAXRED;
    }

    public short getCTAXREDAMT() {
        return CTAXREDAMT;
    }

    public byte getCTBAND() {
        return CTBAND;
    }

    public byte getCTINSTAL() {
        return CTINSTAL;
    }

    public byte getCTTIME() {
        return CTTIME;
    }

    public byte getDBURDH() {
        return DBURDH;
    }

    public boolean getDBURD___W5() {
        return DBURD___W5;
    }

    public int getDNEWLOWE1() {
        return DNEWLOWE1;
    }

    public int getDNEWLOWE1_I() {
        return DNEWLOWE1_I;
    }

    public boolean getDNEWLOWE1_IFLAG() {
        return DNEWLOWE1_IFLAG;
    }

    public int getDNEWLOWE2() {
        return DNEWLOWE2;
    }

    public int getDNEWLOWE2_I() {
        return DNEWLOWE2_I;
    }

    public boolean getDNEWLOWE2_IFLAG() {
        return DNEWLOWE2_IFLAG;
    }

    public short getDNEWLOWE3() {
        return DNEWLOWE3;
    }

    public short getDNEWLOWE3_I() {
        return DNEWLOWE3_I;
    }

    public boolean getDNEWLOWE3_IFLAG() {
        return DNEWLOWE3_IFLAG;
    }

    public byte getDNEWLOWEB1() {
        return DNEWLOWEB1;
    }

    public byte getDNEWLOWEB1_I() {
        return DNEWLOWEB1_I;
    }

    public boolean getDNEWLOWEB1_IFLAG() {
        return DNEWLOWEB1_IFLAG;
    }

    public boolean getDNEWLOWEB2() {
        return DNEWLOWEB2;
    }

    public byte getDNEWLOWEB2_I() {
        return DNEWLOWEB2_I;
    }

    public boolean getDNEWLOWEB2_IFLAG() {
        return DNEWLOWEB2_IFLAG;
    }

    public boolean getDNEWLOWEB3() {
        return DNEWLOWEB3;
    }

    public byte getDNEWLOWEB3_I() {
        return DNEWLOWEB3_I;
    }

    public boolean getDNEWLOWEB3_IFLAG() {
        return DNEWLOWEB3_IFLAG;
    }

    public byte getDNEWLTYPE1() {
        return DNEWLTYPE1;
    }

    public byte getDNEWLTYPE1_I() {
        return DNEWLTYPE1_I;
    }

    public boolean getDNEWLTYPE1_IFLAG() {
        return DNEWLTYPE1_IFLAG;
    }

    public byte getDNEWLTYPE2() {
        return DNEWLTYPE2;
    }

    public byte getDNEWLTYPE2_I() {
        return DNEWLTYPE2_I;
    }

    public boolean getDNEWLTYPE2_IFLAG() {
        return DNEWLTYPE2_IFLAG;
    }

    public byte getDNEWLTYPE3() {
        return DNEWLTYPE3;
    }

    public byte getDNEWLTYPE3_I() {
        return DNEWLTYPE3_I;
    }

    public boolean getDNEWLTYPE3_IFLAG() {
        return DNEWLTYPE3_IFLAG;
    }

    public byte getDVAGEW5BAND() {
        return DVAGEW5BAND;
    }

    public double getDVBENEFITANNUAL() {
        return DVBENEFITANNUAL;
    }

    public boolean getDVBENEFITANNUAL_IFLAG() {
        return DVBENEFITANNUAL_IFLAG;
    }

    public double getDVBENEFITANNUAL_MISS() {
        return DVBENEFITANNUAL_MISS;
    }

    public boolean getFINVTY_IFLAG() {
        return FINVTY_IFLAG;
    }

    public byte getHRPEDLEVEL() {
        return HRPEDLEVEL;
    }

    public byte getMONTHW4() {
        return MONTHW4;
    }

    public byte getMORSAVRE1() {
        return MORSAVRE1;
    }

    public byte getMORSAVRE2() {
        return MORSAVRE2;
    }

    public byte getMORSAVRE3() {
        return MORSAVRE3;
    }

    public byte getMORSAVRE4() {
        return MORSAVRE4;
    }

    public byte getMORSAVRE5() {
        return MORSAVRE5;
    }

    public boolean getMORSAVRE6() {
        return MORSAVRE6;
    }

    public byte getOMAKEMOST() {
        return OMAKEMOST;
    }

    public byte getOSAFERET() {
        return OSAFERET;
    }

    public byte getOSVEXTO() {
        return OSVEXTO;
    }

    public byte getPAYPER2() {
        return PAYPER2;
    }

    public byte getPERSONW5() {
        return PERSONW5;
    }

    public byte getPFACC() {
        return PFACC;
    }

    public short getPFANNUITYMVAL1() {
        return PFANNUITYMVAL1;
    }

    public short getPFANNUITYMVAL2() {
        return PFANNUITYMVAL2;
    }

    public short getPFANNUITYMVAL4() {
        return PFANNUITYMVAL4;
    }

    public short getPFPENSIONMVAL1() {
        return PFPENSIONMVAL1;
    }

    public short getPFPENSIONMVAL2() {
        return PFPENSIONMVAL2;
    }

    public short getPFPENSIONMVAL3() {
        return PFPENSIONMVAL3;
    }

    public boolean getPFPENSIONMVAL4() {
        return PFPENSIONMVAL4;
    }

    public byte getPFPENSIONMVB1() {
        return PFPENSIONMVB1;
    }

    public boolean getPFPENSIONMVB4() {
        return PFPENSIONMVB4;
    }

    public boolean getPFPENWISEFUTURE1() {
        return PFPENWISEFUTURE1;
    }

    public byte getPFPENWISEHELP1() {
        return PFPENWISEHELP1;
    }

    public byte getPFTAKELUMFLEX1() {
        return PFTAKELUMFLEX1;
    }

    public boolean getPFTAKELUMFLEX2() {
        return PFTAKELUMFLEX2;
    }

    public short getPOANNUITYMVAL1() {
        return POANNUITYMVAL1;
    }

    public short getPOPENSIONMVAL1() {
        return POPENSIONMVAL1;
    }

    public short getPOPENSIONMVAL2() {
        return POPENSIONMVAL2;
    }

    public boolean getPOPENSIONMVB1() {
        return POPENSIONMVB1;
    }

    public boolean getPOPENSIONMVB2() {
        return POPENSIONMVB2;
    }

    public byte getPOPENWISEFUTURE1() {
        return POPENWISEFUTURE1;
    }

    public byte getPOPENWISEFUTURE2() {
        return POPENWISEFUTURE2;
    }

    public byte getPOPENWISEHELP1() {
        return POPENWISEHELP1;
    }

    public byte getPOPENWISEHELP2() {
        return POPENWISEHELP2;
    }

    public byte getPOPLANLUMFLEX1() {
        return POPLANLUMFLEX1;
    }

    public byte getPOPLANLUMFLEX2() {
        return POPLANLUMFLEX2;
    }

    public byte getPOTAKELUMFLEX1() {
        return POTAKELUMFLEX1;
    }

    public boolean getPOTAKELUMFLEX2() {
        return POTAKELUMFLEX2;
    }

    public short getPPANNUITYMVAL1() {
        return PPANNUITYMVAL1;
    }

    public short getPPANNUITYMVAL2() {
        return PPANNUITYMVAL2;
    }

    public short getPPANNUITYMVAL3() {
        return PPANNUITYMVAL3;
    }

    public boolean getPPANNUITYMVB1() {
        return PPANNUITYMVB1;
    }

    public boolean getPPANNUITYMVB2() {
        return PPANNUITYMVB2;
    }

    public boolean getPPANNUITYMVB3() {
        return PPANNUITYMVB3;
    }

    public byte getRELEASEEQUITY1() {
        return RELEASEEQUITY1;
    }

    public byte getRELEASEEQUITY2() {
        return RELEASEEQUITY2;
    }

    public byte getRELEASEEQUITY3() {
        return RELEASEEQUITY3;
    }

    public double getRENTAMOUNT() {
        return RENTAMOUNT;
    }

    public byte getRENTPERIOD() {
        return RENTPERIOD;
    }

    public boolean getRENTSPECIFY() {
        return RENTSPECIFY;
    }

    public byte getSOURC2PMULTI1() {
        return SOURC2PMULTI1;
    }

    public byte getSOURC2PMULTI2() {
        return SOURC2PMULTI2;
    }

    public byte getSOURC2PMULTI3() {
        return SOURC2PMULTI3;
    }

    public byte getSOURC2PMULTI4() {
        return SOURC2PMULTI4;
    }

    public byte getSOURC2PMULTI5() {
        return SOURC2PMULTI5;
    }

    public byte getSOURC2PMULTI6() {
        return SOURC2PMULTI6;
    }

    public boolean getSOURC2PMULTI7() {
        return SOURC2PMULTI7;
    }

    public boolean getSOURC2PMULTI8() {
        return SOURC2PMULTI8;
    }

    public boolean getSOURC2PMULTI9() {
        return SOURC2PMULTI9;
    }

    public double getW1W5WGT() {
        return W1W5WGT;
    }

    public double getW4_LONGWGT() {
        return W4_LONGWGT;
    }

    public double getW5XSHHWGT() {
        return W5XSHHWGT;
    }

    public double getW5XSPERSWGT() {
        return W5XSPERSWGT;
    }

    public byte getWPRINF() {
        return WPRINF;
    }

    public short getXSOC2010() {
        return XSOC2010;
    }

    public short getYEARW4() {
        return YEARW4;
    }


    public WaAS_W5PRecord(WaAS_RecordID i, String line) throws Exception {
        super(i);
        s = line.split("\t");
        initPERSONW1(s[0]);
        initYEARW1(s[1]);
        initMONTHW1(s[2]);
        initPERSONW2(s[3]);
        initYEARW2(s[4]);
        initMONTHW2(s[5]);
        initPERSONW3(s[6]);
        initYEARW3(s[7]);
        initMONTHW3(s[8]);
        initPERSONW4(s[9]);
        initYEARW4(s[10]);
        initMONTHW4(s[11]);
        initPERSONW5(s[12]);
        initYEAR(s[13]);
        initMONTH(s[14]);
        initTYPE(s[15]);
        initP_FLAG1(s[16]);
        initP_FLAG3(s[17]);
        initP_FLAG4(s[18]);
        initW5XSPERSWGT(s[19]);
        initW5XSHHWGT(s[20]);
        initW4_LONGWGT(s[21]);
        initW1W5WGT(s[22]);
        initIOUT1(s[23]);
        initHOUT(s[24]);
        initUPROP1(s[25]);
        initUPROP2(s[26]);
        initUPROP3(s[27]);
        initUPROP4(s[28]);
        initUPROP5(s[29]);
        initUNMTYP(s[30]);
        initUNUMHS(s[31]);
        initUBUYLET(s[32]);
        initUNUMBD(s[33]);
        initUNUMLA(s[34]);
        initUNUMOV(s[35]);
        initUNUMRE(s[36]);
        initUPRTYP1(s[37]);
        initUPRTYP2(s[38]);
        initUPRTYP3(s[39]);
        initUPRTYP4(s[40]);
        initUPRTYP5(s[41]);
        initUPRTYP6(s[42]);
        initUPRTYP7(s[43]);
        initUPRTYP8(s[44]);
        initUPRTYP9(s[45]);
        initUPRTYP10(s[46]);
        initUPRTYP11(s[47]);
        initUPRTYP12(s[48]);
        initUPRTYP13(s[49]);
        initUPRTYP14(s[50]);
        initUPRTYP15(s[51]);
        initUPRTYP16(s[52]);
        initUPRTYP17(s[53]);
        initUPRTYP18(s[54]);
        initUPRSH1(s[55]);
        initUPRSH2(s[56]);
        initUPRSH3(s[57]);
        initUPRSH4(s[58]);
        initUPRSH5(s[59]);
        initUBUYTOL1(s[60]);
        initUBUYTOL2(s[61]);
        initUBUYTOL3(s[62]);
        initUBUYTOL4(s[63]);
        initUBUYTOL5(s[64]);
        initUBUYTOL6(s[65]);
        initUBUYTOL7(s[66]);
        initUBUYTOL8(s[67]);
        initUBUYTOL9(s[68]);
        initUBUYTOL10(s[69]);
        initUBUYTOL11(s[70]);
        initUBUYTOL12(s[71]);
        initUDEBTBS_I(s[72]);
        initUDEBTBS_IFLAG(s[73]);
        initUDEBTBL_I(s[74]);
        initUDEBTBL_IFLAG(s[75]);
        initUDEBTBO_I(s[76]);
        initUDEBTBO_IFLAG(s[77]);
        initUDEBTBLU_I(s[78]);
        initUDEBTBLU_IFLAG(s[79]);
        initUDEBTBOS_I(s[80]);
        initUDEBTBOS_IFLAG(s[81]);
        initUDEBTBOR_I(s[82]);
        initUDEBTBOR_IFLAG(s[83]);
        initUDEBTS_I(s[84]);
        initUDEBTS_IFLAG(s[85]);
        initUDEBTL_I(s[86]);
        initUDEBTL_IFLAG(s[87]);
        initUDEBTO_I(s[88]);
        initUDEBTO_IFLAG(s[89]);
        initUDEBTLU_I(s[90]);
        initUDEBTLU_IFLAG(s[91]);
        initUDEBTOS_I(s[92]);
        initUDEBTOS_IFLAG(s[93]);
        initUDEBTOR_I(s[94]);
        initUDEBTOR_IFLAG(s[95]);
        initUPROP1_I(s[96]);
        initUPROP2_I(s[97]);
        initUPROP3_I(s[98]);
        initUPROP4_I(s[99]);
        initUPROP5_I(s[100]);
        initUPROP6_I(s[101]);
        initUNUMHS_I(s[102]);
        initUNUMHS_IFLAG(s[103]);
        initUBUYLET_I(s[104]);
        initUBUYLET_IFLAG(s[105]);
        initUNUMBD_I(s[106]);
        initUNUMBD_IFLAG(s[107]);
        initUNUMLA_I(s[108]);
        initUNUMLA_IFLAG(s[109]);
        initUNUMOV_I(s[110]);
        initUNUMOV_IFLAG(s[111]);
        initUNUMRE_I(s[112]);
        initUNUMRE_IFLAG(s[113]);
        initUVALBS_I(s[114]);
        initUVALBS_IFLAG(s[115]);
        initUVALBL_I(s[116]);
        initUVALBL_IFLAG(s[117]);
        initUVALBO_I(s[118]);
        initUVALBO_IFLAG(s[119]);
        initUVALBLU_I(s[120]);
        initUVALBLU_IFLAG(s[121]);
        initUVALBOS_I(s[122]);
        initUVALBOS_IFLAG(s[123]);
        initUVALBOR_I(s[124]);
        initUVALBOR_IFLAG(s[125]);
        initUVALS_I(s[126]);
        initUVALS_IFLAG(s[127]);
        initUVALL_I(s[128]);
        initUVALL_IFLAG(s[129]);
        initUVALO_I(s[130]);
        initUVALO_IFLAG(s[131]);
        initUVALLU_I(s[132]);
        initUVALLU_IFLAG(s[133]);
        initUVALOS_I(s[134]);
        initUVALOS_IFLAG(s[135]);
        initUVALOR_I(s[136]);
        initUVALOR_IFLAG(s[137]);
        initUGDVBS_I(s[138]);
        initUGDVBS_IFLAG(s[139]);
        initUGDVBL_I(s[140]);
        initUGDVBL_IFLAG(s[141]);
        initUGDVBOS_I(s[142]);
        initUGDVBOS_IFLAG(s[143]);
        initDVHSEDEBT(s[144]);
        initDVBLTDEBT(s[145]);
        initDVBLDDEBT(s[146]);
        initDVLUKDEBT(s[147]);
        initDVLOSDEBT(s[148]);
        initDVOPRDEBT(s[149]);
        initDVHSEVAL(s[150]);
        initDVBLTVAL(s[151]);
        initDVBLDVAL(s[152]);
        initDVLUKVAL(s[153]);
        initDVLOSVAL(s[154]);
        initDVOPRVAL(s[155]);
        initOTHMORT(s[156]);
        initHOUSGDST(s[157]);
        initBUYLGDST(s[158]);
        initHOUSGDSOST(s[159]);
        initPHYSHOUSGDST(s[160]);
        initPHYSBUYLGDST(s[161]);
        initPHYSHOUSGDSOST(s[162]);
        initUVALS(s[163]);
        initUVALBS(s[164]);
        initUDEBTS(s[165]);
        initUDEBTBS(s[166]);
        initUGDVBS(s[167]);
        initUVALL(s[168]);
        initUVALBL(s[169]);
        initUDEBTL(s[170]);
        initUDEBTBL(s[171]);
        initUGDVBL(s[172]);
        initUVALO(s[173]);
        initUVALBO(s[174]);
        initUDEBTO(s[175]);
        initUDEBTBO(s[176]);
        initUVALLU(s[177]);
        initUVALBLU(s[178]);
        initUDEBTLU(s[179]);
        initUDEBTBLU(s[180]);
        initUVALOS(s[181]);
        initUVALBOS(s[182]);
        initUDEBTOS(s[183]);
        initUDEBTBOS(s[184]);
        initUGDVBOS(s[185]);
        initUVALOR(s[186]);
        initUVALBOR(s[187]);
        initUDEBTOR(s[188]);
        initUDEBTBOR(s[189]);
        initTRUST(s[190]);
        initFSACSH_I(s[191]);
        initFSNUMIN_I(s[192]);
        initFSINVAL_I(s[193]);
        initFSSHVAL_I(s[194]);
        initFSNUMSH_I(s[195]);
        initFINVTY01_I(s[196]);
        initFINVTY02_I(s[197]);
        initFINVTY03_I(s[198]);
        initFINVTY04_I(s[199]);
        initFINVTY05_I(s[200]);
        initFINVTY06_I(s[201]);
        initFINVTY07_I(s[202]);
        initFINVTY08_I(s[203]);
        initFINVTY09_I(s[204]);
        initFINVTY10_I(s[205]);
        initFINVTY11_I(s[206]);
        initFCACSH_I(s[207]);
        initFCNUMSH_I(s[208]);
        initFCNUMIN_I(s[209]);
        initFCOVDSH_I(s[210]);
        initFCOVNSH_I(s[211]);
        initDCOSHV1_I(s[212]);
        initDCOSHV2_I(s[213]);
        initDCOSHV3_I(s[214]);
        initFCSHVAL_I(s[215]);
        initFCOVDIN_I(s[216]);
        initFCOVNIN_I(s[217]);
        initDCOINV1_I(s[218]);
        initDCOINV2_I(s[219]);
        initDCOINV3_I(s[220]);
        initDCOINV4_I(s[221]);
        initDCOINV5_I(s[222]);
        initFCINVAL_I(s[223]);
        initFISA1_I(s[224]);
        initFISA2_I(s[225]);
        initFCISAV_I(s[226]);
        initFIISAV_I(s[227]);
        initFKISAV_I(s[228]);
        initFBONDV_I(s[229]);
        initFCOLLV_I(s[230]);
        initFESHA_I(s[231]);
        initFESHAV_I(s[232]);
        initFEOPTV_I(s[233]);
        initFSHARE1_I(s[234]);
        initFSHARE2_I(s[235]);
        initFSHARE3_I(s[236]);
        initFSHUKV_I(s[237]);
        initFSHOSV_I(s[238]);
        initFNSVAL_I(s[239]);
        initFGILTS1_I(s[240]);
        initFGILTS2_I(s[241]);
        initFGILTS3_I(s[242]);
        initFGILTS4_I(s[243]);
        initFGLTUKV_I(s[244]);
        initFGLTFOV_I(s[245]);
        initFINS_I(s[246]);
        initFINSV_I(s[247]);
        initFLPROD1_I(s[248]);
        initFLPROD2_I(s[249]);
        initFLPROD3_I(s[250]);
        initFLPROD4_I(s[251]);
        initFLFENV_I(s[252]);
        initFLFSIV_I(s[253]);
        initFLFFSV_I(s[254]);
        initFLFTEV_I(s[255]);
        initFINVOTV_I(s[256]);
        initFSACSH_IFLAG(s[257]);
        initFSNUMIN_IFLAG(s[258]);
        initFSSHVAL_IFLAG(s[259]);
        initFSINVAL_IFLAG(s[260]);
        initFSNUMSH_IFLAG(s[261]);
        initFINVTY_IFLAG(s[262]);
        initFCACSH_IFLAG(s[263]);
        initFCNUMSH_IFLAG(s[264]);
        initFCNUMIN_IFLAG(s[265]);
        initFCOVDSH_IFLAG(s[266]);
        initFCOVNSH_IFLAG(s[267]);
        initDCOSHV1_IFLAG(s[268]);
        initDCOSHV2_IFLAG(s[269]);
        initDCOSHV3_IFLAG(s[270]);
        initFCSHVAL_IFLAG(s[271]);
        initFCOVDIN_IFLAG(s[272]);
        initFCOVNIN_IFLAG(s[273]);
        initDCOINV1_IFLAG(s[274]);
        initDCOINV2_IFLAG(s[275]);
        initDCOINV3_IFLAG(s[276]);
        initDCOINV4_IFLAG(s[277]);
        initDCOINV5_IFLAG(s[278]);
        initFCINVAL_IFLAG(s[279]);
        initFISA1_IFLAG(s[280]);
        initFISA2_IFLAG(s[281]);
        initFCISAV_IFLAG(s[282]);
        initFIISAV_IFLAG(s[283]);
        initFKISAV_IFLAG(s[284]);
        initFBONDV_IFLAG(s[285]);
        initFCOLLV_IFLAG(s[286]);
        initFESHA_IFLAG(s[287]);
        initFESHAV_IFLAG(s[288]);
        initFEOPTV_IFLAG(s[289]);
        initFSHARE1_IFLAG(s[290]);
        initFSHARE2_IFLAG(s[291]);
        initFSHARE3_IFLAG(s[292]);
        initFSHUKV_IFLAG(s[293]);
        initFSHOSV_IFLAG(s[294]);
        initFNSVAL_IFLAG(s[295]);
        initFGILTS1_IFLAG(s[296]);
        initFGILTS2_IFLAG(s[297]);
        initFGILTS3_IFLAG(s[298]);
        initFGILTS4_IFLAG(s[299]);
        initFGLTUKV_IFLAG(s[300]);
        initFGLTFOV_IFLAG(s[301]);
        initFINS_IFLAG(s[302]);
        initFINSV_IFLAG(s[303]);
        initFLPROD1_IFLAG(s[304]);
        initFLPROD2_IFLAG(s[305]);
        initFLPROD3_IFLAG(s[306]);
        initFLPROD4_IFLAG(s[307]);
        initFLFENV_IFLAG(s[308]);
        initFLFSIV_IFLAG(s[309]);
        initFLFFSV_IFLAG(s[310]);
        initFLFTEV_IFLAG(s[311]);
        initFINVOTV_IFLAG(s[312]);
        initPINC(s[313]);
        initCURRAC(s[314]);
        initHASSHAC(s[315]);
        initCACRNUM(s[316]);
        initDVSHCVAL(s[317]);
        initCAODNUM(s[318]);
        initDVSHODVAL1(s[319]);
        initDVSHODVAL2(s[320]);
        initDVSHODVAL3(s[321]);
        initDVFCINVAL(s[322]);
        initDVCOINV1(s[323]);
        initDVCOINV2(s[324]);
        initDVCOINV3(s[325]);
        initDVCOINV4(s[326]);
        initDVCOINV5(s[327]);
        initDVCACRVAL_SUM(s[328]);
        initDVCAODVAL_SUM(s[329]);
        initDVCAVAL_SUM(s[330]);
        initDLANY_I(s[331]);
        initDLNUM_I(s[332]);
        initDLTYPE1_I(s[333]);
        initDLTYPE2_I(s[334]);
        initDLTYPE3_I(s[335]);
        initDLTYPE4_I(s[336]);
        initDLTYPE5_I(s[337]);
        initDLINS1_I(s[338]);
        initDLINS2_I(s[339]);
        initDLINS3_I(s[340]);
        initDLINS4_I(s[341]);
        initDLINS5_I(s[342]);
        initDLEST1_I(s[343]);
        initDLEST2_I(s[344]);
        initDLEST3_I(s[345]);
        initDLEST4_I(s[346]);
        initDLEST5_I(s[347]);
        initDLOFT1_I(s[348]);
        initDLOFT2_I(s[349]);
        initDLOFT3_I(s[350]);
        initDLOFT4_I(s[351]);
        initDLOFT5_I(s[352]);
        initDLWHNY1_I(s[353]);
        initDLWHNY2_I(s[354]);
        initDLWHNY3_I(s[355]);
        initDLWHNY4_I(s[356]);
        initDLWHNY5_I(s[357]);
        initDLWHNM1_I(s[358]);
        initDLWHNM2_I(s[359]);
        initDLWHNM3_I(s[360]);
        initDLWHNM4_I(s[361]);
        initDLWHNM5_I(s[362]);
        initDSLAMT1_I(s[363]);
        initDSLAMT2_I(s[364]);
        initDSLAMT3_I(s[365]);
        initDSLAMT4_I(s[366]);
        initDSLAMT5_I(s[367]);
        initDSLEST1_I(s[368]);
        initDSLEST2_I(s[369]);
        initDSLEST3_I(s[370]);
        initDSLEST4_I(s[371]);
        initDSLEST5_I(s[372]);
        initNWLN_I(s[373]);
        initNWLNNO_I(s[374]);
        initDNEWLTYPE1_I(s[375]);
        initDNEWLTYPE2_I(s[376]);
        initDNEWLTYPE3_I(s[377]);
        initDNEWLOWE1_I(s[378]);
        initDNEWLOWE2_I(s[379]);
        initDNEWLOWE3_I(s[380]);
        initDNEWLOWEB1_I(s[381]);
        initDNEWLOWEB2_I(s[382]);
        initDNEWLOWEB3_I(s[383]);
        initDLBEH1_I(s[384]);
        initDLBEH2_I(s[385]);
        initDLBEH3_I(s[386]);
        initDLBEH4_I(s[387]);
        initDLBEH5_I(s[388]);
        initDLOWE1_I(s[389]);
        initDLOWE2_I(s[390]);
        initDLOWE3_I(s[391]);
        initDLOWE4_I(s[392]);
        initDLOWE5_I(s[393]);
        initDLANY_IFLAG(s[394]);
        initDLNUM_IFLAG(s[395]);
        initDLTYPE1_IFLAG(s[396]);
        initDLTYPE2_IFLAG(s[397]);
        initDLTYPE3_IFLAG(s[398]);
        initDLTYPE4_IFLAG(s[399]);
        initDLTYPE5_IFLAG(s[400]);
        initDLINS1_IFLAG(s[401]);
        initDLINS2_IFLAG(s[402]);
        initDLINS3_IFLAG(s[403]);
        initDLINS4_IFLAG(s[404]);
        initDLINS5_IFLAG(s[405]);
        initDLEST1_IFLAG(s[406]);
        initDLEST2_IFLAG(s[407]);
        initDLEST3_IFLAG(s[408]);
        initDLEST4_IFLAG(s[409]);
        initDLEST5_IFLAG(s[410]);
        initDLOFT1_IFLAG(s[411]);
        initDLOFT2_IFLAG(s[412]);
        initDLOFT3_IFLAG(s[413]);
        initDLOFT4_IFLAG(s[414]);
        initDLOFT5_IFLAG(s[415]);
        initDLWHNY1_IFLAG(s[416]);
        initDLWHNY2_IFLAG(s[417]);
        initDLWHNY3_IFLAG(s[418]);
        initDLWHNY4_IFLAG(s[419]);
        initDLWHNY5_IFLAG(s[420]);
        initDLWHNM1_IFLAG(s[421]);
        initDLWHNM2_IFLAG(s[422]);
        initDLWHNM3_IFLAG(s[423]);
        initDLWHNM4_IFLAG(s[424]);
        initDLWHNM5_IFLAG(s[425]);
        initDSLAMT1_IFLAG(s[426]);
        initDSLAMT2_IFLAG(s[427]);
        initDSLAMT3_IFLAG(s[428]);
        initDSLAMT4_IFLAG(s[429]);
        initDSLAMT5_IFLAG(s[430]);
        initDSLEST1_IFLAG(s[431]);
        initDSLEST2_IFLAG(s[432]);
        initDSLEST3_IFLAG(s[433]);
        initDSLEST4_IFLAG(s[434]);
        initNWLN_IFLAG(s[435]);
        initNWLNNO_IFLAG(s[436]);
        initDNEWLTYPE1_IFLAG(s[437]);
        initDNEWLTYPE2_IFLAG(s[438]);
        initDNEWLTYPE3_IFLAG(s[439]);
        initDNEWLOWE1_IFLAG(s[440]);
        initDNEWLOWE2_IFLAG(s[441]);
        initDNEWLOWE3_IFLAG(s[442]);
        initDNEWLOWEB1_IFLAG(s[443]);
        initDNEWLOWEB2_IFLAG(s[444]);
        initDNEWLOWEB3_IFLAG(s[445]);
        initDLBEH1_IFLAG(s[446]);
        initDLBEH2_IFLAG(s[447]);
        initDLBEH3_IFLAG(s[448]);
        initDLBEH4_IFLAG(s[449]);
        initDLBEH5_IFLAG(s[450]);
        initDLOWE1_IFLAG(s[451]);
        initDLOWE2_IFLAG(s[452]);
        initDLOWE3_IFLAG(s[453]);
        initDLOWE4_IFLAG(s[454]);
        initDLOWE5_IFLAG(s[455]);
        initDHBANY01_I(s[456]);
        initDHBANY02_I(s[457]);
        initDHBANY03_I(s[458]);
        initDHBANY04_I(s[459]);
        initDHBANY05_I(s[460]);
        initDHBANY06_I(s[461]);
        initDHBANY07_I(s[462]);
        initDHBEST01_I(s[463]);
        initDHBEST02_I(s[464]);
        initDHBEST03_I(s[465]);
        initDHBEST04_I(s[466]);
        initDHBEST05_I(s[467]);
        initDHBEST06_I(s[468]);
        initDHBEST07_I(s[469]);
        initDHBEST08_I(s[470]);
        initDHBEST09_I(s[471]);
        initDHBEST10_I(s[472]);
        initDHBEST11_I(s[473]);
        initDHBAMT01_I(s[474]);
        initDHBAMT02_I(s[475]);
        initDHBAMT03_I(s[476]);
        initDHBAMT04_I(s[477]);
        initDHBAMT05_I(s[478]);
        initDHBAMT06_I(s[479]);
        initDHBAMT07_I(s[480]);
        initDHBAMT08_I(s[481]);
        initDHBAMT09_I(s[482]);
        initDHBAMT10_I(s[483]);
        initDHBAMT11_I(s[484]);
        initCACTF_I(s[485]);
        initCAJISA_I(s[486]);
        initCASAV_I(s[487]);
        initCACTVB_I(s[488]);
        initCACTV_I(s[489]);
        initCASVB_I(s[490]);
        initCASVV_I(s[491]);
        initFINFSAV1_I(s[492]);
        initFINFSAV2_I(s[493]);
        initFINFSAV3_I(s[494]);
        initFINFSAV4_I(s[495]);
        initFLOANVB_I(s[496]);
        initFINFVB_I(s[497]);
        initFINFLV_I(s[498]);
        initFINFV_I(s[499]);
        initDHBANY01_IFLAG(s[500]);
        initDHBANY02_IFLAG(s[501]);
        initDHBANY03_IFLAG(s[502]);
        initDHBANY04_IFLAG(s[503]);
        initDHBANY05_IFLAG(s[504]);
        initDHBANY06_IFLAG(s[505]);
        initDHBANY07_IFLAG(s[506]);
        initDHBEST01_IFLAG(s[507]);
        initDHBEST02_IFLAG(s[508]);
        initDHBEST03_IFLAG(s[509]);
        initDHBEST04_IFLAG(s[510]);
        initDHBEST05_IFLAG(s[511]);
        initDHBEST06_IFLAG(s[512]);
        initDHBEST07_IFLAG(s[513]);
        initDHBEST08_IFLAG(s[514]);
        initDHBEST09_IFLAG(s[515]);
        initDHBEST10_IFLAG(s[516]);
        initDHBEST11_IFLAG(s[517]);
        initDHBAMT01_IFLAG(s[518]);
        initDHBAMT02_IFLAG(s[519]);
        initDHBAMT03_IFLAG(s[520]);
        initDHBAMT04_IFLAG(s[521]);
        initDHBAMT05_IFLAG(s[522]);
        initDHBAMT06_IFLAG(s[523]);
        initDHBAMT07_IFLAG(s[524]);
        initDHBAMT08_IFLAG(s[525]);
        initDHBAMT09_IFLAG(s[526]);
        initDHBAMT10_IFLAG(s[527]);
        initDHBAMT11_IFLAG(s[528]);
        initCACTF_IFLAG(s[529]);
        initCAJISA_IFLAG(s[530]);
        initCASAV_IFLAG(s[531]);
        initCACTVB_IFLAG(s[532]);
        initCACTV_IFLAG(s[533]);
        initCASVB_IFLAG(s[534]);
        initCASVV_IFLAG(s[535]);
        initFINFSAV1_IFLAG(s[536]);
        initFINFSAV2_IFLAG(s[537]);
        initFINFSAV3_IFLAG(s[538]);
        initFINFSAV4_IFLAG(s[539]);
        initFLOANVB_IFLAG(s[540]);
        initFINFVB_IFLAG(s[541]);
        initFINFLV_IFLAG(s[542]);
        initFINFV_IFLAG(s[543]);
        initSAVDEP(s[544]);
        initHASSHSAC(s[545]);
        initSAVNUM(s[546]);
        initDVSHSVAL(s[547]);
        initDVFSINVAL(s[548]);
        initDVSAVAL_SUM(s[549]);
        initDVELARR(s[550]);
        initDVGASARR(s[551]);
        initDVCTARR(s[552]);
        initDVTELARR(s[553]);
        initDVWATARR(s[554]);
        initDVRNTARR(s[555]);
        initDVCHMARR(s[556]);
        initDVCRTARR(s[557]);
        initDVTAXARR(s[558]);
        initDVVATARR(s[559]);
        initDVOTHARR(s[560]);
        initDVANYARR(s[561]);
        initTOTBILLARR_SUM(s[562]);
        initHASISA(s[563]);
        initHASBOND(s[564]);
        initHASUTRUST(s[565]);
        initHASEMPSH(s[566]);
        initHASOTHSH(s[567]);
        initHASNSP(s[568]);
        initHASGILT(s[569]);
        initHASLINS(s[570]);
        initHASOINV(s[571]);
        initHASNOFA(s[572]);
        initDVCISAV(s[573]);
        initDVIISAV(s[574]);
        initDVKISAV(s[575]);
        initDVFNSVAL(s[576]);
        initDVFSHUKV(s[577]);
        initDVFLFENV(s[578]);
        initDVFLFSIV(s[579]);
        initDVFLFFSV(s[580]);
        initDVFLFTEV(s[581]);
        initDVFBONDV(s[582]);
        initDVFEOPTV(s[583]);
        initDVFESHAV(s[584]);
        initDVFCOLLV(s[585]);
        initDVFSHOSV(s[586]);
        initDVFGLTUKV(s[587]);
        initDVFGLTFOV(s[588]);
        initDVFINVOTV(s[589]);
        initDVFINFLV(s[590]);
        initDVFINFV(s[591]);
        initDVCACTV(s[592]);
        initDVCASVV(s[593]);
        initDVISAVAL_SUM(s[594]);
        initDVINSV_SUM(s[595]);
        initDVFESHARES_SUM(s[596]);
        initDVFINFVAL_SUM(s[597]);
        initNWFLNVAL1(s[598]);
        initNWILNVAL1(s[599]);
        initNWFLNVAL2(s[600]);
        initNWILNVAL2(s[601]);
        initNWFLNVAL3(s[602]);
        initNWILNVAL3(s[603]);
        initNWFLNVAL4(s[604]);
        initDVNWFLN_SUM(s[605]);
        initDVNWILN_SUM(s[606]);
        initLNLFT1(s[607]);
        initLNLFT2(s[608]);
        initLNLFT3(s[609]);
        initLNLFT4(s[610]);
        initLNLFT5(s[611]);
        initLNLFT6(s[612]);
        initLNLFT7(s[613]);
        initLNLFT8(s[614]);
        initLNLFT9(s[615]);
        initLNOS1(s[616]);
        initLNOS2(s[617]);
        initLNOS3(s[618]);
        initLNOS4(s[619]);
        initLNOS5(s[620]);
        initLNOS6(s[621]);
        initLNOS7(s[622]);
        initLNOS8(s[623]);
        initLNOS9(s[624]);
        initFLNOS1(s[625]);
        initFLNOS2(s[626]);
        initFLNOS3(s[627]);
        initFLNOS4(s[628]);
        initDVHASLF(s[629]);
        initDVHASPLINF(s[630]);
        initDVDLOWE1(s[631]);
        initDVDLOWE2(s[632]);
        initDVDLOWE3(s[633]);
        initDVDLOWE4(s[634]);
        initLNARR_SUM(s[635]);
        initDVHASLNAR(s[636]);
        initDMOANY_I(s[637]);
        initDMONUM_I(s[638]);
        initDMOINS1_I(s[639]);
        initDMOINS2_I(s[640]);
        initDMOOFT1_I(s[641]);
        initDMOOFT2_I(s[642]);
        initDMOWHNY1_I(s[643]);
        initDMOWHNY2_I(s[644]);
        initDMOWHNM1_I(s[645]);
        initDMOWHNM2_I(s[646]);
        initDMOBEH1_I(s[647]);
        initDMOBEH2_I(s[648]);
        initDMOOWE1_I(s[649]);
        initDMOOWE2_I(s[650]);
        initDMOANY_IFLAG(s[651]);
        initDMONUM_IFLAG(s[652]);
        initDMOINS1_IFLAG(s[653]);
        initDMOINS2_IFLAG(s[654]);
        initDMOOFT1_IFLAG(s[655]);
        initDMOOFT2_IFLAG(s[656]);
        initDMOWHNY1_IFLAG(s[657]);
        initDMOWHNY2_IFLAG(s[658]);
        initDMOWHNM1_IFLAG(s[659]);
        initDMOWHNM2_IFLAG(s[660]);
        initDMOBEH1_IFLAG(s[661]);
        initDMOBEH2_IFLAG(s[662]);
        initDMOOWE1_IFLAG(s[663]);
        initDMOOWE2_IFLAG(s[664]);
        initMOLFT1(s[665]);
        initMOLFT2(s[666]);
        initMOOS1(s[667]);
        initMOOS2(s[668]);
        initTOTMO_SUM(s[669]);
        initDVDMOOWE1(s[670]);
        initDVDMOOWE2(s[671]);
        initMOARR_SUM(s[672]);
        initDVHASMOAR(s[673]);
        initCCAC1_I(s[674]);
        initCCAC1_IFLAG(s[675]);
        initDCAMOS1_I(s[676]);
        initDCAMOS1_IFLAG(s[677]);
        initCCAC2_I(s[678]);
        initCCAC2_IFLAG(s[679]);
        initDCAMOS2_I(s[680]);
        initDCAMOS2_IFLAG(s[681]);
        initCCAC3_I(s[682]);
        initCCAC3_IFLAG(s[683]);
        initDCAMOS3_I(s[684]);
        initDCAMOS3_IFLAG(s[685]);
        initSCAC1_I(s[686]);
        initSCAC1_IFLAG(s[687]);
        initDSAMOS1_I(s[688]);
        initDSAMOS1_IFLAG(s[689]);
        initSCAC2_I(s[690]);
        initSCAC2_IFLAG(s[691]);
        initDSAMOS2_I(s[692]);
        initDSAMOS2_IFLAG(s[693]);
        initSCAC3_I(s[694]);
        initSCAC3_IFLAG(s[695]);
        initDSAMOS3_I(s[696]);
        initDSAMOS3_IFLAG(s[697]);
        initTOTSC_SUM(s[698]);
        initHASSC(s[699]);
        initTOTCC_SUM(s[700]);
        initHASCC(s[701]);
        initOSLC1(s[702]);
        initOSLC2(s[703]);
        initOSLC3(s[704]);
        initNSLC1(s[705]);
        initNSLC2(s[706]);
        initNSLC3(s[707]);
        initOSLBNK1(s[708]);
        initOSLBNK2(s[709]);
        initOSLBNK3(s[710]);
        initNSLBNK1(s[711]);
        initNSLBNK2(s[712]);
        initNSLBNK3(s[713]);
        initTOTSLC_SUM(s[714]);
        initTOTSLBNK_SUM(s[715]);
        initDVHASSLC(s[716]);
        initDVHASSLBNK(s[717]);
        initDHPBEH1_I(s[718]);
        initDHPBEH2_I(s[719]);
        initDHPOWE1_I(s[720]);
        initDHPOWE2_I(s[721]);
        initDHPANY1_I(s[722]);
        initDHPANY2_I(s[723]);
        initDHPANY3_I(s[724]);
        initDHPNUM_I(s[725]);
        initDHPOFT1_I(s[726]);
        initDHPOFT2_I(s[727]);
        initDHPINS1_I(s[728]);
        initDHPINS2_I(s[729]);
        initDHPWHNY1_I(s[730]);
        initDHPWHNM1_I(s[731]);
        initDHPWHNY2_I(s[732]);
        initDHPWHNM2_I(s[733]);
        initDHPBEH1_IFLAG(s[734]);
        initDHPBEH2_IFLAG(s[735]);
        initDHPOWE1_IFLAG(s[736]);
        initDHPOWE2_IFLAG(s[737]);
        initDHPANY1_IFLAG(s[738]);
        initDHPANY2_IFLAG(s[739]);
        initDHPANY3_IFLAG(s[740]);
        initDHPNUM_IFLAG(s[741]);
        initDHPOFT1_IFLAG(s[742]);
        initDHPOFT2_IFLAG(s[743]);
        initDHPINS1_IFLAG(s[744]);
        initDHPINS2_IFLAG(s[745]);
        initDHPWHNY1_IFLAG(s[746]);
        initDHPWHNM1_IFLAG(s[747]);
        initDHPWHNY2_IFLAG(s[748]);
        initDHPWHNM2_IFLAG(s[749]);
        initDCNUM2(s[750]);
        initDCANY(s[751]);
        initDCANU(s[752]);
        initDCNUM1(s[753]);
        initDCCOS1(s[754]);
        initDCCSP1(s[755]);
        initDCNAM1(s[756]);
        initDCONM1(s[757]);
        initDCONM2(s[758]);
        initDCRSP1(s[759]);
        initDCREC1(s[760]);
        initDCPER1(s[761]);
        initDCAMC1(s[762]);
        initDCAMP1(s[763]);
        initDCAMD1(s[764]);
        initDCESB1(s[765]);
        initDCINZ1(s[766]);
        initDC12BEH1(s[767]);
        initDC12OWE1(s[768]);
        initDCBE2YR1(s[769]);
        initDCARRCL01(s[770]);
        initDCARRCL02(s[771]);
        initDCARRCL03(s[772]);
        initDCARRCL04(s[773]);
        initDCCOS2(s[774]);
        initDCCSP2(s[775]);
        initDCNAM2(s[776]);
        initDCONM3(s[777]);
        initDCONM4(s[778]);
        initDCRSP2(s[779]);
        initDCREC2(s[780]);
        initDCPER2(s[781]);
        initDCAMC2(s[782]);
        initDCAMP2(s[783]);
        initDCAMD2(s[784]);
        initDCESB2(s[785]);
        initDCINZ2(s[786]);
        initDC12BEH2(s[787]);
        initDC12OWE2(s[788]);
        initDCBE2YR2(s[789]);
        initDCCOS3(s[790]);
        initDCCSP3(s[791]);
        initDCNAM3(s[792]);
        initDCONM5(s[793]);
        initDCONM6(s[794]);
        initDCRSP3(s[795]);
        initDCREC3(s[796]);
        initDCPER3(s[797]);
        initDCAMC3(s[798]);
        initDCAMP3(s[799]);
        initDCAMD3(s[800]);
        initDCESB3(s[801]);
        initDCINZ3(s[802]);
        initDC12BEH3(s[803]);
        initDC12OWE3(s[804]);
        initDCBE2YR3(s[805]);
        initDVCCARDNUM_I(s[806]);
        initDVCCARDNUM_IFLAG(s[807]);
        initDVCCARDYN_I(s[808]);
        initDVCCARDYN_IFLAG(s[809]);
        initDSNUM2(s[810]);
        initDSANY1(s[811]);
        initDSANY2(s[812]);
        initDSANU1(s[813]);
        initDSANU2(s[814]);
        initDSNUM1(s[815]);
        initDSCOS1(s[816]);
        initDSCSP1(s[817]);
        initDSNAM1(s[818]);
        initDSONM1(s[819]);
        initDSONM2(s[820]);
        initDSREC1(s[821]);
        initDSPER1(s[822]);
        initDSAMC1(s[823]);
        initDSAMP1(s[824]);
        initDSAMD1(s[825]);
        initDSESB1(s[826]);
        initDS12BEH1(s[827]);
        initDS12OWE1(s[828]);
        initDSCOS2(s[829]);
        initDSCSP2(s[830]);
        initDSNAM2(s[831]);
        initDSONM3(s[832]);
        initDSONM4(s[833]);
        initDSREC2(s[834]);
        initDSPER2(s[835]);
        initDSAMC2(s[836]);
        initDSAMP2(s[837]);
        initDSAMD2(s[838]);
        initDSESB2(s[839]);
        initDS12BEH2(s[840]);
        initDS12OWE2(s[841]);
        initDSCOS3(s[842]);
        initDSCSP3(s[843]);
        initDSNAM3(s[844]);
        initDSONM5(s[845]);
        initDSONM6(s[846]);
        initDSREC3(s[847]);
        initDSPER3(s[848]);
        initDSAMC3(s[849]);
        initDSAMP3(s[850]);
        initDSAMD3(s[851]);
        initDSESB3(s[852]);
        initDS12BEH3(s[853]);
        initDS12OWE3(s[854]);
        initDVSCARDNUM_I(s[855]);
        initDVSCARDNUM_IFLAG(s[856]);
        initDVSCARDYN_I(s[857]);
        initDVSCARDYN_IFLAG(s[858]);
        initPRESMON(s[859]);
        initPRESYR(s[860]);
        initDMOANY(s[861]);
        initDMONUM(s[862]);
        initDMOINS1(s[863]);
        initDMOEST1(s[864]);
        initDMOOFT1(s[865]);
        initDMOWHNY1(s[866]);
        initDMOWHNM1(s[867]);
        initDMOWEST1(s[868]);
        initDMOINT1(s[869]);
        initDMOBEH1(s[870]);
        initDMOOWE1(s[871]);
        initDMOINS2(s[872]);
        initDMOEST2(s[873]);
        initDMOOFT2(s[874]);
        initDMOWHNY2(s[875]);
        initDMOWHNM2(s[876]);
        initDMOWEST2(s[877]);
        initDMOINT2(s[878]);
        initDMOBEH2(s[879]);
        initDMOOWE2(s[880]);
        initDHPANY1(s[881]);
        initDHPANY2(s[882]);
        initDHPANY3(s[883]);
        initDHPNUM(s[884]);
        initDHPINS1(s[885]);
        initDHPEST1(s[886]);
        initDHPOFT1(s[887]);
        initDHPWHNY1(s[888]);
        initDHPWHNM1(s[889]);
        initDHPWEST1(s[890]);
        initDHPINT1(s[891]);
        initDHPBEH1(s[892]);
        initDHPOWE1(s[893]);
        initDHPINS2(s[894]);
        initDHPEST2(s[895]);
        initDHPOFT2(s[896]);
        initDHPWHNY2(s[897]);
        initDHPWHNM2(s[898]);
        initDHPWEST2(s[899]);
        initDHPINT2(s[900]);
        initDHPBEH2(s[901]);
        initDHPOWE2(s[902]);
        initDLONM(s[903]);
        initDLOLD1(s[904]);
        initDLOLD2(s[905]);
        initDLOLD3(s[906]);
        initDLOLD4(s[907]);
        initDLOLD5(s[908]);
        initDLANY(s[909]);
        initDLNNM(s[910]);
        initDLNUM(s[911]);
        initDLTYPE1(s[912]);
        initDSLPAY1(s[913]);
        initDSLAMT1(s[914]);
        initDSLEST1(s[915]);
        initDLWHY1(s[916]);
        initDLWHY2(s[917]);
        initDLWHY3(s[918]);
        initDLWHY4(s[919]);
        initDLWHY5(s[920]);
        initDLWHY6(s[921]);
        initDLWHY7(s[922]);
        initDLSEC1(s[923]);
        initDLINS1(s[924]);
        initDLEST1(s[925]);
        initDLOFT1(s[926]);
        initDLWHNY1(s[927]);
        initDLWHNM1(s[928]);
        initDLWEST1(s[929]);
        initDLINT1(s[930]);
        initDLBEH1(s[931]);
        initDLOWE1(s[932]);
        initDLTYPE2(s[933]);
        initDSLPAY2(s[934]);
        initDSLAMT2(s[935]);
        initDSLEST2(s[936]);
        initDLWHY8(s[937]);
        initDLWHY9(s[938]);
        initDLWHY10(s[939]);
        initDLSEC2(s[940]);
        initDLINS2(s[941]);
        initDLEST2(s[942]);
        initDLOFT2(s[943]);
        initDLWHNY2(s[944]);
        initDLWHNM2(s[945]);
        initDLWEST2(s[946]);
        initDLINT2(s[947]);
        initDLBEH2(s[948]);
        initDLOWE2(s[949]);
        initDLTYPE3(s[950]);
        initDSLPAY3(s[951]);
        initDSLAMT3(s[952]);
        initDSLEST3(s[953]);
        initDLWHY15(s[954]);
        initDLWHY16(s[955]);
        initDLSEC3(s[956]);
        initDLINS3(s[957]);
        initDLEST3(s[958]);
        initDLOFT3(s[959]);
        initDLWHNY3(s[960]);
        initDLWHNM3(s[961]);
        initDLWEST3(s[962]);
        initDLINT3(s[963]);
        initDLBEH3(s[964]);
        initDLOWE3(s[965]);
        initDLTYPE4(s[966]);
        initDSLPAY4(s[967]);
        initDSLAMT4(s[968]);
        initDSLEST4(s[969]);
        initDLWHY22(s[970]);
        initDLWHY23(s[971]);
        initDLSEC4(s[972]);
        initDLINS4(s[973]);
        initDLEST4(s[974]);
        initDLOFT4(s[975]);
        initDLWHNY4(s[976]);
        initDLWHNM4(s[977]);
        initDLWEST4(s[978]);
        initDLINT4(s[979]);
        initDLBEH4(s[980]);
        initDLOWE4(s[981]);
        initDLTYPE5(s[982]);
        initDSLPAY5(s[983]);
        initDSLAMT5(s[984]);
        initDSLEST5(s[985]);
        initDLWHY29(s[986]);
        initDLWHY30(s[987]);
        initDLSEC5(s[988]);
        initDLINS5(s[989]);
        initDLEST5(s[990]);
        initDLOFT5(s[991]);
        initDLWHNY5(s[992]);
        initDLWHNM5(s[993]);
        initDLWEST5(s[994]);
        initDLINT5(s[995]);
        initDLBEH5(s[996]);
        initDLOWE5(s[997]);
        initNWLN(s[998]);
        initNWLNNO(s[999]);
        initDNEWLTYPE1(s[1000]);
        initDNEWLOWE1(s[1001]);
        initDNEWLOWEB1(s[1002]);
        initDNEWLTYPE2(s[1003]);
        initDNEWLOWE2(s[1004]);
        initDNEWLOWEB2(s[1005]);
        initDNEWLTYPE3(s[1006]);
        initDNEWLOWE3(s[1007]);
        initDNEWLOWEB3(s[1008]);
        initDHBFIX(s[1009]);
        initDHBANY01(s[1010]);
        initDHBANY02(s[1011]);
        initDHBANY03(s[1012]);
        initDHBANY04(s[1013]);
        initDHBANY05(s[1014]);
        initDHBANY06(s[1015]);
        initDHBANY07(s[1016]);
        initDHBANY08(s[1017]);
        initDHBANY09(s[1018]);
        initDHBANY10(s[1019]);
        initDHBANY11(s[1020]);
        initDHBAMT01(s[1021]);
        initDHBAMT02(s[1022]);
        initDHBAMT03(s[1023]);
        initDHBAMT04(s[1024]);
        initDHBAMT05(s[1025]);
        initDHBAMT06(s[1026]);
        initDHBAMT07(s[1027]);
        initDHBAMT08(s[1028]);
        initDHBAMT09(s[1029]);
        initDHBAMT10(s[1030]);
        initDHBAMT11(s[1031]);
        initDHBEST01(s[1032]);
        initDHBEST02(s[1033]);
        initDHBEST03(s[1034]);
        initDHBEST04(s[1035]);
        initDHBEST05(s[1036]);
        initDHBEST06(s[1037]);
        initDHBEST07(s[1038]);
        initDHBEST08(s[1039]);
        initDHBEST09(s[1040]);
        initDHBEST10(s[1041]);
        initDHBEST11(s[1042]);
        initFINVTY01(s[1043]);
        initFINVTY02(s[1044]);
        initFINVTY03(s[1045]);
        initFINVTY04(s[1046]);
        initFINVTY05(s[1047]);
        initFINVTY06(s[1048]);
        initFINVTY07(s[1049]);
        initFINVTY08(s[1050]);
        initFINVTY09(s[1051]);
        initFINVTY10(s[1052]);
        initFINVTY11(s[1053]);
        initDCOSHV1(s[1054]);
        initDCOSHVB1(s[1055]);
        initDCOSHV2(s[1056]);
        initDCOSHVB2(s[1057]);
        initDCOSHV3(s[1058]);
        initDCOSHVB3(s[1059]);
        initDCOSHV4(s[1060]);
        initDCOSHVB4(s[1061]);
        initDCOSHV5(s[1062]);
        initDCOSHVB5(s[1063]);
        initDCOINV1(s[1064]);
        initDCOINVB1(s[1065]);
        initDCOINV2(s[1066]);
        initDCOINVB2(s[1067]);
        initDCOINV3(s[1068]);
        initDCOINVB3(s[1069]);
        initDCOINV4(s[1070]);
        initDCOINVB4(s[1071]);
        initDCOINV5(s[1072]);
        initDCOINVB5(s[1073]);
        initFCACSH(s[1074]);
        initFCNUMSH(s[1075]);
        initFCNUMIN(s[1076]);
        initFCSUPPR(s[1077]);
        initFCOVDSH(s[1078]);
        initFCOVNSH(s[1079]);
        initFCSHVAL(s[1080]);
        initFCSHVLB(s[1081]);
        initFCOVDIN(s[1082]);
        initFCOVNIN(s[1083]);
        initFCOVDIF(s[1084]);
        initFCINVAL(s[1085]);
        initFCINVLB(s[1086]);
        initFSACSH(s[1087]);
        initFSNUMSH(s[1088]);
        initFSNUMIN(s[1089]);
        initFSSUPPR(s[1090]);
        initFSTYPSH1(s[1091]);
        initFSTYPSH2(s[1092]);
        initFSTYPSH3(s[1093]);
        initFSTYPSH4(s[1094]);
        initFSTYPIN1(s[1095]);
        initFSTYPIN2(s[1096]);
        initFSTYPIN3(s[1097]);
        initFSTYPIN4(s[1098]);
        initFSSHVAL(s[1099]);
        initFSSHVLB(s[1100]);
        initFSINVAL(s[1101]);
        initFSINVLB(s[1102]);
        initFSOSHAV(s[1103]);
        initFSOSVLB(s[1104]);
        initFISA1(s[1105]);
        initFISA2(s[1106]);
        initFCISAV(s[1107]);
        initFCISAB(s[1108]);
        initFIISAV(s[1109]);
        initFIISAB(s[1110]);
        initFKISAV(s[1111]);
        initFKISAB(s[1112]);
        initNEWFCMX(s[1113]);
        initFCISAWD(s[1114]);
        initFCIWNUM(s[1115]);
        initFCIWDAB(s[1116]);
        initFCISCE(s[1117]);
        initFBONDTY1(s[1118]);
        initFBONDTY2(s[1119]);
        initFBONDTY3(s[1120]);
        initFBONDV(s[1121]);
        initFBONDVB(s[1122]);
        initFCOLLV(s[1123]);
        initFCOLLVB(s[1124]);
        initFESHA(s[1125]);
        initFESHAV(s[1126]);
        initFESHVB(s[1127]);
        initFEOPTV(s[1128]);
        initFEOPVB(s[1129]);
        initFSHARE1(s[1130]);
        initFSHARE2(s[1131]);
        initFSHARE3(s[1132]);
        initFSHUKV(s[1133]);
        initFSHUKVB(s[1134]);
        initFSHOSV(s[1135]);
        initFSHOSVB(s[1136]);
        initFNSAV1(s[1137]);
        initFNSAV2(s[1138]);
        initFNSAV3(s[1139]);
        initFNSAV4(s[1140]);
        initFNSVAL(s[1141]);
        initFNSVB(s[1142]);
        initFGILTS1(s[1143]);
        initFGILTS2(s[1144]);
        initFGILTS3(s[1145]);
        initFGILTS4(s[1146]);
        initFGLTUKV(s[1147]);
        initFGUKVB(s[1148]);
        initFGLTFOV(s[1149]);
        initFGFOVB(s[1150]);
        initFLFENV(s[1151]);
        initFLFENVB(s[1152]);
        initFLFSIV(s[1153]);
        initFLFSIVB(s[1154]);
        initFLFFSV(s[1155]);
        initFLFFSVB(s[1156]);
        initFLFTEV(s[1157]);
        initFLFTEVB(s[1158]);
        initFINS(s[1159]);
        initFINSV(s[1160]);
        initFLPROD1(s[1161]);
        initFLPROD2(s[1162]);
        initFLPROD3(s[1163]);
        initFLPROD4(s[1164]);
        initFINVOTV(s[1165]);
        initFINVOVB(s[1166]);
        initFINCVB(s[1167]);
        initFINFSAV1(s[1168]);
        initFINFSAV2(s[1169]);
        initFINFSAV3(s[1170]);
        initFINFSAV4(s[1171]);
        initFINFLV(s[1172]);
        initFLOANVB(s[1173]);
        initFINFV(s[1174]);
        initFINFVB(s[1175]);
        initFSAVED(s[1176]);
        initFWITHD(s[1177]);
        initFSAVAB(s[1178]);
        initHPNYR1(s[1179]);
        initHPNMN1(s[1180]);
        initHPLFT1(s[1181]);
        initHPNYR2(s[1182]);
        initHPNMN2(s[1183]);
        initHPLFT2(s[1184]);
        initHPOS1(s[1185]);
        initHPOS2(s[1186]);
        initDVHASHP(s[1187]);
        initDVDHPOWE1(s[1188]);
        initDVDHPOWE2(s[1189]);
        initHPARR_SUM(s[1190]);
        initDVHPAR(s[1191]);
        initTOTNSLC_SUM(s[1192]);
        initTOTNSLBNK_SUM(s[1193]);
        initTOTOSLC_SUM(s[1194]);
        initTOTOSLBNK_SUM(s[1195]);
        initTOTNLOS_SUM(s[1196]);
        initTOTARR_EXCMORT_SUM(s[1197]);
        initHFINW_EXCENDW_SUM(s[1198]);
        initDVFFASSETS_SUM(s[1199]);
        initDVHASNLF(s[1200]);
        initDVHASNLI(s[1201]);
        initSELECTAD(s[1202]);
        initCACTF(s[1203]);
        initCAJISA(s[1204]);
        initCACTV(s[1205]);
        initCACTVB(s[1206]);
        initCATYPE1(s[1207]);
        initCATYPE2(s[1208]);
        initCAOPEN(s[1209]);
        initCACONTR1(s[1210]);
        initCACONTR2(s[1211]);
        initCACONTR3(s[1212]);
        initCACONTR4(s[1213]);
        initCACONTR5(s[1214]);
        initCACONTR6(s[1215]);
        initCAEXTRA(s[1216]);
        initCASAV(s[1217]);
        initCASVV(s[1218]);
        initCASVB(s[1219]);
        initCACONTRAM1(s[1220]);
        initCACONTRAMB1(s[1221]);
        initCACONTRAM2(s[1222]);
        initCACONTRAMB2(s[1223]);
        initCACONTRAM3(s[1224]);
        initCACONTRAMB3(s[1225]);
        initCACONTRAM4(s[1226]);
        initCACONTRAMB4(s[1227]);
        initCACONTRAM5(s[1228]);
        initCACONTRAMB5(s[1229]);
        initCACONTRAM6(s[1230]);
        initCACONTRAMB6(s[1231]);
        initCAOLDER(s[1232]);
        initCAOTHER1(s[1233]);
        initCAOTHER2(s[1234]);
        initCAOTHER3(s[1235]);
        initCAOTHER4(s[1236]);
        initCAOTHER5(s[1237]);
        initNUMCHSAV(s[1238]);
        initFINCV_IFLAG(s[1239]);
        initTOTLNS_SUM(s[1240]);
        initTOTFLNS_SUM(s[1241]);
        initTOTHP_SUM(s[1242]);
        initTOTLOS_SUM(s[1243]);
        initHFINL_SUM(s[1244]);
        initPFULRET(s[1245]);
        initPEARLRS(s[1246]);
        initOLONG(s[1247]);
        initOLONGYR(s[1248]);
        initOSAFERET(s[1249]);
        initOMAKEMOST(s[1250]);
        initOUNDER(s[1251]);
        initOPENS01(s[1252]);
        initOPENS02(s[1253]);
        initOPENS03(s[1254]);
        initOPENS04(s[1255]);
        initOPENS05(s[1256]);
        initOPENS06(s[1257]);
        initOPENS07(s[1258]);
        initOPENS08(s[1259]);
        initOPENS09(s[1260]);
        initOPENS10(s[1261]);
        initOPENS11(s[1262]);
        initOPENS12(s[1263]);
        initOPENS13(s[1264]);
        initOPENS14(s[1265]);
        initOPENS15(s[1266]);
        initOEXPINC01(s[1267]);
        initOEXPINC02(s[1268]);
        initOEXPINC03(s[1269]);
        initOEXPINC04(s[1270]);
        initOEXPINC05(s[1271]);
        initOEXPINC06(s[1272]);
        initOEXPINC07(s[1273]);
        initOEXPINC08(s[1274]);
        initOEXPINC09(s[1275]);
        initOEXPINC10(s[1276]);
        initOEXPINC11(s[1277]);
        initOEXPINC12(s[1278]);
        initOEXPINC13(s[1279]);
        initOEXPINC14(s[1280]);
        initOEXPINC15(s[1281]);
        initOLARGE(s[1282]);
        initOSTANDL(s[1283]);
        initOWAIT(s[1284]);
        initOLEFT(s[1285]);
        initOLEFTDO(s[1286]);
        initOSAV2Y(s[1287]);
        initOWHYSAV1(s[1288]);
        initOWHYSAV2(s[1289]);
        initOWHYSAV3(s[1290]);
        initOWHYSAV4(s[1291]);
        initOWHYSAV5(s[1292]);
        initOWHYSAV6(s[1293]);
        initOWHYSAV7(s[1294]);
        initOWHYSAV8(s[1295]);
        initOWHYSAV9(s[1296]);
        initONOSAVE1(s[1297]);
        initONOSAVE2(s[1298]);
        initONOSAVE3(s[1299]);
        initONOSAVE4(s[1300]);
        initONOSAVE5(s[1301]);
        initONOSAVE6(s[1302]);
        initOINTEND(s[1303]);
        initOSAVEXT(s[1304]);
        initOSVEXTO(s[1305]);
        initKNOWWPR(s[1306]);
        initWPRINF(s[1307]);
        initMORSAVRE1(s[1308]);
        initMORSAVRE2(s[1309]);
        initMORSAVRE3(s[1310]);
        initMORSAVRE4(s[1311]);
        initMORSAVRE5(s[1312]);
        initMORSAVRE6(s[1313]);
        initPSIT(s[1314]);
        initPSITF(s[1315]);
        initPNOWKRS(s[1316]);
        initPAGESTP(s[1317]);
        initPEXPRET(s[1318]);
        initPAGERET(s[1319]);
        initDBURD(s[1320]);
        initDBURDA(s[1321]);
        initDBURDW1(s[1322]);
        initDBURDW2(s[1323]);
        initDBURDW3(s[1324]);
        initDBURD___W5(s[1325]);
        initDADVMTH(s[1326]);
        initDADVACT1(s[1327]);
        initDADVACT2(s[1328]);
        initDADVACT3(s[1329]);
        initDBURDH(s[1330]);
        initOTRUST01(s[1331]);
        initOTRUST02(s[1332]);
        initOTRUST03(s[1333]);
        initOTRUST04(s[1334]);
        initOTRUST05(s[1335]);
        initOTRUST06(s[1336]);
        initOTRUST07(s[1337]);
        initOTRUST08(s[1338]);
        initOTRUST09(s[1339]);
        initOTRUST10(s[1340]);
        initOTRUST11(s[1341]);
        initOTRUST12(s[1342]);
        initOTRUST13(s[1343]);
        initOTRUST14(s[1344]);
        initOTRUST15(s[1345]);
        initOSITUAT(s[1346]);
        initOSITCH(s[1347]);
        initOIMPRS1(s[1348]);
        initOIMPRS2(s[1349]);
        initOIMPRS3(s[1350]);
        initOIMPRS4(s[1351]);
        initOIMPRS5(s[1352]);
        initOIMPRS6(s[1353]);
        initOWRSRS01(s[1354]);
        initOWRSRS02(s[1355]);
        initOWRSRS03(s[1356]);
        initOWRSRS04(s[1357]);
        initOWRSRS05(s[1358]);
        initOWRSRS06(s[1359]);
        initOWRSRS07(s[1360]);
        initORETINC(s[1361]);
        initRELEASEEQUITY1(s[1362]);
        initRELEASEEQUITY2(s[1363]);
        initRELEASEEQUITY3(s[1364]);
        initOCSVR1(s[1365]);
        initOCSVR2(s[1366]);
        initOCSVR3(s[1367]);
        initOCSVR4(s[1368]);
        initOCSVR5(s[1369]);
        initOCSVR6(s[1370]);
        initOCSVR7(s[1371]);
        initOCSVR8(s[1372]);
        initOTHASCH(s[1373]);
        initOTHASVL(s[1374]);
        initOTHASVB(s[1375]);
        initCOMMI(s[1376]);
        initORUNOUT(s[1377]);
        initORUNDO01(s[1378]);
        initORUNDO02(s[1379]);
        initORUNDO03(s[1380]);
        initORUNDO04(s[1381]);
        initORUNDO05(s[1382]);
        initORUNDO06(s[1383]);
        initORUNDO07(s[1384]);
        initORUNDO08(s[1385]);
        initIFBANKACC(s[1386]);
        initKNOWBALANCE(s[1387]);
        initOFTCHECKED(s[1388]);
        initKNOHOWMUCH(s[1389]);
        initINCDROP(s[1390]);
        initFNDCASH1(s[1391]);
        initFNDCASH2(s[1392]);
        initFNDCASH3(s[1393]);
        initFNDCASH4(s[1394]);
        initFNDCASH5(s[1395]);
        initORGNSED(s[1396]);
        initRNYDAY(s[1397]);
        initGSTDNW(s[1398]);
        initPRODTS(s[1399]);
        initSOURC2PMULTI1(s[1400]);
        initSOURC2PMULTI2(s[1401]);
        initSOURC2PMULTI3(s[1402]);
        initSOURC2PMULTI4(s[1403]);
        initSOURC2PMULTI5(s[1404]);
        initSOURC2PMULTI6(s[1405]);
        initSOURC2PMULTI7(s[1406]);
        initSOURC2PMULTI8(s[1407]);
        initSOURC2PMULTI9(s[1408]);
        initSOURC2P(s[1409]);
        initCHOICP(s[1410]);
        initEYE1(s[1411]);
        initEYE2(s[1412]);
        initEYE3(s[1413]);
        initEYE4(s[1414]);
        initEYE5(s[1415]);
        initEYE6(s[1416]);
        initEYE7(s[1417]);
        initEYE8(s[1418]);
        initINDFREQ(s[1419]);
        initADVICE(s[1420]);
        initADVNUMALL(s[1421]);
        initADJOINT1(s[1422]);
        initADJOINT2(s[1423]);
        initADJOINT3(s[1424]);
        initADWHO01(s[1425]);
        initADWHO02(s[1426]);
        initADWHO15(s[1427]);
        initADWHO16(s[1428]);
        initADWHO17(s[1429]);
        initADWHO31(s[1430]);
        initADWHO32(s[1431]);
        initADRECORD1(s[1432]);
        initADRECORD2(s[1433]);
        initADRECORD3(s[1434]);
        initADVREAS1(s[1435]);
        initADVREAS2(s[1436]);
        initADVREAS3(s[1437]);
        initADSAVINV1(s[1438]);
        initADSAVINV2(s[1439]);
        initADSAVINV3(s[1440]);
        initADSAVINV4(s[1441]);
        initADSAVINV5(s[1442]);
        initADSAVINV6(s[1443]);
        initADSAVINV7(s[1444]);
        initADSAVINV8(s[1445]);
        initADSAVINV9(s[1446]);
        initADSAVINV10(s[1447]);
        initADSAVINV11(s[1448]);
        initADSAVINV12(s[1449]);
        initADSAVINV13(s[1450]);
        initADSAVINV14(s[1451]);
        initADSAVINV15(s[1452]);
        initADSAVINV19(s[1453]);
        initADSAVINV20(s[1454]);
        initADSAVINV21(s[1455]);
        initADCONS1(s[1456]);
        initADCONS2(s[1457]);
        initADCONS3(s[1458]);
        initADTYP1(s[1459]);
        initADTYP2(s[1460]);
        initADTYP3(s[1461]);
        initADSAT1(s[1462]);
        initADSAT2(s[1463]);
        initADSAT3(s[1464]);
        initADSATREFLECT1(s[1465]);
        initADSATREFLECT2(s[1466]);
        initADSATREFLECT3(s[1467]);
        initADPROD1(s[1468]);
        initADPROD2(s[1469]);
        initADPROD3(s[1470]);
        initADPURCH1(s[1471]);
        initADPURCH2(s[1472]);
        initADPURCH3(s[1473]);
        initADAVAIL1(s[1474]);
        initADAVAIL2(s[1475]);
        initADAVAIL3(s[1476]);
        initADPAY1(s[1477]);
        initADPAY2(s[1478]);
        initADPAY3(s[1479]);
        initADAMT1(s[1480]);
        initADAMT2(s[1481]);
        initADAMT3(s[1482]);
        initADCOST1(s[1483]);
        initADCOST2(s[1484]);
        initADCOST3(s[1485]);
        initADFUR1(s[1486]);
        initADFUR2(s[1487]);
        initADFUR3(s[1488]);
        initORISKA(s[1489]);
        initORISKC(s[1490]);
        initOSAFESAV(s[1491]);
        initORISKS(s[1492]);
        initQHEALTH1(s[1493]);
        initCUTDOWN(s[1494]);
        initLSILL(s[1495]);
        initILLLIM(s[1496]);
        initDISTYPE1(s[1497]);
        initDISTYPE2(s[1498]);
        initDISTYPE3(s[1499]);
        initDISTYPE4(s[1500]);
        initDISTYPE5(s[1501]);
        initDISTYPE6(s[1502]);
        initDISTYPE7(s[1503]);
        initDISTYPE8(s[1504]);
        initDISTYPE9(s[1505]);
        initDISEVER(s[1506]);
        initSATIS(s[1507]);
        initWORTH(s[1508]);
        initHAPPY(s[1509]);
        initANXIOUS(s[1510]);
        initPENIND1(s[1511]);
        initPENIND2(s[1512]);
        initPENIND3(s[1513]);
        initPENIND4(s[1514]);
        initPENIND5(s[1515]);
        initPENIND6(s[1516]);
        initDVHASPFCUR(s[1517]);
        initDVHASPFOCC(s[1518]);
        initDVHASPFGRP(s[1519]);
        initDVHASPFPRIV(s[1520]);
        initDVHASPFSIPP(s[1521]);
        initDVHASPFRAC(s[1522]);
        initSCNDSCH(s[1523]);
        initPDCVB1_I(s[1524]);
        initPDCVB1_IFLAG(s[1525]);
        initPDCVB2_I(s[1526]);
        initPDCVB2_IFLAG(s[1527]);
        initPDCVAL1_I(s[1528]);
        initPDCVAL1_IFLAG(s[1529]);
        initPDCVAL2_I(s[1530]);
        initPDCVAL2_IFLAG(s[1531]);
        initPOADD1_I(s[1532]);
        initPOADD1_IFLAG(s[1533]);
        initPOADD2_I(s[1534]);
        initPOADD2_IFLAG(s[1535]);
        initPOADD3_I(s[1536]);
        initPOADD3_IFLAG(s[1537]);
        initPOADD4_I(s[1538]);
        initPOADD4_IFLAG(s[1539]);
        initPOADD5_I(s[1540]);
        initPOADD5_IFLAG(s[1541]);
        initPOADD6_I(s[1542]);
        initPOADD6_IFLAG(s[1543]);
        initPAVCVB1_I(s[1544]);
        initPAVCVB1_IFLAG(s[1545]);
        initPAVCVB2_I(s[1546]);
        initPAVCVB2_IFLAG(s[1547]);
        initPAVCUV1_I(s[1548]);
        initPAVCUV1_IFLAG(s[1549]);
        initPAVCUV2_I(s[1550]);
        initPAVCUV2_IFLAG(s[1551]);
        initDVHASAVC(s[1552]);
        initDVPAVCUV(s[1553]);
        initDVHASDC(s[1554]);
        initDVVALDCOS(s[1555]);
        initDVPPVAL(s[1556]);
        initDVHASPP(s[1557]);
        initDVHASDB(s[1558]);
        initFRSTSCH(s[1559]);
        initACCFRAC1(s[1560]);
        initACCFRAC2(s[1561]);
        initVALPBLUM1(s[1562]);
        initVALPBLUM2(s[1563]);
        initDVVALDBLUM(s[1564]);
        initDVPENINC1(s[1565]);
        initDVPENINC2(s[1566]);
        initASAF1T(s[1567]);
        initTOPDVDBOPEN1T(s[1568]);
        initBOTDVDBOPEN1T(s[1569]);
        initDVDBOPEN1T(s[1570]);
        initTOPDVDBOPEN2T(s[1571]);
        initBOTDVDBOPEN2T(s[1572]);
        initDVDBOPEN2T(s[1573]);
        initDVVALDBT(s[1574]);
        initPESAME(s[1575]);
        initPEMOFF(s[1576]);
        initPEMELG(s[1577]);
        initPEMMEM(s[1578]);
        initPCONT(s[1579]);
        initPANYO(s[1580]);
        initPNUMOS(s[1581]);
        initPOCNMSC(s[1582]);
        initPPRNMSC(s[1583]);
        initPSCHM_F(s[1584]);
        initPSCHM_S(s[1585]);
        initPSCHM_T(s[1586]);
        initPOCTYP1(s[1587]);
        initPOJOIN1(s[1588]);
        initWPBTHA1(s[1589]);
        initWPBTHP1(s[1590]);
        initWPERA1(s[1591]);
        initWPNRA1(s[1592]);
        initPORAGE1(s[1593]);
        initPOMETH1(s[1594]);
        initPOPYCH1(s[1595]);
        initPOCONH1(s[1596]);
        initPOCNPR1(s[1597]);
        initPOCNFR1(s[1598]);
        initPOCNFG1(s[1599]);
        initPOLSYR1(s[1600]);
        initPOYRAM1(s[1601]);
        initPOEMP1(s[1602]);
        initPOEMPH1(s[1603]);
        initPOEMAM1(s[1604]);
        initPOEMPR1(s[1605]);
        initPOEMFR1(s[1606]);
        initPOEMFG1(s[1607]);
        initPOADD1(s[1608]);
        initPOADD2(s[1609]);
        initPOADD3(s[1610]);
        initPDBCAL1(s[1611]);
        initPBFRAC1(s[1612]);
        initPBQUAL1(s[1613]);
        initPBLUMV1(s[1614]);
        initPBINCH1(s[1615]);
        initPBINCF1(s[1616]);
        initPBINCA1(s[1617]);
        initPBDOCS1(s[1618]);
        initPBSTYR1(s[1619]);
        initPBSTMN1(s[1620]);
        initPAVCUV1(s[1621]);
        initPAVCVB1(s[1622]);
        initPAVDOC1(s[1623]);
        initPASTYR1(s[1624]);
        initPASTMN1(s[1625]);
        initPDCVAL1(s[1626]);
        initPDCVB1(s[1627]);
        initPCDOCS1(s[1628]);
        initPCSTYR1(s[1629]);
        initPCSTMN1(s[1630]);
        initPOLUM1(s[1631]);
        initPOLMV1(s[1632]);
        initPOLMVB1(s[1633]);
        initPOLMUS1(s[1634]);
        initPOLMUS2(s[1635]);
        initPOLMUS3(s[1636]);
        initPOLMUS4(s[1637]);
        initPOLMUS5(s[1638]);
        initPOLMUS6(s[1639]);
        initPOCASH1(s[1640]);
        initPOCNAMT1(s[1641]);
        initPOANN1(s[1642]);
        initPOANJT1(s[1643]);
        initPOANIF1(s[1644]);
        initPOANEH1(s[1645]);
        initPOANGA1(s[1646]);
        initPOANNUITYMVAL1(s[1647]);
        initPODRVI1(s[1648]);
        initPODRVB1(s[1649]);
        initPODRINC1(s[1650]);
        initPODRINCB1(s[1651]);
        initPOPENSIONMVAL1(s[1652]);
        initPOPENSIONMVB1(s[1653]);
        initPOTAKELUMFLEX1(s[1654]);
        initPOPENWISEHELP1(s[1655]);
        initPOPENWISEFUTURE1(s[1656]);
        initPOPLANLUMFLEX1(s[1657]);
        initPOTAKELUMFLEX2(s[1658]);
        initPOPENWISEHELP2(s[1659]);
        initPOPENWISEFUTURE2(s[1660]);
        initPOPLANLUMFLEX2(s[1661]);
        initPOFAN1(s[1662]);
        initPOFAN2(s[1663]);
        initPOFAN3(s[1664]);
        initPOFAN4(s[1665]);
        initPOFAN5(s[1666]);
        initPOFAN6(s[1667]);
        initPOFAWH1(s[1668]);
        initPOFAWH2(s[1669]);
        initPOFAWH6(s[1670]);
        initPOFAAG1(s[1671]);
        initPOCTYP2(s[1672]);
        initPOJOIN2(s[1673]);
        initWPBTHA2(s[1674]);
        initWPBTHP2(s[1675]);
        initWPERA2(s[1676]);
        initWPNRA2(s[1677]);
        initPORAGE2(s[1678]);
        initPOMETH2(s[1679]);
        initPOPYCH2(s[1680]);
        initPOCONH2(s[1681]);
        initPOCNPR2(s[1682]);
        initPOCNFR2(s[1683]);
        initPOCNFG2(s[1684]);
        initPOLSYR2(s[1685]);
        initPOYRAM2(s[1686]);
        initPOEMP2(s[1687]);
        initPOEMPH2(s[1688]);
        initPOEMAM2(s[1689]);
        initPOEMPR2(s[1690]);
        initPOEMFR2(s[1691]);
        initPOEMFG2(s[1692]);
        initPOADD4(s[1693]);
        initPDBCAL2(s[1694]);
        initPBFRAC2(s[1695]);
        initPBQUAL2(s[1696]);
        initPBLUMV2(s[1697]);
        initPBLMVB2(s[1698]);
        initPBINCH2(s[1699]);
        initPBINCF2(s[1700]);
        initPBINCA2(s[1701]);
        initPBDOCS2(s[1702]);
        initPBSTYR2(s[1703]);
        initPBSTMN2(s[1704]);
        initPAVCUV2(s[1705]);
        initPAVCVB2(s[1706]);
        initPAVDOC2(s[1707]);
        initPASTYR2(s[1708]);
        initPASTMN2(s[1709]);
        initPDCVAL2(s[1710]);
        initPDCVB2(s[1711]);
        initPCDOCS2(s[1712]);
        initPCSTYR2(s[1713]);
        initPCSTMN2(s[1714]);
        initPOLUM2(s[1715]);
        initPOLMV2(s[1716]);
        initPOLMUS7(s[1717]);
        initPOLMUS8(s[1718]);
        initPOCASH2(s[1719]);
        initPOCNAMT2(s[1720]);
        initPOANN5(s[1721]);
        initPODRVI2(s[1722]);
        initPODRVB2(s[1723]);
        initPODRINC2(s[1724]);
        initPODRINCB2(s[1725]);
        initPOPENSIONMVAL2(s[1726]);
        initPOPENSIONMVB2(s[1727]);
        initPOFAN7(s[1728]);
        initPOFAN8(s[1729]);
        initPOFAAG2(s[1730]);
        initPPYRST1(s[1731]);
        initPPORG1(s[1732]);
        initPPTYP1(s[1733]);
        initPPSIPP1(s[1734]);
        initPPPAY1(s[1735]);
        initPPRGH1(s[1736]);
        initPPRGAM1(s[1737]);
        initPPRGPE1(s[1738]);
        initPPRGFR1(s[1739]);
        initPPRGFG1(s[1740]);
        initPPLSTA1(s[1741]);
        initPPLSTP1(s[1742]);
        initPPEVRG1(s[1743]);
        initPPYSTP1(s[1744]);
        initPPYSTP2(s[1745]);
        initPPCONCH1(s[1746]);
        initPPCNHOW1(s[1747]);
        initPPCNLRS1(s[1748]);
        initPPCNLRS2(s[1749]);
        initPPCNLRS3(s[1750]);
        initPPCNDRS1(s[1751]);
        initPPCNDRS2(s[1752]);
        initPPEMP1(s[1753]);
        initPPEMPH1(s[1754]);
        initPPEMAM1(s[1755]);
        initPPEMPR1(s[1756]);
        initPPEMFR1(s[1757]);
        initPPEIRH1(s[1758]);
        initPPEIRA1(s[1759]);
        initPPEIRF1(s[1760]);
        initPPVINT1(s[1761]);
        initPPVAL1(s[1762]);
        initPPVALB1(s[1763]);
        initPPDOCS1(s[1764]);
        initPPSTYR1(s[1765]);
        initPPSTMN1(s[1766]);
        initPMORTC1(s[1767]);
        initPPLUM1(s[1768]);
        initPPLMV1(s[1769]);
        initPPLMVB1(s[1770]);
        initPPLMUS1(s[1771]);
        initPPCASH1(s[1772]);
        initPPANN1(s[1773]);
        initPPANN2(s[1774]);
        initPPANJT1(s[1775]);
        initPPANIF1(s[1776]);
        initPPANEH1(s[1777]);
        initPPANGA1(s[1778]);
        initPPANNUITYMVAL1(s[1779]);
        initPPANNUITYMVB1(s[1780]);
        initPPDRVI1(s[1781]);
        initPPDRVB1(s[1782]);
        initPPDRINC1(s[1783]);
        initPPDRINCB1(s[1784]);
        initPPFAN1(s[1785]);
        initPPFAN2(s[1786]);
        initPPFAWH1(s[1787]);
        initPPFAWH2(s[1788]);
        initPPFAWH3(s[1789]);
        initPPFAWH6(s[1790]);
        initPPFAAG1(s[1791]);
        initPPACCU1(s[1792]);
        initPPYRST2(s[1793]);
        initPPORG2(s[1794]);
        initPPTYP2(s[1795]);
        initPPSIPP2(s[1796]);
        initPPPAY2(s[1797]);
        initPPRGH2(s[1798]);
        initPPRGAM2(s[1799]);
        initPPRGPE2(s[1800]);
        initPPRGFR2(s[1801]);
        initPPRGFG2(s[1802]);
        initPPLSTA2(s[1803]);
        initPPLSTP2(s[1804]);
        initPPEVRG2(s[1805]);
        initPPYSTP8(s[1806]);
        initPPYSTP9(s[1807]);
        initPPYSTP10(s[1808]);
        initPPYSTP11(s[1809]);
        initPPYSTP12(s[1810]);
        initPPYSTP13(s[1811]);
        initPPYSTP14(s[1812]);
        initPPCONCH2(s[1813]);
        initPPCNHOW2(s[1814]);
        initPPCNLRS5(s[1815]);
        initPPCNDRS10(s[1816]);
        initPPCNDRS11(s[1817]);
        initPPEMP2(s[1818]);
        initPPEMPH2(s[1819]);
        initPPEMAM2(s[1820]);
        initPPEMPR2(s[1821]);
        initPPEMFR2(s[1822]);
        initPPEIRH2(s[1823]);
        initPPEIRA2(s[1824]);
        initPPEIRF2(s[1825]);
        initPPVINT2(s[1826]);
        initPPVAL2(s[1827]);
        initPPVALB2(s[1828]);
        initPPDOCS2(s[1829]);
        initPPSTYR2(s[1830]);
        initPPSTMN2(s[1831]);
        initPMORTC2(s[1832]);
        initPPLUM2(s[1833]);
        initPPLMV2(s[1834]);
        initPPLMVB2(s[1835]);
        initPPLMUS2(s[1836]);
        initPPCASH2(s[1837]);
        initPPANN5(s[1838]);
        initPPANJT2(s[1839]);
        initPPANIF2(s[1840]);
        initPPANEH2(s[1841]);
        initPPANGA2(s[1842]);
        initPPANNUITYMVAL2(s[1843]);
        initPPANNUITYMVB2(s[1844]);
        initPPDRVI2(s[1845]);
        initPPDRVB2(s[1846]);
        initPPDRINC2(s[1847]);
        initPPDRINCB2(s[1848]);
        initPPFAN6(s[1849]);
        initPPACCU2(s[1850]);
        initPPYRST3(s[1851]);
        initPPORG3(s[1852]);
        initPPTYP3(s[1853]);
        initPPSIPP3(s[1854]);
        initPPPAY3(s[1855]);
        initPPRGH3(s[1856]);
        initPPRGAM3(s[1857]);
        initPPRGPE3(s[1858]);
        initPPLSTA3(s[1859]);
        initPPLSTP3(s[1860]);
        initPPEVRG3(s[1861]);
        initPPYSTP19(s[1862]);
        initPPCONCH3(s[1863]);
        initPPCNHOW3(s[1864]);
        initPPCNDRS19(s[1865]);
        initPPEMP3(s[1866]);
        initPPEMPH3(s[1867]);
        initPPEMAM3(s[1868]);
        initPPEMPR3(s[1869]);
        initPPEMFR3(s[1870]);
        initPPEIRH3(s[1871]);
        initPPEIRA3(s[1872]);
        initPPEIRF3(s[1873]);
        initPPVINT3(s[1874]);
        initPPVAL3(s[1875]);
        initPPVALB3(s[1876]);
        initPPDOCS3(s[1877]);
        initPPSTYR3(s[1878]);
        initPPSTMN3(s[1879]);
        initPMORTC3(s[1880]);
        initPPLUM3(s[1881]);
        initPPLMV3(s[1882]);
        initPPLMVB3(s[1883]);
        initPPLMUS3(s[1884]);
        initPPCASH3(s[1885]);
        initPPANN9(s[1886]);
        initPPANN10(s[1887]);
        initPPANN11(s[1888]);
        initPPANN12(s[1889]);
        initPPANJT3(s[1890]);
        initPPANIF3(s[1891]);
        initPPANEH3(s[1892]);
        initPPANGA3(s[1893]);
        initPPANNUITYMVAL3(s[1894]);
        initPPANNUITYMVB3(s[1895]);
        initPPFAN11(s[1896]);
        initPPFAWH15(s[1897]);
        initPPACCU3(s[1898]);
        initPFNEW(s[1899]);
        initPFNEWNO(s[1900]);
        initPEVERC(s[1901]);
        initPEVERNC(s[1902]);
        initPRETAIN(s[1903]);
        initPFNUM(s[1904]);
        initPFACC(s[1905]);
        initPFEN(s[1906]);
        initPFEN_I(s[1907]);
        initPFEN_IFLAG(s[1908]);
        initPFENNUM(s[1909]);
        initPFENNUM_I(s[1910]);
        initPFENNUM_IFLAG(s[1911]);
        initRPFCRET1(s[1912]);
        initRPFCRET2(s[1913]);
        initRPFCRET3(s[1914]);
        initRPFCRET4(s[1915]);
        initRPFCRET5(s[1916]);
        initRPFCRET6(s[1917]);
        initPFTYP1(s[1918]);
        initPFOCTY1(s[1919]);
        initPFLUM1(s[1920]);
        initPFLMV1(s[1921]);
        initPFLMVB1(s[1922]);
        initPFLMUS1(s[1923]);
        initPFLUMALL1(s[1924]);
        initPFCASH1(s[1925]);
        initPFANN1(s[1926]);
        initPFREM1(s[1927]);
        initPFANJT1(s[1928]);
        initPFANIF1(s[1929]);
        initPFANEH1(s[1930]);
        initPFANGA1(s[1931]);
        initPFANNUITYMVAL1(s[1932]);
        initPFDRVI1(s[1933]);
        initPFDRVB1(s[1934]);
        initPFDRINC1(s[1935]);
        initPFPENSIONMVAL1(s[1936]);
        initPFPENSIONMVB1(s[1937]);
        initPFFAN1(s[1938]);
        initPFFAN2(s[1939]);
        initPFTAKELUMFLEX1(s[1940]);
        initPFPENWISEHELP1(s[1941]);
        initPFPENWISEFUTURE1(s[1942]);
        initPFTAKELUMFLEX2(s[1943]);
        initPFFAWH1(s[1944]);
        initPFFAWH6(s[1945]);
        initPFFAAG1(s[1946]);
        initPFREC1(s[1947]);
        initPFDRAW1(s[1948]);
        initPFDDV1(s[1949]);
        initPFDDVB1(s[1950]);
        initPFCURV1(s[1951]);
        initPFCUVB1(s[1952]);
        initPFLUMV1(s[1953]);
        initPFLUVB1(s[1954]);
        initPFINCP1(s[1955]);
        initPFINCA1(s[1956]);
        initPFDOCS1(s[1957]);
        initPFSTMY1(s[1958]);
        initPFSTMM1(s[1959]);
        initPFSTAT1(s[1960]);
        initPFTYP2(s[1961]);
        initPFOCTY2(s[1962]);
        initPFLUM2(s[1963]);
        initPFLMV2(s[1964]);
        initPFLMVB2(s[1965]);
        initPFLMUS2(s[1966]);
        initPFLUMALL2(s[1967]);
        initPFCASH2(s[1968]);
        initPFANN6(s[1969]);
        initPFREM2(s[1970]);
        initPFANJT2(s[1971]);
        initPFANIF2(s[1972]);
        initPFANEH2(s[1973]);
        initPFANGA2(s[1974]);
        initPFANNUITYMVAL2(s[1975]);
        initPFPENSIONMVAL2(s[1976]);
        initPFFAN6(s[1977]);
        initPFFAAG2(s[1978]);
        initPFREC2(s[1979]);
        initPFDRAW2(s[1980]);
        initPFDDV2(s[1981]);
        initPFDDVB2(s[1982]);
        initPFCURV2(s[1983]);
        initPFCUVB2(s[1984]);
        initPFLUMV2(s[1985]);
        initPFLUVB2(s[1986]);
        initPFINCP2(s[1987]);
        initPFINCA2(s[1988]);
        initPFDOCS2(s[1989]);
        initPFSTMY2(s[1990]);
        initPFSTMM2(s[1991]);
        initPFSTAT2(s[1992]);
        initPFTYP3(s[1993]);
        initPFOCTY3(s[1994]);
        initPFLUM3(s[1995]);
        initPFLMV3(s[1996]);
        initPFLMVB3(s[1997]);
        initPFLMUS3(s[1998]);
        initPFLUMALL3(s[1999]);
        initPFCASH3(s[2000]);
        initPFREM3(s[2001]);
        initPFPENSIONMVAL3(s[2002]);
        initPFFAN11(s[2003]);
        initPFFAWH16(s[2004]);
        initPFREC3(s[2005]);
        initPFDRAW3(s[2006]);
        initPFDDV3(s[2007]);
        initPFDDVB3(s[2008]);
        initPFCURV3(s[2009]);
        initPFCUVB3(s[2010]);
        initPFLUMV3(s[2011]);
        initPFLUVB3(s[2012]);
        initPFINCP3(s[2013]);
        initPFINCA3(s[2014]);
        initPFDOCS3(s[2015]);
        initPFSTMY3(s[2016]);
        initPFSTMM3(s[2017]);
        initPFSTAT3(s[2018]);
        initPFTYP4(s[2019]);
        initPFOCTY4(s[2020]);
        initPFLUM4(s[2021]);
        initPFLMV4(s[2022]);
        initPFLMUS4(s[2023]);
        initPFLUMALL4(s[2024]);
        initPFCASH4(s[2025]);
        initPFANN16(s[2026]);
        initPFREM4(s[2027]);
        initPFANJT4(s[2028]);
        initPFANIF4(s[2029]);
        initPFANEH4(s[2030]);
        initPFANGA4(s[2031]);
        initPFANNUITYMVAL4(s[2032]);
        initPFPENSIONMVAL4(s[2033]);
        initPFPENSIONMVB4(s[2034]);
        initPFFAN16(s[2035]);
        initPFREC4(s[2036]);
        initPFCURV4(s[2037]);
        initPFCUVB4(s[2038]);
        initPFLUMV4(s[2039]);
        initPFLUVB4(s[2040]);
        initPFINCP4(s[2041]);
        initPFINCA4(s[2042]);
        initPFDOCS4(s[2043]);
        initPFSTMY4(s[2044]);
        initPFSTMM4(s[2045]);
        initPFSTAT4(s[2046]);
        initPFTYP5(s[2047]);
        initPFOCTY5(s[2048]);
        initPFLUM5(s[2049]);
        initPFREC5(s[2050]);
        initPFCURV5(s[2051]);
        initPFCUVB5(s[2052]);
        initPFLUMV5(s[2053]);
        initPFLUVB5(s[2054]);
        initPFINCP5(s[2055]);
        initPFINCA5(s[2056]);
        initPFDOCS5(s[2057]);
        initPFSTMY5(s[2058]);
        initPFSTMM5(s[2059]);
        initPFSTAT5(s[2060]);
        initPFTYP6(s[2061]);
        initPFOCTY6(s[2062]);
        initPFLUM6(s[2063]);
        initPFLMV6(s[2064]);
        initPFREC6(s[2065]);
        initPFCURV6(s[2066]);
        initPFCUVB6(s[2067]);
        initPFLUMV6(s[2068]);
        initPFLUVB6(s[2069]);
        initPFINCP6(s[2070]);
        initPFINCA6(s[2071]);
        initPFDOCS6(s[2072]);
        initPFSTMY6(s[2073]);
        initPFSTMM6(s[2074]);
        initPFSTAT6(s[2075]);
        initPWID(s[2076]);
        initPWIDFUT(s[2077]);
        initPWLUM(s[2078]);
        initPWLUVAL(s[2079]);
        initPWEXPH(s[2080]);
        initPWEXPA(s[2081]);
        initPSPSE(s[2082]);
        initPSPLUM(s[2083]);
        initPSPLUVAL(s[2084]);
        initPSPEXPH(s[2085]);
        initPSPEXPA(s[2086]);
        initPWACCU(s[2087]);
        initPFLUVB1_I(s[2088]);
        initPFLUVB2_I(s[2089]);
        initPFLUVB3_I(s[2090]);
        initPFLUVB4_I(s[2091]);
        initPFLUVB5_I(s[2092]);
        initPFLUVB6_I(s[2093]);
        initPFLUVB1_IFLAG(s[2094]);
        initPFLUVB2_IFLAG(s[2095]);
        initPFLUVB3_IFLAG(s[2096]);
        initPFLUVB4_IFLAG(s[2097]);
        initPFLUVB5_IFLAG(s[2098]);
        initPFLUVB6_IFLAG(s[2099]);
        initPFLUMV1_I(s[2100]);
        initPFLUMV2_I(s[2101]);
        initPFLUMV3_I(s[2102]);
        initPFLUMV4_I(s[2103]);
        initPFLUMV5_I(s[2104]);
        initPFLUMV6_I(s[2105]);
        initPFLUMV1_IFLAG(s[2106]);
        initPFLUMV2_IFLAG(s[2107]);
        initPFLUMV3_IFLAG(s[2108]);
        initPFLUMV4_IFLAG(s[2109]);
        initPFLUMV5_IFLAG(s[2110]);
        initPFLUMV6_IFLAG(s[2111]);
        initPFCURV1_I(s[2112]);
        initPFCURV2_I(s[2113]);
        initPFCURV3_I(s[2114]);
        initPFCURV4_I(s[2115]);
        initPFCURV5_I(s[2116]);
        initPFCURV6_I(s[2117]);
        initPFCURV1_IFLAG(s[2118]);
        initPFCURV2_IFLAG(s[2119]);
        initPFCURV3_IFLAG(s[2120]);
        initPFCURV4_IFLAG(s[2121]);
        initPFCURV5_IFLAG(s[2122]);
        initPFCURV6_IFLAG(s[2123]);
        initPORAGE1T(s[2124]);
        initPORAGE2T(s[2125]);
        initANNUITY1(s[2126]);
        initANNUITY2(s[2127]);
        initMNTHSCAPE(s[2128]);
        initRETFRAC(s[2129]);
        initDVPINPVAL(s[2130]);
        initDVWID(s[2131]);
        initDVSPS(s[2132]);
        initDVSPEN(s[2133]);
        initDVDBINCALL(s[2134]);
        initDVVALPBLUM(s[2135]);
        initDVPFCURVAL(s[2136]);
        initDVDBRWEALTHVAL(s[2137]);
        initTOTPEN(s[2138]);
        initPEVERC_I(s[2139]);
        initPEVERC_IFLAG(s[2140]);
        initPEVERNC_I(s[2141]);
        initPEVERNC_IFLAG(s[2142]);
        initPRETAIN_I(s[2143]);
        initPRETAIN_IFLAG(s[2144]);
        initPFNUM_I(s[2145]);
        initPFNUM_IFLAG(s[2146]);
        initPFNEW_I(s[2147]);
        initPFNEW_IFLAG(s[2148]);
        initPFNEWNO_I(s[2149]);
        initPFNEWNO_IFLAG(s[2150]);
        initALLRET_I(s[2151]);
        initPFTYP1_I(s[2152]);
        initPFTYP1_IFLAG(s[2153]);
        initPFTYP2_I(s[2154]);
        initPFTYP2_IFLAG(s[2155]);
        initPFTYP3_I(s[2156]);
        initPFTYP3_IFLAG(s[2157]);
        initPFTYP4_I(s[2158]);
        initPFTYP4_IFLAG(s[2159]);
        initPFTYP5_I(s[2160]);
        initPFTYP5_IFLAG(s[2161]);
        initPFTYP6_I(s[2162]);
        initPFTYP6_IFLAG(s[2163]);
        initPFOCTY1_I(s[2164]);
        initPFOCTY1_IFLAG(s[2165]);
        initPFOCTY2_I(s[2166]);
        initPFOCTY2_IFLAG(s[2167]);
        initPFOCTY3_I(s[2168]);
        initPFOCTY3_IFLAG(s[2169]);
        initPFOCTY4_I(s[2170]);
        initPFOCTY4_IFLAG(s[2171]);
        initPFOCTY5_I(s[2172]);
        initPFOCTY5_IFLAG(s[2173]);
        initPFOCTY6_I(s[2174]);
        initPFOCTY6_IFLAG(s[2175]);
        initPFLUM1_I(s[2176]);
        initPFLUM1_IFLAG(s[2177]);
        initPFLUM2_I(s[2178]);
        initPFLUM2_IFLAG(s[2179]);
        initPFLUM3_I(s[2180]);
        initPFLUM3_IFLAG(s[2181]);
        initPFLUM4_I(s[2182]);
        initPFLUM4_IFLAG(s[2183]);
        initPFLUM5_I(s[2184]);
        initPFLUM5_IFLAG(s[2185]);
        initPFLUM6_I(s[2186]);
        initPFLUM6_IFLAG(s[2187]);
        initPFLUMALL1_I(s[2188]);
        initPFLUMALL1_IFLAG(s[2189]);
        initPFLUMALL2_I(s[2190]);
        initPFLUMALL2_IFLAG(s[2191]);
        initPFLUMALL3_I(s[2192]);
        initPFLUMALL3_IFLAG(s[2193]);
        initPFLUMALL4_I(s[2194]);
        initPFLUMALL4_IFLAG(s[2195]);
        initPFCASH1_I(s[2196]);
        initPFCASH1_IFLAG(s[2197]);
        initPFCASH2_I(s[2198]);
        initPFCASH2_IFLAG(s[2199]);
        initPFCASH3_I(s[2200]);
        initPFCASH3_IFLAG(s[2201]);
        initPFCASH4_I(s[2202]);
        initPFCASH4_IFLAG(s[2203]);
        initPFREM1_I(s[2204]);
        initPFREM1_IFLAG(s[2205]);
        initPFREM2_I(s[2206]);
        initPFREM2_IFLAG(s[2207]);
        initPFREM3_I(s[2208]);
        initPFREM3_IFLAG(s[2209]);
        initPFREM4_I(s[2210]);
        initPFREM4_IFLAG(s[2211]);
        initPFREC1_I(s[2212]);
        initPFREC1_IFLAG(s[2213]);
        initPFREC2_I(s[2214]);
        initPFREC2_IFLAG(s[2215]);
        initPFREC3_I(s[2216]);
        initPFREC3_IFLAG(s[2217]);
        initPFREC4_I(s[2218]);
        initPFREC4_IFLAG(s[2219]);
        initPFREC5_I(s[2220]);
        initPFREC5_IFLAG(s[2221]);
        initPFREC6_I(s[2222]);
        initPFREC6_IFLAG(s[2223]);
        initPFDRAW1_I(s[2224]);
        initPFDRAW1_IFLAG(s[2225]);
        initPFDRAW2_I(s[2226]);
        initPFDRAW2_IFLAG(s[2227]);
        initPFDRAW3_I(s[2228]);
        initPFDRAW3_IFLAG(s[2229]);
        initPFINCP1_I(s[2230]);
        initPFINCP1_IFLAG(s[2231]);
        initPFINCP2_I(s[2232]);
        initPFINCP2_IFLAG(s[2233]);
        initPFINCP3_I(s[2234]);
        initPFINCP3_IFLAG(s[2235]);
        initPFINCP4_I(s[2236]);
        initPFINCP4_IFLAG(s[2237]);
        initPFINCP5_I(s[2238]);
        initPFINCP5_IFLAG(s[2239]);
        initPFINCP6_I(s[2240]);
        initPFINCP6_IFLAG(s[2241]);
        initPFINCA1_I(s[2242]);
        initPFINCA1_IFLAG(s[2243]);
        initPFINCA2_I(s[2244]);
        initPFINCA2_IFLAG(s[2245]);
        initPFINCA3_I(s[2246]);
        initPFINCA3_IFLAG(s[2247]);
        initPFINCA4_I(s[2248]);
        initPFINCA4_IFLAG(s[2249]);
        initPFINCA5_I(s[2250]);
        initPFINCA5_IFLAG(s[2251]);
        initPFINCA6_I(s[2252]);
        initOTHSRC1_I(s[2253]);
        initOTHSRC1_IFLAG(s[2254]);
        initOTHSRC2_I(s[2255]);
        initOTHSRC2_IFLAG(s[2256]);
        initOTHSRC3_I(s[2257]);
        initOTHSRC3_IFLAG(s[2258]);
        initOTHSRC4_I(s[2259]);
        initOTHSRC4_IFLAG(s[2260]);
        initPSPEXPH_I(s[2261]);
        initPSPEXPH_IFLAG(s[2262]);
        initPSPSE_I(s[2263]);
        initPSPSE_IFLAG(s[2264]);
        initPWEXPH_I(s[2265]);
        initPWEXPH_IFLAG(s[2266]);
        initPWIDFUT_I(s[2267]);
        initPWIDFUT_IFLAG(s[2268]);
        initXMARSTA_I(s[2269]);
        initXMARSTA_IFLAG(s[2270]);
        initMARBEF_I(s[2271]);
        initMARBEF_IFLAG(s[2272]);
        initPWEXPA_I(s[2273]);
        initPWEXPA_IFLAG(s[2274]);
        initPSPEXPA_I(s[2275]);
        initPSPEXPA_IFLAG(s[2276]);
        initDVOIGOEANNUAL_IFLAG(s[2277]);
        initDVOIGOSANNUAL_IFLAG(s[2278]);
        initDVOIGPPANNUAL_IFLAG(s[2279]);
        initAGEASAF(s[2280]);
        initPINCINP(s[2281]);
        initPFCUVB1_I(s[2282]);
        initPFCUVB1_IFLAG(s[2283]);
        initPFCUVB2_I(s[2284]);
        initPFCUVB2_IFLAG(s[2285]);
        initPFCUVB3_I(s[2286]);
        initPFCUVB3_IFLAG(s[2287]);
        initPFCUVB4_I(s[2288]);
        initPFCUVB4_IFLAG(s[2289]);
        initPFCUVB5_I(s[2290]);
        initPFCUVB5_IFLAG(s[2291]);
        initPFCUVB6_I(s[2292]);
        initPFCUVB6_IFLAG(s[2293]);
        initPFDDVB1_I(s[2294]);
        initPFDDVB1_IFLAG(s[2295]);
        initPFDDVB2_I(s[2296]);
        initPFDDVB2_IFLAG(s[2297]);
        initPFDDVB3_I(s[2298]);
        initPFDDVB3_IFLAG(s[2299]);
        initPFDDVB4_I(s[2300]);
        initPFDDVB4_IFLAG(s[2301]);
        initPFDDVB5_I(s[2302]);
        initPFDDVB5_IFLAG(s[2303]);
        initPFDDVB6_I(s[2304]);
        initPFDDVB6_IFLAG(s[2305]);
        initPFDDV1_I(s[2306]);
        initPFDDV1_IFLAG(s[2307]);
        initPFDDV2_I(s[2308]);
        initPFDDV2_IFLAG(s[2309]);
        initPFDDV3_I(s[2310]);
        initPFDDV3_IFLAG(s[2311]);
        initPFDDV4_I(s[2312]);
        initPFDDV4_IFLAG(s[2313]);
        initPEMOFF_I(s[2314]);
        initPEMOFF_IFLAG(s[2315]);
        initPEMELG_I(s[2316]);
        initPEMELG_IFLAG(s[2317]);
        initPEMMEM_I(s[2318]);
        initPEMMEM_IFLAG(s[2319]);
        initPCONT_I(s[2320]);
        initPCONT_IFLAG(s[2321]);
        initPANYO_I(s[2322]);
        initPANYO_IFLAG(s[2323]);
        initPNUMOS_I(s[2324]);
        initPNUMOS_IFLAG(s[2325]);
        initPSCHM_F_I(s[2326]);
        initPSCHM_F_IFLAG(s[2327]);
        initPSCHM_S_I(s[2328]);
        initPSCHM_S_IFLAG(s[2329]);
        initPSCHM_T_I(s[2330]);
        initPSCHM_T_IFLAG(s[2331]);
        initPOCNMSC_I(s[2332]);
        initPOCNMSC_IFLAG(s[2333]);
        initPOCTYP1_I(s[2334]);
        initPOCTYP1_IFLAG(s[2335]);
        initPOCTYP2_I(s[2336]);
        initPOCTYP2_IFLAG(s[2337]);
        initPBFRAC1_I(s[2338]);
        initPBFRAC1_IFLAG(s[2339]);
        initPBFRAC2_I(s[2340]);
        initPBFRAC2_IFLAG(s[2341]);
        initPBQUAL1_I(s[2342]);
        initPBQUAL1_IFLAG(s[2343]);
        initPBQUAL2_I(s[2344]);
        initPBQUAL2_IFLAG(s[2345]);
        initPBLMVB1_I(s[2346]);
        initPBLMVB1_IFLAG(s[2347]);
        initPBLMVB2_I(s[2348]);
        initPBLMVB2_IFLAG(s[2349]);
        initPBLUMV1_I(s[2350]);
        initPBLUMV1_IFLAG(s[2351]);
        initPBLUMV2_I(s[2352]);
        initPBLUMV2_IFLAG(s[2353]);
        initASAF2T(s[2354]);
        initPOWER1T(s[2355]);
        initPOWER2T(s[2356]);
        initPPRNMSC_I(s[2357]);
        initPPRNMSC_IFLAG(s[2358]);
        initPPVALB1_I(s[2359]);
        initPPVALB1_IFLAG(s[2360]);
        initPPVALB2_I(s[2361]);
        initPPVALB2_IFLAG(s[2362]);
        initPPVALB3_I(s[2363]);
        initPPVALB3_IFLAG(s[2364]);
        initPPVAL1_I(s[2365]);
        initPPVAL1_IFLAG(s[2366]);
        initPPVAL2_I(s[2367]);
        initPPVAL2_IFLAG(s[2368]);
        initPPVAL3_I(s[2369]);
        initPPVAL3_IFLAG(s[2370]);
        initDVDBLUMP1(s[2371]);
        initDVDBLUMP2(s[2372]);
        initDVDBLUMP3(s[2373]);
        initDVDBLUMP4(s[2374]);
        initDVDBLUMP5(s[2375]);
        initDVDBLUMP6(s[2376]);
        initDVDBINC1(s[2377]);
        initDVDBINC2(s[2378]);
        initDVDBINC3(s[2379]);
        initDVDBINC4(s[2380]);
        initDVDBINC5(s[2381]);
        initDVDBINC6(s[2382]);
        initDVHASPFD(s[2383]);
        initDVPFDDV(s[2384]);
        initPOLUM1_I(s[2385]);
        initPOLUM1_IFLAG(s[2386]);
        initPOLUM2_I(s[2387]);
        initPOLUM2_IFLAG(s[2388]);
        initPOLMVB1_I(s[2389]);
        initPOLMVB1_IFLAG(s[2390]);
        initPOLMVB2_I(s[2391]);
        initPOLMVB2_IFLAG(s[2392]);
        initPOLMV1_I(s[2393]);
        initPOLMV1_IFLAG(s[2394]);
        initPOLMV2_I(s[2395]);
        initPOLMV2_IFLAG(s[2396]);
        initPPLUM1_I(s[2397]);
        initPPLUM1_IFLAG(s[2398]);
        initPPLUM2_I(s[2399]);
        initPPLUM2_IFLAG(s[2400]);
        initPPLUM3_I(s[2401]);
        initPPLUM3_IFLAG(s[2402]);
        initPPLMVB1_I(s[2403]);
        initPPLMVB1_IFLAG(s[2404]);
        initPPLMVB2_I(s[2405]);
        initPPLMVB2_IFLAG(s[2406]);
        initPPLMVB3_I(s[2407]);
        initPPLMVB3_IFLAG(s[2408]);
        initPPLMV1_I(s[2409]);
        initPPLMV1_IFLAG(s[2410]);
        initPPLMV2_I(s[2411]);
        initPPLMV2_IFLAG(s[2412]);
        initPPLMV3_I(s[2413]);
        initPPLMV3_IFLAG(s[2414]);
        initPFLMV1_I(s[2415]);
        initPFLMV1_IFLAG(s[2416]);
        initPFLMV2_I(s[2417]);
        initPFLMV2_IFLAG(s[2418]);
        initPFLMV3_I(s[2419]);
        initPFLMV3_IFLAG(s[2420]);
        initPFLMV4_I(s[2421]);
        initPFLMV4_IFLAG(s[2422]);
        initPFLMVB1_I(s[2423]);
        initPFLMVB1_IFLAG(s[2424]);
        initPFLMVB2_I(s[2425]);
        initPFLMVB2_IFLAG(s[2426]);
        initPFLMVB3_I(s[2427]);
        initPFLMVB3_IFLAG(s[2428]);
        initPFLMVB4_I(s[2429]);
        initPFLMVB4_IFLAG(s[2430]);
        initDVSAME(s[2431]);
        initPBLMVB1(s[2432]);
        initALLRET(s[2433]);
        initBTYPE1(s[2434]);
        initBDIRNI1(s[2435]);
        initBOWN1(s[2436]);
        initBPROPN1(s[2437]);
        initBACCSA1(s[2438]);
        initBACCSB1(s[2439]);
        initBPART1(s[2440]);
        initBACCBEG1(s[2441]);
        initBDOCS1(s[2442]);
        initBPROFIT1(s[2443]);
        initBPRFLOSS1(s[2444]);
        initBTAX1(s[2445]);
        initBNATINS1(s[2446]);
        initBBEFORE1(s[2447]);
        initBCARRY1(s[2448]);
        initBSIZE1(s[2449]);
        initBEMPN1(s[2450]);
        initBYEAR1(s[2451]);
        initBSTART1(s[2452]);
        initBFUND1(s[2453]);
        initBFUND2(s[2454]);
        initBRETIRE1(s[2455]);
        initBDEBTS1(s[2456]);
        initBOWED1(s[2457]);
        initBVAL1(s[2458]);
        initBVALB1(s[2459]);
        initBTYPE2(s[2460]);
        initBDIRNI2(s[2461]);
        initBOWN2(s[2462]);
        initBPROPN2(s[2463]);
        initBACCSA2(s[2464]);
        initBACCSB2(s[2465]);
        initBPART2(s[2466]);
        initBACCBEG2(s[2467]);
        initBDOCS2(s[2468]);
        initBPROFIT2(s[2469]);
        initBPRFLOSS2(s[2470]);
        initBTAX2(s[2471]);
        initBNATINS2(s[2472]);
        initBBEFORE2(s[2473]);
        initBSIZE2(s[2474]);
        initBEMPN2(s[2475]);
        initBYEAR2(s[2476]);
        initBSTART2(s[2477]);
        initBFUND9(s[2478]);
        initBFUND10(s[2479]);
        initBRETIRE2(s[2480]);
        initBDEBTS2(s[2481]);
        initBOWED2(s[2482]);
        initBVAL2(s[2483]);
        initBVALB2(s[2484]);
        initBTYPE3(s[2485]);
        initBDIRNI3(s[2486]);
        initBOWN3(s[2487]);
        initBPROPN3(s[2488]);
        initBACCSA3(s[2489]);
        initBACCSB3(s[2490]);
        initBPART3(s[2491]);
        initBACCBEG3(s[2492]);
        initBDOCS3(s[2493]);
        initBPROFIT3(s[2494]);
        initBPRFLOSS3(s[2495]);
        initBTAX3(s[2496]);
        initBNATINS3(s[2497]);
        initBBEFORE3(s[2498]);
        initBCARRY3(s[2499]);
        initBSIZE3(s[2500]);
        initBEMPN3(s[2501]);
        initBYEAR3(s[2502]);
        initBSTART3(s[2503]);
        initBFUND17(s[2504]);
        initBRETIRE3(s[2505]);
        initBDEBTS3(s[2506]);
        initBOWED3(s[2507]);
        initBVAL3(s[2508]);
        initBVALB3(s[2509]);
        initBPAST(s[2510]);
        initBSELLYR(s[2511]);
        initBSELLAM(s[2512]);
        initBSELLAB(s[2513]);
        initBSELLTX(s[2514]);
        initBMOREBUS(s[2515]);
        initBWORTH(s[2516]);
        initBWORTHB(s[2517]);
        initBTYPE1_I(s[2518]);
        initBTYPE1_IFLAG(s[2519]);
        initBDIRNI1_I(s[2520]);
        initBDIRNI1_IFLAG(s[2521]);
        initBENINTRO(s[2522]);
        initSOCFUND1(s[2523]);
        initSOCFUND2(s[2524]);
        initSOCFUND3(s[2525]);
        initSOCFUND4(s[2526]);
        initSOCFUND1_I(s[2527]);
        initSOCFUND2_I(s[2528]);
        initSOCFUND3_I(s[2529]);
        initSOCFUND4_I(s[2530]);
        initDISBEN1(s[2531]);
        initDISBEN2(s[2532]);
        initDISBEN3(s[2533]);
        initDISBEN1_I(s[2534]);
        initDISBEN2_I(s[2535]);
        initDISBEN3_I(s[2536]);
        initPENBEN1(s[2537]);
        initPENBEN2(s[2538]);
        initPENBEN3(s[2539]);
        initPENBEN1_I(s[2540]);
        initPENBEN2_I(s[2541]);
        initPENBEN3_I(s[2542]);
        initKIDBEN1(s[2543]);
        initKIDBEN2(s[2544]);
        initKIDBEN1_I(s[2545]);
        initKIDBEN2_I(s[2546]);
        initWAGEBEN1(s[2547]);
        initWAGEBEN2(s[2548]);
        initWAGEBEN3(s[2549]);
        initWAGEBEN4(s[2550]);
        initWAGEBEN5(s[2551]);
        initWAGEBEN6(s[2552]);
        initWAGEBEN1_I(s[2553]);
        initWAGEBEN2_I(s[2554]);
        initWAGEBEN3_I(s[2555]);
        initWAGEBEN4_I(s[2556]);
        initWAGEBEN5_I(s[2557]);
        initWAGEBEN6_I(s[2558]);
        initOTHERBEN1(s[2559]);
        initOTHERBEN2(s[2560]);
        initOTHERBEN3(s[2561]);
        initOTHERBEN4(s[2562]);
        initOTHERBEN1_I(s[2563]);
        initOTHERBEN2_I(s[2564]);
        initOTHERBEN3_I(s[2565]);
        initOTHERBEN4_I(s[2566]);
        initDISBEN_IFLAG(s[2567]);
        initPENBEN_IFLAG(s[2568]);
        initKIDBEN_IFLAG(s[2569]);
        initSOCFUND_IFLAG(s[2570]);
        initOTHERBEN_IFLAG(s[2571]);
        initANYOTHERB_IFLAG(s[2572]);
        initDVBENEFITANNUAL_IFLAG(s[2573]);
        initDVBENEFITANNUAL(s[2574]);
        initDVBENEFITANNUAL_MISS(s[2575]);
        initWAGEBEN_IFLAG(s[2576]);
        initANYOTHERBAMT(s[2577]);
        initANYOTHERBPD(s[2578]);
        initBTOGSEP(s[2579]);
        initBPAYNUM(s[2580]);
        initBTOGPD(s[2581]);
        initBSEPPD01(s[2582]);
        initBSEPPD02(s[2583]);
        initBSEPPD03(s[2584]);
        initBSEPPD04(s[2585]);
        initBSEPPD05(s[2586]);
        initBSEPPD06(s[2587]);
        initBSEPPD07(s[2588]);
        initBSEPPD08(s[2589]);
        initPAYPER(s[2590]);
        initPAYPER2(s[2591]);
        initPAYESP(s[2592]);
        initPAYESM(s[2593]);
        initGRSESP(s[2594]);
        initGRSESM(s[2595]);
        initPAYINC1(s[2596]);
        initPAYINC2(s[2597]);
        initPAYINC3(s[2598]);
        initPAYINC4(s[2599]);
        initPAYINC5(s[2600]);
        initPAYINC6(s[2601]);
        initPAYINC7(s[2602]);
        initSMTPEN(s[2603]);
        initPAYSLP(s[2604]);
        initPAYBON(s[2605]);
        initBONTAX(s[2606]);
        initBONTAX_I(s[2607]);
        initBONTAX_IFLAG(s[2608]);
        initEMSHAR1(s[2609]);
        initEMSHAR2(s[2610]);
        initEMSHAR3(s[2611]);
        initSEPER(s[2612]);
        initSEAMK(s[2613]);
        initSEESW(s[2614]);
        initSEESM(s[2615]);
        initGROSSPER(s[2616]);
        initGRSAMK(s[2617]);
        initGRSEESW(s[2618]);
        initGRSEESM(s[2619]);
        initSEPEL(s[2620]);
        initSJOB2(s[2621]);
        initSJEMP1(s[2622]);
        initSJEMP2(s[2623]);
        initDVGRSBAND_I(s[2624]);
        initDVGRSBAND_IFLAG(s[2625]);
        initDVNETBAND_I(s[2626]);
        initDVNETBAND_IFLAG(s[2627]);
        initRENTPAY(s[2628]);
        initRENTAMOUNT(s[2629]);
        initRENTPERIOD(s[2630]);
        initRENTSPECIFY(s[2631]);
        initOTHSRC1(s[2632]);
        initOTHSRC2(s[2633]);
        initOTHSRC3(s[2634]);
        initREGLRPY1(s[2635]);
        initREGLRPY2(s[2636]);
        initSJOB2_I(s[2637]);
        initSJOB2_IFLAG(s[2638]);
        initSJEMP1_I(s[2639]);
        initSJEMP1_IFLAG(s[2640]);
        initDVNETEMPSECJOB_IFLAG(s[2641]);
        initDVGRSEMPSECJOB_IFLAG(s[2642]);
        initPAYBON_I(s[2643]);
        initPAYBON_IFLAG(s[2644]);
        initDVNETBONAMT_IFLAG(s[2645]);
        initDVGRSBONAMT_IFLAG(s[2646]);
        initDVSENETPAY_IFLAG(s[2647]);
        initDVSEGRSPAY_IFLAG(s[2648]);
        initDVGRSSESECJOB_IFLAG(s[2649]);
        initDVNIEMP(s[2650]);
        initDVGRSBONAMT(s[2651]);
        initIHRECNT(s[2652]);
        initIHRCNUM(s[2653]);
        initIWAT1(s[2654]);
        initIWAT2(s[2655]);
        initIWAT3(s[2656]);
        initIWAT4(s[2657]);
        initIWAT5(s[2658]);
        initIWAT6(s[2659]);
        initIWHO1(s[2660]);
        initIVALB1(s[2661]);
        initIHSE1(s[2662]);
        initIHSE2(s[2663]);
        initIHSE3(s[2664]);
        initIGDS1(s[2665]);
        initIGDS2(s[2666]);
        initIGDS3(s[2667]);
        initIGDS4(s[2668]);
        initIGDS5(s[2669]);
        initIWAT7(s[2670]);
        initIWHO2(s[2671]);
        initIVALB2(s[2672]);
        initIHSE7(s[2673]);
        initIHSE8(s[2674]);
        initIHSE9(s[2675]);
        initIHSE10(s[2676]);
        initIHSE11(s[2677]);
        initIHSE12(s[2678]);
        initIGDS8(s[2679]);
        initIGDS9(s[2680]);
        initIGDS10(s[2681]);
        initIGDS11(s[2682]);
        initIWAT13(s[2683]);
        initIWHO3(s[2684]);
        initIVALB3(s[2685]);
        initIGDS15(s[2686]);
        initILGIFT(s[2687]);
        initIGFVALB(s[2688]);
        initNEWGIFT(s[2689]);
        initILOAN(s[2690]);
        initILNUSE01(s[2691]);
        initILNUSE02(s[2692]);
        initILNUSE03(s[2693]);
        initILNUSE04(s[2694]);
        initILNUSE05(s[2695]);
        initILNVAL(s[2696]);
        initILNVALB(s[2697]);
        initILNPBK(s[2698]);
        initILNPBAM(s[2699]);
        initILUMP(s[2700]);
        initILUMTY1(s[2701]);
        initILUMTY2(s[2702]);
        initILUMTY3(s[2703]);
        initILIFB(s[2704]);
        initILUPP(s[2705]);
        initILUPB(s[2706]);
        initILACB(s[2707]);
        initILINB(s[2708]);
        initILRDB(s[2709]);
        initILWNB(s[2710]);
        initILOTB(s[2711]);
        initTINTRO(s[2712]);
        initTSETT(s[2713]);
        initTSNUM1(s[2714]);
        initTSNEW(s[2715]);
        initTSNUM2(s[2716]);
        initTJNT1(s[2717]);
        initTJNT2(s[2718]);
        initTACC1(s[2719]);
        initTBEN1(s[2720]);
        initTBEN2(s[2721]);
        initTBEN3(s[2722]);
        initTBEN4(s[2723]);
        initTBEN5(s[2724]);
        initTVAL1(s[2725]);
        initTVALB1(s[2726]);
        initTDUP1(s[2727]);
        initTDUPA1(s[2728]);
        initTADDVL1(s[2729]);
        initTADDVB1(s[2730]);
        initTJNT3(s[2731]);
        initTJNT4(s[2732]);
        initTACC2(s[2733]);
        initTBEN9(s[2734]);
        initTBEN10(s[2735]);
        initTBEN11(s[2736]);
        initTBEN12(s[2737]);
        initTVAL2(s[2738]);
        initTVALB2(s[2739]);
        initTDUP2(s[2740]);
        initTDUPA2(s[2741]);
        initTADDVL2(s[2742]);
        initTADDVB2(s[2743]);
        initTBENEF(s[2744]);
        initTBENNUM(s[2745]);
        initTWHO1(s[2746]);
        initTWHO2(s[2747]);
        initTBINC1(s[2748]);
        initTBREC1(s[2749]);
        initTBRECB1(s[2750]);
        initTBCAP1(s[2751]);
        initTBCKNO1(s[2752]);
        initTBCAPY1(s[2753]);
        initTBVALB1(s[2754]);
        initTWHO7(s[2755]);
        initTWHO8(s[2756]);
        initTBINC2(s[2757]);
        initTBREC2(s[2758]);
        initTBRECB2(s[2759]);
        initTBCAP2(s[2760]);
        initTBCKNO2(s[2761]);
        initTBCAPY2(s[2762]);
        initTBVALB2(s[2763]);
        initRENTPAY_I(s[2764]);
        initRENTPAY_IFLAG(s[2765]);
        initDVRENTAMTANNUAL_IFLAG(s[2766]);
        initDVOINRRANNUAL_IFLAG(s[2767]);
        initDVOINGTANNUAL_IFLAG(s[2768]);
        initREGLRPY1_I(s[2769]);
        initREGLRPY2_I(s[2770]);
        initREGLRPY1_IFLAG(s[2771]);
        initREGLRPY2_IFLAG(s[2772]);
        initDVOINEGANNUAL_IFLAG(s[2773]);
        initDVOINFRANNUAL_IFLAG(s[2774]);
        initDVOINMAANNUAL_IFLAG(s[2775]);
        initDVOINROANNUAL_IFLAG(s[2776]);
        initDVOINOPANNUAL_IFLAG(s[2777]);
        initIHRECNT_I(s[2778]);
        initIHRECNT_IFLAG(s[2779]);
        initIHRCNUM_I(s[2780]);
        initIHRCNUM_IFLAG(s[2781]);
        initIVALB1_I(s[2782]);
        initIVALB1_IFLAG(s[2783]);
        initIVALB2_I(s[2784]);
        initIVALB2_IFLAG(s[2785]);
        initIVALB3_I(s[2786]);
        initIVALB3_IFLAG(s[2787]);
        initIVAL1_IFLAG(s[2788]);
        initIVAL2_IFLAG(s[2789]);
        initIVAL3_IFLAG(s[2790]);
        initILGIFT_I(s[2791]);
        initILGIFT_IFLAG(s[2792]);
        initIGFVALB_I(s[2793]);
        initIGFVALB_IFLAG(s[2794]);
        initIGIFVAL_IFLAG(s[2795]);
        initILUMP_I(s[2796]);
        initILUMP_IFLAG(s[2797]);
        initILUMTY1_I(s[2798]);
        initILUMTY1_IFLAG(s[2799]);
        initILIFB_I(s[2800]);
        initILIFB_IFLAG(s[2801]);
        initILIFE_IFLAG(s[2802]);
        initILUPB_I(s[2803]);
        initILUPB_IFLAG(s[2804]);
        initILUPP_I(s[2805]);
        initILUPP_IFLAG(s[2806]);
        initILACB_I(s[2807]);
        initILACB_IFLAG(s[2808]);
        initILACC_IFLAG(s[2809]);
        initILINB_I(s[2810]);
        initILINB_IFLAG(s[2811]);
        initILINS_IFLAG(s[2812]);
        initILRDB_I(s[2813]);
        initILRDB_IFLAG(s[2814]);
        initILRED_IFLAG(s[2815]);
        initILWNB_I(s[2816]);
        initILWNB_IFLAG(s[2817]);
        initILWIN_IFLAG(s[2818]);
        initILOTB_I(s[2819]);
        initILOTB_IFLAG(s[2820]);
        initILOTH_IFLAG(s[2821]);
        initSAMEJOB1(s[2822]);
        initSAMEJOB2(s[2823]);
        initSAMEJOB3(s[2824]);
        initSAMEJOB4(s[2825]);
        initSAMEJOB5(s[2826]);
        initSAMEJOB6(s[2827]);
        initSECTOR(s[2828]);
        initSECTR2(s[2829]);
        initSVISE(s[2830]);
        initEMPNO(s[2831]);
        initEMPN(s[2832]);
        initONETEN(s[2833]);
        initDVEMPNO(s[2834]);
        initSOLO(s[2835]);
        initDVSENO(s[2836]);
        initSEMN(s[2837]);
        initFTPTWK(s[2838]);
        initWKHRS(s[2839]);
        initWKHRSIR(s[2840]);
        initEMPSTY(s[2841]);
        initSEMPSTY(s[2842]);
        initPERMJB(s[2843]);
        initTEA(s[2844]);
        initPNOWK(s[2845]);
        initPNOWKLN(s[2846]);
        initENROLL(s[2847]);
        initATTEND(s[2848]);
        initCOURSE(s[2849]);
        initFTSTUD(s[2850]);
        initJOBNO(s[2851]);
        initXINSOL(s[2852]);
        initXINTYP(s[2853]);
        initXINCSE(s[2854]);
        initFBSITU(s[2855]);
        initFBSIBS(s[2856]);
        initFBTEN(s[2857]);
        initFBFAED(s[2858]);
        initFBMOED(s[2859]);
        initFTHECST(s[2860]);
        initMTHECST(s[2861]);
        initDWELLTYP(s[2862]);
        initCTBAND(s[2863]);
        initCTAXRED(s[2864]);
        initCTAXREDAMT(s[2865]);
        initCTAMT(s[2866]);
        initCTINSTAL(s[2867]);
        initCTTIME(s[2868]);
        initGOR(s[2869]);
        initCURSTAT(s[2870]);
        initDVAGEW5BAND(s[2871]);
        initXMARSTA(s[2872]);
        initMARBEF(s[2873]);
        initLIVWTH12(s[2874]);
        initHHLDR(s[2875]);
        initDVAGE4(s[2876]);
        initDVAGE5(s[2877]);
        initDVAGE6(s[2878]);
        initDVAGE9(s[2879]);
        initWORKAGE(s[2880]);
        initNUMADULT(s[2881]);
        initNUMCHILD(s[2882]);
        initNUMCIVPTR(s[2883]);
        initNUMSSEX(s[2884]);
        initNUMCPART(s[2885]);
        initNUMCH18(s[2886]);
        initPENFLAG(s[2887]);
        initFTED(s[2888]);
        initFTED19(s[2889]);
        initQUALCHK(s[2890]);
        initHIHNUM(s[2891]);
        initDVHRPNUM(s[2892]);
        initHRPPART(s[2893]);
        initR01(s[2894]);
        initR02(s[2895]);
        initR03(s[2896]);
        initR04(s[2897]);
        initR05(s[2898]);
        initR06(s[2899]);
        initR07(s[2900]);
        initR08(s[2901]);
        initR09(s[2902]);
        initR10(s[2903]);
        initR11(s[2904]);
        initRESPDNT(s[2905]);
        initPARTNER(s[2906]);
        initPARTNO(s[2907]);
        initISDEP(s[2908]);
        initISNDEP(s[2909]);
        initNUMDEPCH(s[2910]);
        initHASCHD(s[2911]);
        initHASDEP(s[2912]);
        initHASNDEP(s[2913]);
        initSINGPAR(s[2914]);
        initPERSPROX(s[2915]);
        initPROXYNUM(s[2916]);
        initWRKING(s[2917]);
        initSCHEMEET(s[2918]);
        initJBAWAY(s[2919]);
        initOWNBUS(s[2920]);
        initRELBUS(s[2921]);
        initLOOKED(s[2922]);
        initSTARTJ(s[2923]);
        initLKTIME(s[2924]);
        initYINACT(s[2925]);
        initDVILO3A(s[2926]);
        initDVILO4A(s[2927]);
        initWKBETW(s[2928]);
        initMRECJB(s[2929]);
        initSAMJOB(s[2930]);
        initSAMEMP(s[2931]);
        initPERNOWK(s[2932]);
        initNUMJOB(s[2933]);
        initDTJBL(s[2934]);
        initDVJB12ML(s[2935]);
        initSTAT(s[2936]);
        initEDATTN1(s[2937]);
        initEDATTN2(s[2938]);
        initEDATTN3(s[2939]);
        initDVHSIZE(s[2940]);
        initDVMRDF(s[2941]);
        initDVMRDF12(s[2942]);
        initSEX(s[2943]);
        initHRPEDLEVEL(s[2944]);
        initWRKING_I(s[2945]);
        initWRKING_IFLAG(s[2946]);
        initSCHEMEET_I(s[2947]);
        initSCHEMEET_IFLAG(s[2948]);
        initJBAWAY_I(s[2949]);
        initJBAWAY_IFLAG(s[2950]);
        initOWNBUS_I(s[2951]);
        initOWNBUS_IFLAG(s[2952]);
        initRELBUS_I(s[2953]);
        initRELBUS_IFLAG(s[2954]);
        initLOOKED_I(s[2955]);
        initLOOKED_IFLAG(s[2956]);
        initSTARTJ_I(s[2957]);
        initSTARTJ_IFLAG(s[2958]);
        initDVILO3A_I(s[2959]);
        initDVILO3A_IFLAG(s[2960]);
        initEVERWK_I(s[2961]);
        initEVERWK_IFLAG(s[2962]);
        initSTAT_I(s[2963]);
        initSTAT_IFLAG(s[2964]);
        initNOUNITS(s[2965]);
        initDVNUMBU(s[2966]);
        initES2000(s[2967]);
        initNSSECB(s[2968]);
        initNSSEC5(s[2969]);
        initNSSEC3(s[2970]);
        initNSSEC8(s[2971]);
        initHPROX(s[2972]);
        initNUMCOUPLES(s[2973]);
        initCOUPLENUM(s[2974]);
        initPARTNSSEC(s[2975]);
        initPARTNSSECB(s[2976]);
        initPARTNSSEC8(s[2977]);
        initPARTNSSEC5(s[2978]);
        initPARTNSSEC3(s[2979]);
        initEDLEVEL(s[2980]);
        initEVERWK(s[2981]);
        initXSOC2010(s[2982]);
        initDVECACT(s[2983]);
        initHRPDVECACT(s[2984]);
        initDVAGE17(s[2985]);
        initDVAGE7(s[2986]);
        initCASEW5(s[2987]);
        initCASEW4(s[2988]);
        initCASEW3(s[2989]);
        initCASEW2(s[2990]);
        initCASEW1(s[2991]);
        initDVSEPANNUAL01(s[2992]);
        initDVSEPANNUAL02(s[2993]);
        initDVSEPANNUAL03(s[2994]);
        initDVSEPANNUAL04(s[2995]);
        initDVSEPANNUAL05(s[2996]);
        initDVSEPANNUAL06(s[2997]);
        initDVSEPANNUAL07(s[2998]);
        initDVSEPANNUAL08(s[2999]);
        initDVBENEFITANNUAL_I(s[3000]);
        initDVGIEMP(s[3001]);
        initDVGIPPEN(s[3002]);
        initDVGRSSESECJOB(s[3003]);
        initDVGRSSESECJOB_I(s[3004]);
        initDVNETRENTAMTANNUAL(s[3005]);
        initDVOIGROANNUAL_I(s[3006]);
        initDVBTOGANNUAL(s[3007]);
        initDVGIINV(s[3008]);
        initDVGISE(s[3009]);
        initDVGRSBONAMT_I(s[3010]);
        initDVGRSEMPSECJOB(s[3011]);
        initDVGRSEMPSECJOB_I(s[3012]);
        initDVGRSPAY(s[3013]);
        initDVRENTAMTANNUAL_I(s[3014]);
        initDVGRSRENTAMTANNUAL(s[3015]);
        initDVNETBONAMT(s[3016]);
        initDVNETBONAMT_I(s[3017]);
        initDVNETEMPSECJOB(s[3018]);
        initDVNETEMPSECJOB_I(s[3019]);
        initDVNETPAY(s[3020]);
        initDVNETSESECJOB(s[3021]);
        initDVNIINV(s[3022]);
        initDVNIPPEN(s[3023]);
        initDVNISE(s[3024]);
        initPARTGRSPAY(s[3025]);
        initTOTPARTGRSPAY(s[3026]);
        initDVOIGEGANNUAL_I(s[3027]);
        initDVOIGFRANNUAL_I(s[3028]);
        initDVOIGGTANNUAL_I(s[3029]);
        initDVOIGMAANNUAL_I(s[3030]);
        initDVOIGOPANNUAL_I(s[3031]);
        initDVOIGRRANNUAL_I(s[3032]);
        initDVOINEGANNUAL_I(s[3033]);
        initDVOINFRANNUAL_I(s[3034]);
        initDVOINGTANNUAL_I(s[3035]);
        initDVOINMAANNUAL_I(s[3036]);
        initDVOINOPANNUAL_I(s[3037]);
        initDVOINROANNUAL_I(s[3038]);
        initDVOINRRANNUAL_I(s[3039]);
        initDVSEGRSPAY(s[3040]);
        initDVSEGRSPAY_I(s[3041]);
        initDVSENETPAY(s[3042]);
        initDVSENETPAY_I(s[3043]);
        initDVNIOTHI(s[3044]);
        initDVIRREGOTHANNUAL(s[3045]);
        initDVWINANNUAL(s[3046]);
        initDVACCINANNUAL(s[3047]);
        initDVLUMPPENANNUAL(s[3048]);
        initDVREDUNANNUAL(s[3049]);
        initDVOTHINSANNUAL(s[3050]);
        initDVLIFEANNUAL(s[3051]);
        initDVINHERITANNUAL(s[3052]);
        initDVGIFTANNUAL(s[3053]);
        initGRSPAYEMPORSE(s[3054]);
        initSOC2010(s[3055]);
        initSICCODE(s[3056]);
        initSIC2007(s[3057]);
        initMARST(s[3058]);
    }

    @Override
    public WaAS_RecordID getID() {
        return (WaAS_RecordID) id;
    }
}
