/**
 * Source code generated by uk.ac.leeds.ccg.data.waascg.process.WaASCG_Main
 */

package uk.ac.leeds.ccg.data.waas.data.person;
import uk.ac.leeds.ccg.data.waas.data.id.WaAS_RecordID;

public abstract class WaAS_W4W5PRecord extends WaAS_W3W4W5PRecord {


    WaAS_W4W5PRecord(WaAS_RecordID i){
        super(i);
    }
    protected byte ADAMT1;

    protected byte ADAMT2;

    protected byte ADAMT3;

    protected byte ADAVAIL1;

    protected byte ADAVAIL2;

    protected byte ADAVAIL3;

    protected byte ADCONS1;

    protected byte ADCONS2;

    protected byte ADCONS3;

    protected byte ADCOST1;

    protected byte ADCOST2;

    protected byte ADCOST3;

    protected byte ADFUR1;

    protected byte ADFUR2;

    protected byte ADFUR3;

    protected byte ADJOINT1;

    protected byte ADJOINT2;

    protected byte ADJOINT3;

    protected byte ADPAY1;

    protected byte ADPAY2;

    protected byte ADPAY3;

    protected byte ADPROD1;

    protected byte ADPROD2;

    protected byte ADPROD3;

    protected byte ADPURCH1;

    protected byte ADPURCH2;

    protected byte ADPURCH3;

    protected byte ADRECORD1;

    protected byte ADRECORD2;

    protected byte ADRECORD3;

    protected byte ADSAT1;

    protected byte ADSAT2;

    protected byte ADSAT3;

    protected byte ADSATREFLECT1;

    protected byte ADSATREFLECT2;

    protected byte ADSATREFLECT3;

    protected byte ADSAVINV1;

    protected byte ADSAVINV10;

    protected byte ADSAVINV11;

    protected byte ADSAVINV12;

    protected byte ADSAVINV13;

    protected byte ADSAVINV14;

    protected byte ADSAVINV15;

    protected byte ADSAVINV19;

    protected byte ADSAVINV2;

    protected byte ADSAVINV20;

    protected byte ADSAVINV21;

    protected byte ADSAVINV3;

    protected byte ADSAVINV4;

    protected byte ADSAVINV5;

    protected boolean ADSAVINV6;

    protected boolean ADSAVINV7;

    protected byte ADSAVINV8;

    protected byte ADSAVINV9;

    protected byte ADTYP1;

    protected byte ADTYP2;

    protected byte ADTYP3;

    protected byte ADVICE;

    protected byte ADVNUMALL;

    protected byte ADVREAS1;

    protected byte ADVREAS2;

    protected byte ADVREAS3;

    protected byte ADWHO01;

    protected byte ADWHO02;

    protected boolean ADWHO15;

    protected byte ADWHO16;

    protected byte ADWHO17;

    protected byte ADWHO31;

    protected boolean ADWHO32;

    protected double AGEASAF;

    protected double ANNUITY1;

    protected double ANNUITY2;

    protected boolean ANYOTHERB_IFLAG;

    protected byte BENINTRO;

    protected byte CAJISA;

    protected short CASEW4;

    protected byte CATYPE1;

    protected byte CATYPE2;

    protected byte DBURDW3;

    protected byte DCARRCL01;

    protected byte DCARRCL02;

    protected byte DCARRCL03;

    protected boolean DCARRCL04;

    protected byte DCBE2YR1;

    protected byte DCBE2YR2;

    protected byte DCBE2YR3;

    protected byte DISBEN1;

    protected byte DISBEN1_I;

    protected byte DISBEN2;

    protected byte DISBEN2_I;

    protected byte DISBEN3;

    protected byte DISBEN3_I;

    protected boolean DISBEN_IFLAG;

    protected byte DLBEH6;

    protected byte DLBEH6_I;

    protected boolean DLBEH6_IFLAG;

    protected boolean DLBEH7;

    protected boolean DLBEH7_I;

    protected boolean DLBEH7_IFLAG;

    protected boolean DLBEH8;

    protected boolean DLBEH8_I;

    protected boolean DLBEH8_IFLAG;

    protected boolean DLBEH9;

    protected boolean DLBEH9_I;

    protected boolean DLBEH9_IFLAG;

    protected boolean DLEST6;

    protected boolean DLEST6_I;

    protected boolean DLEST6_IFLAG;

    protected boolean DLEST7;

    protected boolean DLEST7_I;

    protected boolean DLEST7_IFLAG;

    protected boolean DLEST8;

    protected boolean DLEST8_I;

    protected boolean DLEST8_IFLAG;

    protected boolean DLEST9;

    protected boolean DLEST9_I;

    protected boolean DLEST9_IFLAG;

    protected byte DLINS6;

    protected byte DLINS6_I;

    protected boolean DLINS6_IFLAG;

    protected byte DLINS7;

    protected byte DLINS7_I;

    protected boolean DLINS7_IFLAG;

    protected boolean DLINS8;

    protected boolean DLINS8_I;

    protected boolean DLINS8_IFLAG;

    protected boolean DLINS9;

    protected boolean DLINS9_I;

    protected boolean DLINS9_IFLAG;

    protected byte DLINT6;

    protected byte DLINT7;

    protected boolean DLINT8;

    protected boolean DLINT9;

    protected boolean DLOFT6;

    protected boolean DLOFT6_I;

    protected boolean DLOFT6_IFLAG;

    protected boolean DLOFT7;

    protected boolean DLOFT7_I;

    protected boolean DLOFT7_IFLAG;

    protected boolean DLOFT8;

    protected boolean DLOFT8_I;

    protected boolean DLOFT8_IFLAG;

    protected boolean DLOFT9;

    protected boolean DLOFT9_I;

    protected boolean DLOFT9_IFLAG;

    protected boolean DLOWE6;

    protected short DLOWE6_I;

    protected boolean DLOWE6_IFLAG;

    protected boolean DLOWE7;

    protected boolean DLOWE7_I;

    protected boolean DLOWE7_IFLAG;

    protected boolean DLOWE8;

    protected boolean DLOWE8_I;

    protected boolean DLOWE8_IFLAG;

    protected boolean DLOWE9;

    protected boolean DLOWE9_I;

    protected boolean DLOWE9_IFLAG;

    protected boolean DLSEC6;

    protected boolean DLSEC7;

    protected boolean DLSEC8;

    protected boolean DLSEC9;

    protected byte DLTYPE6;

    protected byte DLTYPE6_I;

    protected boolean DLTYPE6_IFLAG;

    protected byte DLTYPE7;

    protected byte DLTYPE7_I;

    protected boolean DLTYPE7_IFLAG;

    protected byte DLTYPE8;

    protected byte DLTYPE8_I;

    protected boolean DLTYPE8_IFLAG;

    protected byte DLTYPE9;

    protected byte DLTYPE9_I;

    protected boolean DLTYPE9_IFLAG;

    protected boolean DLWEST6;

    protected boolean DLWEST7;

    protected boolean DLWEST8;

    protected boolean DLWEST9;

    protected byte DLWHNM6;

    protected byte DLWHNM6_I;

    protected boolean DLWHNM6_IFLAG;

    protected byte DLWHNM7;

    protected byte DLWHNM7_I;

    protected boolean DLWHNM7_IFLAG;

    protected byte DLWHNM8;

    protected byte DLWHNM8_I;

    protected boolean DLWHNM8_IFLAG;

    protected byte DLWHNM9;

    protected byte DLWHNM9_I;

    protected boolean DLWHNM9_IFLAG;

    protected short DLWHNY6;

    protected short DLWHNY6_I;

    protected boolean DLWHNY6_IFLAG;

    protected short DLWHNY7;

    protected short DLWHNY7_I;

    protected boolean DLWHNY7_IFLAG;

    protected short DLWHNY8;

    protected short DLWHNY8_I;

    protected boolean DLWHNY8_IFLAG;

    protected short DLWHNY9;

    protected short DLWHNY9_I;

    protected boolean DLWHNY9_IFLAG;

    protected boolean DSLAMT6;

    protected boolean DSLAMT6_I;

    protected boolean DSLAMT7;

    protected boolean DSLAMT7_I;

    protected boolean DSLAMT8;

    protected boolean DSLAMT8_I;

    protected boolean DSLAMT9;

    protected boolean DSLAMT9_I;

    protected boolean DSLEST6;

    protected boolean DSLEST7;

    protected boolean DSLEST8;

    protected boolean DSLEST9;

    protected boolean DSLPAY6;

    protected boolean DSLPAY7;

    protected boolean DSLPAY8;

    protected boolean DSLPAY9;

    protected byte DSNUM1;

    protected int DVBENEFITANNUAL_I;

    protected int DVCOINV1;

    protected short DVDLOWE6;

    protected boolean DVDLOWE7;

    protected boolean DVDLOWE8;

    protected boolean DVDLOWE9;

    protected byte DVECACT;

    protected boolean DVHASDBRWEALTH;

    protected byte DVMRDF12;

    protected double DVSHODVAL1;

    protected int FNSVAL;

    protected byte HRPDVECACT;

    protected byte IWHO1;

    protected byte KIDBEN1;

    protected byte KIDBEN1_I;

    protected byte KIDBEN2;

    protected byte KIDBEN2_I;

    protected boolean KIDBEN_IFLAG;

    protected byte KNOWWPR;

    protected byte LIVWTH12;

    protected byte LNLFT6;

    protected byte LNLFT7;

    protected byte LNLFT8;

    protected byte LNLFT9;

    protected byte LNMN6;

    protected byte LNMN7;

    protected byte LNMN8;

    protected byte LNMN9;

    protected short LNOS6;

    protected short LNOS7;

    protected byte LNOS8;

    protected byte LNOS9;

    protected byte LNYR6;

    protected byte LNYR7;

    protected byte LNYR8;

    protected byte LNYR9;

    protected byte MONTHW3;

    protected boolean NWFLNVAL6;

    protected boolean NWFLNVAL7;

    protected boolean NWFLNVAL8;

    protected boolean NWFLNVAL9;

    protected boolean NWILNVAL6;

    protected boolean NWILNVAL7;

    protected boolean NWILNVAL8;

    protected boolean NWILNVAL9;

    protected boolean OSLC6;

    protected boolean OSLC7;

    protected boolean OSLC8;

    protected boolean OSLC9;

    protected byte OTHERBEN1;

    protected byte OTHERBEN1_I;

    protected byte OTHERBEN2;

    protected byte OTHERBEN2_I;

    protected boolean OTHERBEN3;

    protected byte OTHERBEN3_I;

    protected boolean OTHERBEN4;

    protected boolean OTHERBEN4_I;

    protected boolean OTHERBEN_IFLAG;

    protected byte OWHYSAV1;

    protected byte OWHYSAV2;

    protected byte OWHYSAV3;

    protected byte OWHYSAV4;

    protected byte OWHYSAV5;

    protected byte OWHYSAV6;

    protected byte OWHYSAV7;

    protected byte OWHYSAV8;

    protected byte OWHYSAV9;

    protected byte PENBEN1;

    protected byte PENBEN1_I;

    protected byte PENBEN2;

    protected byte PENBEN2_I;

    protected byte PENBEN3;

    protected byte PENBEN3_I;

    protected boolean PENBEN_IFLAG;

    protected byte PERSONW4;

    protected byte PFDRAW3;

    protected byte PMORTC1;

    protected int POCNAMT1;

    protected short POCNAMT2;

    protected byte POPYCH1;

    protected byte PORAGE1T;

    protected byte PORAGE2T;

    protected byte PPCNHOW3;

    protected byte PPCONCH1;

    protected byte PPDRINCB1;

    protected int PPRGAM1;

    protected double SIC2007;

    protected byte SOCFUND1;

    protected byte SOCFUND1_I;

    protected byte SOCFUND2;

    protected byte SOCFUND2_I;

    protected boolean SOCFUND3;

    protected boolean SOCFUND3_I;

    protected boolean SOCFUND4;

    protected boolean SOCFUND4_I;

    protected boolean SOCFUND_IFLAG;

    protected int TADDVL1;

    protected boolean UBUYTOL1;

    protected byte UBUYTOL10;

    protected byte UBUYTOL11;

    protected byte UBUYTOL12;

    protected boolean UBUYTOL2;

    protected boolean UBUYTOL3;

    protected boolean UBUYTOL4;

    protected boolean UBUYTOL5;

    protected boolean UBUYTOL6;

    protected byte UBUYTOL7;

    protected byte UBUYTOL8;

    protected byte UBUYTOL9;

    protected boolean UPROP5;

    protected boolean UPRTYP1;

    protected byte WAGEBEN1;

    protected byte WAGEBEN1_I;

    protected byte WAGEBEN2;

    protected byte WAGEBEN2_I;

    protected byte WAGEBEN3;

    protected byte WAGEBEN3_I;

    protected byte WAGEBEN4;

    protected byte WAGEBEN4_I;

    protected boolean WAGEBEN5;

    protected byte WAGEBEN5_I;

    protected boolean WAGEBEN6;

    protected boolean WAGEBEN6_I;

    protected boolean WAGEBEN_IFLAG;

    protected byte WPBTHA1;

    protected byte WPBTHA2;

    protected byte WPBTHP1;

    protected byte WPBTHP2;

    protected byte WPERA1;

    protected byte WPERA2;

    protected byte WPNRA1;

    protected byte WPNRA2;

    protected short YEARW3;

    protected double _NONPROXY_WGT;

    protected final void initADAMT1(String s) {
        if (!s.trim().isEmpty()) {
            ADAMT1 = Byte.parseByte(s);
        } else {
            ADAMT1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADAMT2(String s) {
        if (!s.trim().isEmpty()) {
            ADAMT2 = Byte.parseByte(s);
        } else {
            ADAMT2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADAMT3(String s) {
        if (!s.trim().isEmpty()) {
            ADAMT3 = Byte.parseByte(s);
        } else {
            ADAMT3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADAVAIL1(String s) {
        if (!s.trim().isEmpty()) {
            ADAVAIL1 = Byte.parseByte(s);
        } else {
            ADAVAIL1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADAVAIL2(String s) {
        if (!s.trim().isEmpty()) {
            ADAVAIL2 = Byte.parseByte(s);
        } else {
            ADAVAIL2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADAVAIL3(String s) {
        if (!s.trim().isEmpty()) {
            ADAVAIL3 = Byte.parseByte(s);
        } else {
            ADAVAIL3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADCONS1(String s) {
        if (!s.trim().isEmpty()) {
            ADCONS1 = Byte.parseByte(s);
        } else {
            ADCONS1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADCONS2(String s) {
        if (!s.trim().isEmpty()) {
            ADCONS2 = Byte.parseByte(s);
        } else {
            ADCONS2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADCONS3(String s) {
        if (!s.trim().isEmpty()) {
            ADCONS3 = Byte.parseByte(s);
        } else {
            ADCONS3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADCOST1(String s) {
        if (!s.trim().isEmpty()) {
            ADCOST1 = Byte.parseByte(s);
        } else {
            ADCOST1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADCOST2(String s) {
        if (!s.trim().isEmpty()) {
            ADCOST2 = Byte.parseByte(s);
        } else {
            ADCOST2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADCOST3(String s) {
        if (!s.trim().isEmpty()) {
            ADCOST3 = Byte.parseByte(s);
        } else {
            ADCOST3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADFUR1(String s) {
        if (!s.trim().isEmpty()) {
            ADFUR1 = Byte.parseByte(s);
        } else {
            ADFUR1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADFUR2(String s) {
        if (!s.trim().isEmpty()) {
            ADFUR2 = Byte.parseByte(s);
        } else {
            ADFUR2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADFUR3(String s) {
        if (!s.trim().isEmpty()) {
            ADFUR3 = Byte.parseByte(s);
        } else {
            ADFUR3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADJOINT1(String s) {
        if (!s.trim().isEmpty()) {
            ADJOINT1 = Byte.parseByte(s);
        } else {
            ADJOINT1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADJOINT2(String s) {
        if (!s.trim().isEmpty()) {
            ADJOINT2 = Byte.parseByte(s);
        } else {
            ADJOINT2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADJOINT3(String s) {
        if (!s.trim().isEmpty()) {
            ADJOINT3 = Byte.parseByte(s);
        } else {
            ADJOINT3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPAY1(String s) {
        if (!s.trim().isEmpty()) {
            ADPAY1 = Byte.parseByte(s);
        } else {
            ADPAY1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPAY2(String s) {
        if (!s.trim().isEmpty()) {
            ADPAY2 = Byte.parseByte(s);
        } else {
            ADPAY2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPAY3(String s) {
        if (!s.trim().isEmpty()) {
            ADPAY3 = Byte.parseByte(s);
        } else {
            ADPAY3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPROD1(String s) {
        if (!s.trim().isEmpty()) {
            ADPROD1 = Byte.parseByte(s);
        } else {
            ADPROD1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPROD2(String s) {
        if (!s.trim().isEmpty()) {
            ADPROD2 = Byte.parseByte(s);
        } else {
            ADPROD2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPROD3(String s) {
        if (!s.trim().isEmpty()) {
            ADPROD3 = Byte.parseByte(s);
        } else {
            ADPROD3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPURCH1(String s) {
        if (!s.trim().isEmpty()) {
            ADPURCH1 = Byte.parseByte(s);
        } else {
            ADPURCH1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPURCH2(String s) {
        if (!s.trim().isEmpty()) {
            ADPURCH2 = Byte.parseByte(s);
        } else {
            ADPURCH2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADPURCH3(String s) {
        if (!s.trim().isEmpty()) {
            ADPURCH3 = Byte.parseByte(s);
        } else {
            ADPURCH3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADRECORD1(String s) {
        if (!s.trim().isEmpty()) {
            ADRECORD1 = Byte.parseByte(s);
        } else {
            ADRECORD1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADRECORD2(String s) {
        if (!s.trim().isEmpty()) {
            ADRECORD2 = Byte.parseByte(s);
        } else {
            ADRECORD2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADRECORD3(String s) {
        if (!s.trim().isEmpty()) {
            ADRECORD3 = Byte.parseByte(s);
        } else {
            ADRECORD3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAT1(String s) {
        if (!s.trim().isEmpty()) {
            ADSAT1 = Byte.parseByte(s);
        } else {
            ADSAT1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAT2(String s) {
        if (!s.trim().isEmpty()) {
            ADSAT2 = Byte.parseByte(s);
        } else {
            ADSAT2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAT3(String s) {
        if (!s.trim().isEmpty()) {
            ADSAT3 = Byte.parseByte(s);
        } else {
            ADSAT3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSATREFLECT1(String s) {
        if (!s.trim().isEmpty()) {
            ADSATREFLECT1 = Byte.parseByte(s);
        } else {
            ADSATREFLECT1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSATREFLECT2(String s) {
        if (!s.trim().isEmpty()) {
            ADSATREFLECT2 = Byte.parseByte(s);
        } else {
            ADSATREFLECT2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSATREFLECT3(String s) {
        if (!s.trim().isEmpty()) {
            ADSATREFLECT3 = Byte.parseByte(s);
        } else {
            ADSATREFLECT3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV1(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV1 = Byte.parseByte(s);
        } else {
            ADSAVINV1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV10(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV10 = Byte.parseByte(s);
        } else {
            ADSAVINV10 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV11(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV11 = Byte.parseByte(s);
        } else {
            ADSAVINV11 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV12(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV12 = Byte.parseByte(s);
        } else {
            ADSAVINV12 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV13(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV13 = Byte.parseByte(s);
        } else {
            ADSAVINV13 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV14(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV14 = Byte.parseByte(s);
        } else {
            ADSAVINV14 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV15(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV15 = Byte.parseByte(s);
        } else {
            ADSAVINV15 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV19(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV19 = Byte.parseByte(s);
        } else {
            ADSAVINV19 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV2(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV2 = Byte.parseByte(s);
        } else {
            ADSAVINV2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV20(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV20 = Byte.parseByte(s);
        } else {
            ADSAVINV20 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV21(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV21 = Byte.parseByte(s);
        } else {
            ADSAVINV21 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV3(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV3 = Byte.parseByte(s);
        } else {
            ADSAVINV3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV4(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV4 = Byte.parseByte(s);
        } else {
            ADSAVINV4 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV5(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV5 = Byte.parseByte(s);
        } else {
            ADSAVINV5 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            ADSAVINV6 = false;
        }
    }

    protected final void initADSAVINV7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            ADSAVINV7 = false;
        }
    }

    protected final void initADSAVINV8(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV8 = Byte.parseByte(s);
        } else {
            ADSAVINV8 = Byte.MIN_VALUE;
        }
    }

    protected final void initADSAVINV9(String s) {
        if (!s.trim().isEmpty()) {
            ADSAVINV9 = Byte.parseByte(s);
        } else {
            ADSAVINV9 = Byte.MIN_VALUE;
        }
    }

    protected final void initADTYP1(String s) {
        if (!s.trim().isEmpty()) {
            ADTYP1 = Byte.parseByte(s);
        } else {
            ADTYP1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADTYP2(String s) {
        if (!s.trim().isEmpty()) {
            ADTYP2 = Byte.parseByte(s);
        } else {
            ADTYP2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADTYP3(String s) {
        if (!s.trim().isEmpty()) {
            ADTYP3 = Byte.parseByte(s);
        } else {
            ADTYP3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADVICE(String s) {
        if (!s.trim().isEmpty()) {
            ADVICE = Byte.parseByte(s);
        } else {
            ADVICE = Byte.MIN_VALUE;
        }
    }

    protected final void initADVNUMALL(String s) {
        if (!s.trim().isEmpty()) {
            ADVNUMALL = Byte.parseByte(s);
        } else {
            ADVNUMALL = Byte.MIN_VALUE;
        }
    }

    protected final void initADVREAS1(String s) {
        if (!s.trim().isEmpty()) {
            ADVREAS1 = Byte.parseByte(s);
        } else {
            ADVREAS1 = Byte.MIN_VALUE;
        }
    }

    protected final void initADVREAS2(String s) {
        if (!s.trim().isEmpty()) {
            ADVREAS2 = Byte.parseByte(s);
        } else {
            ADVREAS2 = Byte.MIN_VALUE;
        }
    }

    protected final void initADVREAS3(String s) {
        if (!s.trim().isEmpty()) {
            ADVREAS3 = Byte.parseByte(s);
        } else {
            ADVREAS3 = Byte.MIN_VALUE;
        }
    }

    protected final void initADWHO01(String s) {
        if (!s.trim().isEmpty()) {
            ADWHO01 = Byte.parseByte(s);
        } else {
            ADWHO01 = Byte.MIN_VALUE;
        }
    }

    protected final void initADWHO02(String s) {
        if (!s.trim().isEmpty()) {
            ADWHO02 = Byte.parseByte(s);
        } else {
            ADWHO02 = Byte.MIN_VALUE;
        }
    }

    protected final void initADWHO15(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            ADWHO15 = false;
        }
    }

    protected final void initADWHO16(String s) {
        if (!s.trim().isEmpty()) {
            ADWHO16 = Byte.parseByte(s);
        } else {
            ADWHO16 = Byte.MIN_VALUE;
        }
    }

    protected final void initADWHO17(String s) {
        if (!s.trim().isEmpty()) {
            ADWHO17 = Byte.parseByte(s);
        } else {
            ADWHO17 = Byte.MIN_VALUE;
        }
    }

    protected final void initADWHO31(String s) {
        if (!s.trim().isEmpty()) {
            ADWHO31 = Byte.parseByte(s);
        } else {
            ADWHO31 = Byte.MIN_VALUE;
        }
    }

    protected final void initADWHO32(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            ADWHO32 = false;
        }
    }

    protected final void initAGEASAF(String s) {
        if (!s.trim().isEmpty()) {
            AGEASAF = Double.parseDouble(s);
        } else {
            AGEASAF = Double.NaN;
        }
    }

    protected final void initANNUITY1(String s) {
        if (!s.trim().isEmpty()) {
            ANNUITY1 = Double.parseDouble(s);
        } else {
            ANNUITY1 = Double.NaN;
        }
    }

    protected final void initANNUITY2(String s) {
        if (!s.trim().isEmpty()) {
            ANNUITY2 = Double.parseDouble(s);
        } else {
            ANNUITY2 = Double.NaN;
        }
    }

    protected final void initANYOTHERB_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            ANYOTHERB_IFLAG = false;
        }
    }

    protected final void initBENINTRO(String s) {
        if (!s.trim().isEmpty()) {
            BENINTRO = Byte.parseByte(s);
        } else {
            BENINTRO = Byte.MIN_VALUE;
        }
    }

    protected final void initCAJISA(String s) {
        if (!s.trim().isEmpty()) {
            CAJISA = Byte.parseByte(s);
        } else {
            CAJISA = Byte.MIN_VALUE;
        }
    }

    protected final void initCASEW4(String s) {
        if (!s.trim().isEmpty()) {
            CASEW4 = Short.parseShort(s);
        } else {
            CASEW4 = Short.MIN_VALUE;
        }
    }

    protected final void initCATYPE1(String s) {
        if (!s.trim().isEmpty()) {
            CATYPE1 = Byte.parseByte(s);
        } else {
            CATYPE1 = Byte.MIN_VALUE;
        }
    }

    protected final void initCATYPE2(String s) {
        if (!s.trim().isEmpty()) {
            CATYPE2 = Byte.parseByte(s);
        } else {
            CATYPE2 = Byte.MIN_VALUE;
        }
    }

    protected final void initDBURDW3(String s) {
        if (!s.trim().isEmpty()) {
            DBURDW3 = Byte.parseByte(s);
        } else {
            DBURDW3 = Byte.MIN_VALUE;
        }
    }

    protected final void initDCARRCL01(String s) {
        if (!s.trim().isEmpty()) {
            DCARRCL01 = Byte.parseByte(s);
        } else {
            DCARRCL01 = Byte.MIN_VALUE;
        }
    }

    protected final void initDCARRCL02(String s) {
        if (!s.trim().isEmpty()) {
            DCARRCL02 = Byte.parseByte(s);
        } else {
            DCARRCL02 = Byte.MIN_VALUE;
        }
    }

    protected final void initDCARRCL03(String s) {
        if (!s.trim().isEmpty()) {
            DCARRCL03 = Byte.parseByte(s);
        } else {
            DCARRCL03 = Byte.MIN_VALUE;
        }
    }

    protected final void initDCARRCL04(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DCARRCL04 = false;
        }
    }

    protected final void initDCBE2YR1(String s) {
        if (!s.trim().isEmpty()) {
            DCBE2YR1 = Byte.parseByte(s);
        } else {
            DCBE2YR1 = Byte.MIN_VALUE;
        }
    }

    protected final void initDCBE2YR2(String s) {
        if (!s.trim().isEmpty()) {
            DCBE2YR2 = Byte.parseByte(s);
        } else {
            DCBE2YR2 = Byte.MIN_VALUE;
        }
    }

    protected final void initDCBE2YR3(String s) {
        if (!s.trim().isEmpty()) {
            DCBE2YR3 = Byte.parseByte(s);
        } else {
            DCBE2YR3 = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN1(String s) {
        if (!s.trim().isEmpty()) {
            DISBEN1 = Byte.parseByte(s);
        } else {
            DISBEN1 = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN1_I(String s) {
        if (!s.trim().isEmpty()) {
            DISBEN1_I = Byte.parseByte(s);
        } else {
            DISBEN1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN2(String s) {
        if (!s.trim().isEmpty()) {
            DISBEN2 = Byte.parseByte(s);
        } else {
            DISBEN2 = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN2_I(String s) {
        if (!s.trim().isEmpty()) {
            DISBEN2_I = Byte.parseByte(s);
        } else {
            DISBEN2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN3(String s) {
        if (!s.trim().isEmpty()) {
            DISBEN3 = Byte.parseByte(s);
        } else {
            DISBEN3 = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN3_I(String s) {
        if (!s.trim().isEmpty()) {
            DISBEN3_I = Byte.parseByte(s);
        } else {
            DISBEN3_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDISBEN_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DISBEN_IFLAG = false;
        }
    }

    protected final void initDLBEH6(String s) {
        if (!s.trim().isEmpty()) {
            DLBEH6 = Byte.parseByte(s);
        } else {
            DLBEH6 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLBEH6_I(String s) {
        if (!s.trim().isEmpty()) {
            DLBEH6_I = Byte.parseByte(s);
        } else {
            DLBEH6_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLBEH6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH6_IFLAG = false;
        }
    }

    protected final void initDLBEH7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH7 = false;
        }
    }

    protected final void initDLBEH7_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH7_I = false;
        }
    }

    protected final void initDLBEH7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH7_IFLAG = false;
        }
    }

    protected final void initDLBEH8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH8 = false;
        }
    }

    protected final void initDLBEH8_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH8_I = false;
        }
    }

    protected final void initDLBEH8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH8_IFLAG = false;
        }
    }

    protected final void initDLBEH9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH9 = false;
        }
    }

    protected final void initDLBEH9_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH9_I = false;
        }
    }

    protected final void initDLBEH9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLBEH9_IFLAG = false;
        }
    }

    protected final void initDLEST6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST6 = false;
        }
    }

    protected final void initDLEST6_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST6_I = false;
        }
    }

    protected final void initDLEST6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST6_IFLAG = false;
        }
    }

    protected final void initDLEST7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST7 = false;
        }
    }

    protected final void initDLEST7_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST7_I = false;
        }
    }

    protected final void initDLEST7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST7_IFLAG = false;
        }
    }

    protected final void initDLEST8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST8 = false;
        }
    }

    protected final void initDLEST8_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST8_I = false;
        }
    }

    protected final void initDLEST8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST8_IFLAG = false;
        }
    }

    protected final void initDLEST9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST9 = false;
        }
    }

    protected final void initDLEST9_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST9_I = false;
        }
    }

    protected final void initDLEST9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLEST9_IFLAG = false;
        }
    }

    protected final void initDLINS6(String s) {
        if (!s.trim().isEmpty()) {
            DLINS6 = Byte.parseByte(s);
        } else {
            DLINS6 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLINS6_I(String s) {
        if (!s.trim().isEmpty()) {
            DLINS6_I = Byte.parseByte(s);
        } else {
            DLINS6_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLINS6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS6_IFLAG = false;
        }
    }

    protected final void initDLINS7(String s) {
        if (!s.trim().isEmpty()) {
            DLINS7 = Byte.parseByte(s);
        } else {
            DLINS7 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLINS7_I(String s) {
        if (!s.trim().isEmpty()) {
            DLINS7_I = Byte.parseByte(s);
        } else {
            DLINS7_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLINS7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS7_IFLAG = false;
        }
    }

    protected final void initDLINS8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS8 = false;
        }
    }

    protected final void initDLINS8_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS8_I = false;
        }
    }

    protected final void initDLINS8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS8_IFLAG = false;
        }
    }

    protected final void initDLINS9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS9 = false;
        }
    }

    protected final void initDLINS9_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS9_I = false;
        }
    }

    protected final void initDLINS9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINS9_IFLAG = false;
        }
    }

    protected final void initDLINT6(String s) {
        if (!s.trim().isEmpty()) {
            DLINT6 = Byte.parseByte(s);
        } else {
            DLINT6 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLINT7(String s) {
        if (!s.trim().isEmpty()) {
            DLINT7 = Byte.parseByte(s);
        } else {
            DLINT7 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLINT8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINT8 = false;
        }
    }

    protected final void initDLINT9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLINT9 = false;
        }
    }

    protected final void initDLOFT6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT6 = false;
        }
    }

    protected final void initDLOFT6_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT6_I = false;
        }
    }

    protected final void initDLOFT6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT6_IFLAG = false;
        }
    }

    protected final void initDLOFT7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT7 = false;
        }
    }

    protected final void initDLOFT7_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT7_I = false;
        }
    }

    protected final void initDLOFT7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT7_IFLAG = false;
        }
    }

    protected final void initDLOFT8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT8 = false;
        }
    }

    protected final void initDLOFT8_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT8_I = false;
        }
    }

    protected final void initDLOFT8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT8_IFLAG = false;
        }
    }

    protected final void initDLOFT9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT9 = false;
        }
    }

    protected final void initDLOFT9_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT9_I = false;
        }
    }

    protected final void initDLOFT9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOFT9_IFLAG = false;
        }
    }

    protected final void initDLOWE6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE6 = false;
        }
    }

    protected final void initDLOWE6_I(String s) {
        if (!s.trim().isEmpty()) {
            DLOWE6_I = Short.parseShort(s);
        } else {
            DLOWE6_I = Short.MIN_VALUE;
        }
    }

    protected final void initDLOWE6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE6_IFLAG = false;
        }
    }

    protected final void initDLOWE7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE7 = false;
        }
    }

    protected final void initDLOWE7_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE7_I = false;
        }
    }

    protected final void initDLOWE7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE7_IFLAG = false;
        }
    }

    protected final void initDLOWE8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE8 = false;
        }
    }

    protected final void initDLOWE8_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE8_I = false;
        }
    }

    protected final void initDLOWE8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE8_IFLAG = false;
        }
    }

    protected final void initDLOWE9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE9 = false;
        }
    }

    protected final void initDLOWE9_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE9_I = false;
        }
    }

    protected final void initDLOWE9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLOWE9_IFLAG = false;
        }
    }

    protected final void initDLSEC6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLSEC6 = false;
        }
    }

    protected final void initDLSEC7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLSEC7 = false;
        }
    }

    protected final void initDLSEC8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLSEC8 = false;
        }
    }

    protected final void initDLSEC9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLSEC9 = false;
        }
    }

    protected final void initDLTYPE6(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE6 = Byte.parseByte(s);
        } else {
            DLTYPE6 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE6_I(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE6_I = Byte.parseByte(s);
        } else {
            DLTYPE6_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLTYPE6_IFLAG = false;
        }
    }

    protected final void initDLTYPE7(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE7 = Byte.parseByte(s);
        } else {
            DLTYPE7 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE7_I(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE7_I = Byte.parseByte(s);
        } else {
            DLTYPE7_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLTYPE7_IFLAG = false;
        }
    }

    protected final void initDLTYPE8(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE8 = Byte.parseByte(s);
        } else {
            DLTYPE8 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE8_I(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE8_I = Byte.parseByte(s);
        } else {
            DLTYPE8_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLTYPE8_IFLAG = false;
        }
    }

    protected final void initDLTYPE9(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE9 = Byte.parseByte(s);
        } else {
            DLTYPE9 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE9_I(String s) {
        if (!s.trim().isEmpty()) {
            DLTYPE9_I = Byte.parseByte(s);
        } else {
            DLTYPE9_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLTYPE9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLTYPE9_IFLAG = false;
        }
    }

    protected final void initDLWEST6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWEST6 = false;
        }
    }

    protected final void initDLWEST7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWEST7 = false;
        }
    }

    protected final void initDLWEST8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWEST8 = false;
        }
    }

    protected final void initDLWEST9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWEST9 = false;
        }
    }

    protected final void initDLWHNM6(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM6 = Byte.parseByte(s);
        } else {
            DLWHNM6 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM6_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM6_I = Byte.parseByte(s);
        } else {
            DLWHNM6_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNM6_IFLAG = false;
        }
    }

    protected final void initDLWHNM7(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM7 = Byte.parseByte(s);
        } else {
            DLWHNM7 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM7_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM7_I = Byte.parseByte(s);
        } else {
            DLWHNM7_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNM7_IFLAG = false;
        }
    }

    protected final void initDLWHNM8(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM8 = Byte.parseByte(s);
        } else {
            DLWHNM8 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM8_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM8_I = Byte.parseByte(s);
        } else {
            DLWHNM8_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNM8_IFLAG = false;
        }
    }

    protected final void initDLWHNM9(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM9 = Byte.parseByte(s);
        } else {
            DLWHNM9 = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM9_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNM9_I = Byte.parseByte(s);
        } else {
            DLWHNM9_I = Byte.MIN_VALUE;
        }
    }

    protected final void initDLWHNM9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNM9_IFLAG = false;
        }
    }

    protected final void initDLWHNY6(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY6 = Short.parseShort(s);
        } else {
            DLWHNY6 = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY6_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY6_I = Short.parseShort(s);
        } else {
            DLWHNY6_I = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY6_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNY6_IFLAG = false;
        }
    }

    protected final void initDLWHNY7(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY7 = Short.parseShort(s);
        } else {
            DLWHNY7 = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY7_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY7_I = Short.parseShort(s);
        } else {
            DLWHNY7_I = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY7_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNY7_IFLAG = false;
        }
    }

    protected final void initDLWHNY8(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY8 = Short.parseShort(s);
        } else {
            DLWHNY8 = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY8_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY8_I = Short.parseShort(s);
        } else {
            DLWHNY8_I = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY8_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNY8_IFLAG = false;
        }
    }

    protected final void initDLWHNY9(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY9 = Short.parseShort(s);
        } else {
            DLWHNY9 = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY9_I(String s) {
        if (!s.trim().isEmpty()) {
            DLWHNY9_I = Short.parseShort(s);
        } else {
            DLWHNY9_I = Short.MIN_VALUE;
        }
    }

    protected final void initDLWHNY9_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DLWHNY9_IFLAG = false;
        }
    }

    protected final void initDSLAMT6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT6 = false;
        }
    }

    protected final void initDSLAMT6_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT6_I = false;
        }
    }

    protected final void initDSLAMT7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT7 = false;
        }
    }

    protected final void initDSLAMT7_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT7_I = false;
        }
    }

    protected final void initDSLAMT8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT8 = false;
        }
    }

    protected final void initDSLAMT8_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT8_I = false;
        }
    }

    protected final void initDSLAMT9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT9 = false;
        }
    }

    protected final void initDSLAMT9_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLAMT9_I = false;
        }
    }

    protected final void initDSLEST6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLEST6 = false;
        }
    }

    protected final void initDSLEST7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLEST7 = false;
        }
    }

    protected final void initDSLEST8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLEST8 = false;
        }
    }

    protected final void initDSLEST9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLEST9 = false;
        }
    }

    protected final void initDSLPAY6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLPAY6 = false;
        }
    }

    protected final void initDSLPAY7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLPAY7 = false;
        }
    }

    protected final void initDSLPAY8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLPAY8 = false;
        }
    }

    protected final void initDSLPAY9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DSLPAY9 = false;
        }
    }

    protected final void initDSNUM1(String s) {
        if (!s.trim().isEmpty()) {
            DSNUM1 = Byte.parseByte(s);
        } else {
            DSNUM1 = Byte.MIN_VALUE;
        }
    }

    protected final void initDVBENEFITANNUAL_I(String s) {
        if (!s.trim().isEmpty()) {
            DVBENEFITANNUAL_I = Integer.parseInt(s);
        } else {
            DVBENEFITANNUAL_I = Integer.MIN_VALUE;
        }
    }

    protected final void initDVCOINV1(String s) {
        if (!s.trim().isEmpty()) {
            DVCOINV1 = Integer.parseInt(s);
        } else {
            DVCOINV1 = Integer.MIN_VALUE;
        }
    }

    protected final void initDVDLOWE6(String s) {
        if (!s.trim().isEmpty()) {
            DVDLOWE6 = Short.parseShort(s);
        } else {
            DVDLOWE6 = Short.MIN_VALUE;
        }
    }

    protected final void initDVDLOWE7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DVDLOWE7 = false;
        }
    }

    protected final void initDVDLOWE8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DVDLOWE8 = false;
        }
    }

    protected final void initDVDLOWE9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DVDLOWE9 = false;
        }
    }

    protected final void initDVECACT(String s) {
        if (!s.trim().isEmpty()) {
            DVECACT = Byte.parseByte(s);
        } else {
            DVECACT = Byte.MIN_VALUE;
        }
    }

    protected final void initDVHASDBRWEALTH(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            DVHASDBRWEALTH = false;
        }
    }

    protected final void initDVMRDF12(String s) {
        if (!s.trim().isEmpty()) {
            DVMRDF12 = Byte.parseByte(s);
        } else {
            DVMRDF12 = Byte.MIN_VALUE;
        }
    }

    protected final void initDVSHODVAL1(String s) {
        if (!s.trim().isEmpty()) {
            DVSHODVAL1 = Double.parseDouble(s);
        } else {
            DVSHODVAL1 = Double.NaN;
        }
    }

    protected final void initFNSVAL(String s) {
        if (!s.trim().isEmpty()) {
            FNSVAL = Integer.parseInt(s);
        } else {
            FNSVAL = Integer.MIN_VALUE;
        }
    }

    protected final void initHRPDVECACT(String s) {
        if (!s.trim().isEmpty()) {
            HRPDVECACT = Byte.parseByte(s);
        } else {
            HRPDVECACT = Byte.MIN_VALUE;
        }
    }

    protected final void initIWHO1(String s) {
        if (!s.trim().isEmpty()) {
            IWHO1 = Byte.parseByte(s);
        } else {
            IWHO1 = Byte.MIN_VALUE;
        }
    }

    protected final void initKIDBEN1(String s) {
        if (!s.trim().isEmpty()) {
            KIDBEN1 = Byte.parseByte(s);
        } else {
            KIDBEN1 = Byte.MIN_VALUE;
        }
    }

    protected final void initKIDBEN1_I(String s) {
        if (!s.trim().isEmpty()) {
            KIDBEN1_I = Byte.parseByte(s);
        } else {
            KIDBEN1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initKIDBEN2(String s) {
        if (!s.trim().isEmpty()) {
            KIDBEN2 = Byte.parseByte(s);
        } else {
            KIDBEN2 = Byte.MIN_VALUE;
        }
    }

    protected final void initKIDBEN2_I(String s) {
        if (!s.trim().isEmpty()) {
            KIDBEN2_I = Byte.parseByte(s);
        } else {
            KIDBEN2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initKIDBEN_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            KIDBEN_IFLAG = false;
        }
    }

    protected final void initKNOWWPR(String s) {
        if (!s.trim().isEmpty()) {
            KNOWWPR = Byte.parseByte(s);
        } else {
            KNOWWPR = Byte.MIN_VALUE;
        }
    }

    protected final void initLIVWTH12(String s) {
        if (!s.trim().isEmpty()) {
            LIVWTH12 = Byte.parseByte(s);
        } else {
            LIVWTH12 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNLFT6(String s) {
        if (!s.trim().isEmpty()) {
            LNLFT6 = Byte.parseByte(s);
        } else {
            LNLFT6 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNLFT7(String s) {
        if (!s.trim().isEmpty()) {
            LNLFT7 = Byte.parseByte(s);
        } else {
            LNLFT7 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNLFT8(String s) {
        if (!s.trim().isEmpty()) {
            LNLFT8 = Byte.parseByte(s);
        } else {
            LNLFT8 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNLFT9(String s) {
        if (!s.trim().isEmpty()) {
            LNLFT9 = Byte.parseByte(s);
        } else {
            LNLFT9 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNMN6(String s) {
        if (!s.trim().isEmpty()) {
            LNMN6 = Byte.parseByte(s);
        } else {
            LNMN6 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNMN7(String s) {
        if (!s.trim().isEmpty()) {
            LNMN7 = Byte.parseByte(s);
        } else {
            LNMN7 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNMN8(String s) {
        if (!s.trim().isEmpty()) {
            LNMN8 = Byte.parseByte(s);
        } else {
            LNMN8 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNMN9(String s) {
        if (!s.trim().isEmpty()) {
            LNMN9 = Byte.parseByte(s);
        } else {
            LNMN9 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNOS6(String s) {
        if (!s.trim().isEmpty()) {
            LNOS6 = Short.parseShort(s);
        } else {
            LNOS6 = Short.MIN_VALUE;
        }
    }

    protected final void initLNOS7(String s) {
        if (!s.trim().isEmpty()) {
            LNOS7 = Short.parseShort(s);
        } else {
            LNOS7 = Short.MIN_VALUE;
        }
    }

    protected final void initLNOS8(String s) {
        if (!s.trim().isEmpty()) {
            LNOS8 = Byte.parseByte(s);
        } else {
            LNOS8 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNOS9(String s) {
        if (!s.trim().isEmpty()) {
            LNOS9 = Byte.parseByte(s);
        } else {
            LNOS9 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNYR6(String s) {
        if (!s.trim().isEmpty()) {
            LNYR6 = Byte.parseByte(s);
        } else {
            LNYR6 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNYR7(String s) {
        if (!s.trim().isEmpty()) {
            LNYR7 = Byte.parseByte(s);
        } else {
            LNYR7 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNYR8(String s) {
        if (!s.trim().isEmpty()) {
            LNYR8 = Byte.parseByte(s);
        } else {
            LNYR8 = Byte.MIN_VALUE;
        }
    }

    protected final void initLNYR9(String s) {
        if (!s.trim().isEmpty()) {
            LNYR9 = Byte.parseByte(s);
        } else {
            LNYR9 = Byte.MIN_VALUE;
        }
    }

    protected final void initMONTHW3(String s) {
        if (!s.trim().isEmpty()) {
            MONTHW3 = Byte.parseByte(s);
        } else {
            MONTHW3 = Byte.MIN_VALUE;
        }
    }

    protected final void initNWFLNVAL6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWFLNVAL6 = false;
        }
    }

    protected final void initNWFLNVAL7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWFLNVAL7 = false;
        }
    }

    protected final void initNWFLNVAL8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWFLNVAL8 = false;
        }
    }

    protected final void initNWFLNVAL9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWFLNVAL9 = false;
        }
    }

    protected final void initNWILNVAL6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWILNVAL6 = false;
        }
    }

    protected final void initNWILNVAL7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWILNVAL7 = false;
        }
    }

    protected final void initNWILNVAL8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWILNVAL8 = false;
        }
    }

    protected final void initNWILNVAL9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            NWILNVAL9 = false;
        }
    }

    protected final void initOSLC6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OSLC6 = false;
        }
    }

    protected final void initOSLC7(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OSLC7 = false;
        }
    }

    protected final void initOSLC8(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OSLC8 = false;
        }
    }

    protected final void initOSLC9(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OSLC9 = false;
        }
    }

    protected final void initOTHERBEN1(String s) {
        if (!s.trim().isEmpty()) {
            OTHERBEN1 = Byte.parseByte(s);
        } else {
            OTHERBEN1 = Byte.MIN_VALUE;
        }
    }

    protected final void initOTHERBEN1_I(String s) {
        if (!s.trim().isEmpty()) {
            OTHERBEN1_I = Byte.parseByte(s);
        } else {
            OTHERBEN1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initOTHERBEN2(String s) {
        if (!s.trim().isEmpty()) {
            OTHERBEN2 = Byte.parseByte(s);
        } else {
            OTHERBEN2 = Byte.MIN_VALUE;
        }
    }

    protected final void initOTHERBEN2_I(String s) {
        if (!s.trim().isEmpty()) {
            OTHERBEN2_I = Byte.parseByte(s);
        } else {
            OTHERBEN2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initOTHERBEN3(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OTHERBEN3 = false;
        }
    }

    protected final void initOTHERBEN3_I(String s) {
        if (!s.trim().isEmpty()) {
            OTHERBEN3_I = Byte.parseByte(s);
        } else {
            OTHERBEN3_I = Byte.MIN_VALUE;
        }
    }

    protected final void initOTHERBEN4(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OTHERBEN4 = false;
        }
    }

    protected final void initOTHERBEN4_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OTHERBEN4_I = false;
        }
    }

    protected final void initOTHERBEN_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            OTHERBEN_IFLAG = false;
        }
    }

    protected final void initOWHYSAV1(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV1 = Byte.parseByte(s);
        } else {
            OWHYSAV1 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV2(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV2 = Byte.parseByte(s);
        } else {
            OWHYSAV2 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV3(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV3 = Byte.parseByte(s);
        } else {
            OWHYSAV3 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV4(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV4 = Byte.parseByte(s);
        } else {
            OWHYSAV4 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV5(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV5 = Byte.parseByte(s);
        } else {
            OWHYSAV5 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV6(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV6 = Byte.parseByte(s);
        } else {
            OWHYSAV6 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV7(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV7 = Byte.parseByte(s);
        } else {
            OWHYSAV7 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV8(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV8 = Byte.parseByte(s);
        } else {
            OWHYSAV8 = Byte.MIN_VALUE;
        }
    }

    protected final void initOWHYSAV9(String s) {
        if (!s.trim().isEmpty()) {
            OWHYSAV9 = Byte.parseByte(s);
        } else {
            OWHYSAV9 = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN1(String s) {
        if (!s.trim().isEmpty()) {
            PENBEN1 = Byte.parseByte(s);
        } else {
            PENBEN1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN1_I(String s) {
        if (!s.trim().isEmpty()) {
            PENBEN1_I = Byte.parseByte(s);
        } else {
            PENBEN1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN2(String s) {
        if (!s.trim().isEmpty()) {
            PENBEN2 = Byte.parseByte(s);
        } else {
            PENBEN2 = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN2_I(String s) {
        if (!s.trim().isEmpty()) {
            PENBEN2_I = Byte.parseByte(s);
        } else {
            PENBEN2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN3(String s) {
        if (!s.trim().isEmpty()) {
            PENBEN3 = Byte.parseByte(s);
        } else {
            PENBEN3 = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN3_I(String s) {
        if (!s.trim().isEmpty()) {
            PENBEN3_I = Byte.parseByte(s);
        } else {
            PENBEN3_I = Byte.MIN_VALUE;
        }
    }

    protected final void initPENBEN_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            PENBEN_IFLAG = false;
        }
    }

    protected final void initPERSONW4(String s) {
        if (!s.trim().isEmpty()) {
            PERSONW4 = Byte.parseByte(s);
        } else {
            PERSONW4 = Byte.MIN_VALUE;
        }
    }

    protected final void initPFDRAW3(String s) {
        if (!s.trim().isEmpty()) {
            PFDRAW3 = Byte.parseByte(s);
        } else {
            PFDRAW3 = Byte.MIN_VALUE;
        }
    }

    protected final void initPMORTC1(String s) {
        if (!s.trim().isEmpty()) {
            PMORTC1 = Byte.parseByte(s);
        } else {
            PMORTC1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPOCNAMT1(String s) {
        if (!s.trim().isEmpty()) {
            POCNAMT1 = Integer.parseInt(s);
        } else {
            POCNAMT1 = Integer.MIN_VALUE;
        }
    }

    protected final void initPOCNAMT2(String s) {
        if (!s.trim().isEmpty()) {
            POCNAMT2 = Short.parseShort(s);
        } else {
            POCNAMT2 = Short.MIN_VALUE;
        }
    }

    protected final void initPOPYCH1(String s) {
        if (!s.trim().isEmpty()) {
            POPYCH1 = Byte.parseByte(s);
        } else {
            POPYCH1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPORAGE1T(String s) {
        if (!s.trim().isEmpty()) {
            PORAGE1T = Byte.parseByte(s);
        } else {
            PORAGE1T = Byte.MIN_VALUE;
        }
    }

    protected final void initPORAGE2T(String s) {
        if (!s.trim().isEmpty()) {
            PORAGE2T = Byte.parseByte(s);
        } else {
            PORAGE2T = Byte.MIN_VALUE;
        }
    }

    protected final void initPPCNHOW3(String s) {
        if (!s.trim().isEmpty()) {
            PPCNHOW3 = Byte.parseByte(s);
        } else {
            PPCNHOW3 = Byte.MIN_VALUE;
        }
    }

    protected final void initPPCONCH1(String s) {
        if (!s.trim().isEmpty()) {
            PPCONCH1 = Byte.parseByte(s);
        } else {
            PPCONCH1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPPDRINCB1(String s) {
        if (!s.trim().isEmpty()) {
            PPDRINCB1 = Byte.parseByte(s);
        } else {
            PPDRINCB1 = Byte.MIN_VALUE;
        }
    }

    protected final void initPPRGAM1(String s) {
        if (!s.trim().isEmpty()) {
            PPRGAM1 = Integer.parseInt(s);
        } else {
            PPRGAM1 = Integer.MIN_VALUE;
        }
    }

    protected final void initSIC2007(String s) {
        if (!s.trim().isEmpty()) {
            SIC2007 = Double.parseDouble(s);
        } else {
            SIC2007 = Double.NaN;
        }
    }

    protected final void initSOCFUND1(String s) {
        if (!s.trim().isEmpty()) {
            SOCFUND1 = Byte.parseByte(s);
        } else {
            SOCFUND1 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOCFUND1_I(String s) {
        if (!s.trim().isEmpty()) {
            SOCFUND1_I = Byte.parseByte(s);
        } else {
            SOCFUND1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initSOCFUND2(String s) {
        if (!s.trim().isEmpty()) {
            SOCFUND2 = Byte.parseByte(s);
        } else {
            SOCFUND2 = Byte.MIN_VALUE;
        }
    }

    protected final void initSOCFUND2_I(String s) {
        if (!s.trim().isEmpty()) {
            SOCFUND2_I = Byte.parseByte(s);
        } else {
            SOCFUND2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initSOCFUND3(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            SOCFUND3 = false;
        }
    }

    protected final void initSOCFUND3_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            SOCFUND3_I = false;
        }
    }

    protected final void initSOCFUND4(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            SOCFUND4 = false;
        }
    }

    protected final void initSOCFUND4_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            SOCFUND4_I = false;
        }
    }

    protected final void initSOCFUND_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            SOCFUND_IFLAG = false;
        }
    }

    protected final void initTADDVL1(String s) {
        if (!s.trim().isEmpty()) {
            TADDVL1 = Integer.parseInt(s);
        } else {
            TADDVL1 = Integer.MIN_VALUE;
        }
    }

    protected final void initUBUYTOL1(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UBUYTOL1 = false;
        }
    }

    protected final void initUBUYTOL10(String s) {
        if (!s.trim().isEmpty()) {
            UBUYTOL10 = Byte.parseByte(s);
        } else {
            UBUYTOL10 = Byte.MIN_VALUE;
        }
    }

    protected final void initUBUYTOL11(String s) {
        if (!s.trim().isEmpty()) {
            UBUYTOL11 = Byte.parseByte(s);
        } else {
            UBUYTOL11 = Byte.MIN_VALUE;
        }
    }

    protected final void initUBUYTOL12(String s) {
        if (!s.trim().isEmpty()) {
            UBUYTOL12 = Byte.parseByte(s);
        } else {
            UBUYTOL12 = Byte.MIN_VALUE;
        }
    }

    protected final void initUBUYTOL2(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UBUYTOL2 = false;
        }
    }

    protected final void initUBUYTOL3(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UBUYTOL3 = false;
        }
    }

    protected final void initUBUYTOL4(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UBUYTOL4 = false;
        }
    }

    protected final void initUBUYTOL5(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UBUYTOL5 = false;
        }
    }

    protected final void initUBUYTOL6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UBUYTOL6 = false;
        }
    }

    protected final void initUBUYTOL7(String s) {
        if (!s.trim().isEmpty()) {
            UBUYTOL7 = Byte.parseByte(s);
        } else {
            UBUYTOL7 = Byte.MIN_VALUE;
        }
    }

    protected final void initUBUYTOL8(String s) {
        if (!s.trim().isEmpty()) {
            UBUYTOL8 = Byte.parseByte(s);
        } else {
            UBUYTOL8 = Byte.MIN_VALUE;
        }
    }

    protected final void initUBUYTOL9(String s) {
        if (!s.trim().isEmpty()) {
            UBUYTOL9 = Byte.parseByte(s);
        } else {
            UBUYTOL9 = Byte.MIN_VALUE;
        }
    }

    protected final void initUPROP5(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UPROP5 = false;
        }
    }

    protected final void initUPRTYP1(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            UPRTYP1 = false;
        }
    }

    protected final void initWAGEBEN1(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN1 = Byte.parseByte(s);
        } else {
            WAGEBEN1 = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN1_I(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN1_I = Byte.parseByte(s);
        } else {
            WAGEBEN1_I = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN2(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN2 = Byte.parseByte(s);
        } else {
            WAGEBEN2 = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN2_I(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN2_I = Byte.parseByte(s);
        } else {
            WAGEBEN2_I = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN3(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN3 = Byte.parseByte(s);
        } else {
            WAGEBEN3 = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN3_I(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN3_I = Byte.parseByte(s);
        } else {
            WAGEBEN3_I = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN4(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN4 = Byte.parseByte(s);
        } else {
            WAGEBEN4 = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN4_I(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN4_I = Byte.parseByte(s);
        } else {
            WAGEBEN4_I = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN5(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            WAGEBEN5 = false;
        }
    }

    protected final void initWAGEBEN5_I(String s) {
        if (!s.trim().isEmpty()) {
            WAGEBEN5_I = Byte.parseByte(s);
        } else {
            WAGEBEN5_I = Byte.MIN_VALUE;
        }
    }

    protected final void initWAGEBEN6(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            WAGEBEN6 = false;
        }
    }

    protected final void initWAGEBEN6_I(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            WAGEBEN6_I = false;
        }
    }

    protected final void initWAGEBEN_IFLAG(String s) {
        if (!s.trim().isEmpty()) {
            byte b = Byte.parseByte(s);
            WAGEBEN_IFLAG = false;
        }
    }

    protected final void initWPBTHA1(String s) {
        if (!s.trim().isEmpty()) {
            WPBTHA1 = Byte.parseByte(s);
        } else {
            WPBTHA1 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPBTHA2(String s) {
        if (!s.trim().isEmpty()) {
            WPBTHA2 = Byte.parseByte(s);
        } else {
            WPBTHA2 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPBTHP1(String s) {
        if (!s.trim().isEmpty()) {
            WPBTHP1 = Byte.parseByte(s);
        } else {
            WPBTHP1 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPBTHP2(String s) {
        if (!s.trim().isEmpty()) {
            WPBTHP2 = Byte.parseByte(s);
        } else {
            WPBTHP2 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPERA1(String s) {
        if (!s.trim().isEmpty()) {
            WPERA1 = Byte.parseByte(s);
        } else {
            WPERA1 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPERA2(String s) {
        if (!s.trim().isEmpty()) {
            WPERA2 = Byte.parseByte(s);
        } else {
            WPERA2 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPNRA1(String s) {
        if (!s.trim().isEmpty()) {
            WPNRA1 = Byte.parseByte(s);
        } else {
            WPNRA1 = Byte.MIN_VALUE;
        }
    }

    protected final void initWPNRA2(String s) {
        if (!s.trim().isEmpty()) {
            WPNRA2 = Byte.parseByte(s);
        } else {
            WPNRA2 = Byte.MIN_VALUE;
        }
    }

    protected final void initYEARW3(String s) {
        if (!s.trim().isEmpty()) {
            YEARW3 = Short.parseShort(s);
        } else {
            YEARW3 = Short.MIN_VALUE;
        }
    }

    protected final void init_NONPROXY_WGT(String s) {
        if (!s.trim().isEmpty()) {
            _NONPROXY_WGT = Double.parseDouble(s);
        } else {
            _NONPROXY_WGT = Double.NaN;
        }
    }

    public byte getADAMT1() {
        return ADAMT1;
    }

    public byte getADAMT2() {
        return ADAMT2;
    }

    public byte getADAMT3() {
        return ADAMT3;
    }

    public byte getADAVAIL1() {
        return ADAVAIL1;
    }

    public byte getADAVAIL2() {
        return ADAVAIL2;
    }

    public byte getADAVAIL3() {
        return ADAVAIL3;
    }

    public byte getADCONS1() {
        return ADCONS1;
    }

    public byte getADCONS2() {
        return ADCONS2;
    }

    public byte getADCONS3() {
        return ADCONS3;
    }

    public byte getADCOST1() {
        return ADCOST1;
    }

    public byte getADCOST2() {
        return ADCOST2;
    }

    public byte getADCOST3() {
        return ADCOST3;
    }

    public byte getADFUR1() {
        return ADFUR1;
    }

    public byte getADFUR2() {
        return ADFUR2;
    }

    public byte getADFUR3() {
        return ADFUR3;
    }

    public byte getADJOINT1() {
        return ADJOINT1;
    }

    public byte getADJOINT2() {
        return ADJOINT2;
    }

    public byte getADJOINT3() {
        return ADJOINT3;
    }

    public byte getADPAY1() {
        return ADPAY1;
    }

    public byte getADPAY2() {
        return ADPAY2;
    }

    public byte getADPAY3() {
        return ADPAY3;
    }

    public byte getADPROD1() {
        return ADPROD1;
    }

    public byte getADPROD2() {
        return ADPROD2;
    }

    public byte getADPROD3() {
        return ADPROD3;
    }

    public byte getADPURCH1() {
        return ADPURCH1;
    }

    public byte getADPURCH2() {
        return ADPURCH2;
    }

    public byte getADPURCH3() {
        return ADPURCH3;
    }

    public byte getADRECORD1() {
        return ADRECORD1;
    }

    public byte getADRECORD2() {
        return ADRECORD2;
    }

    public byte getADRECORD3() {
        return ADRECORD3;
    }

    public byte getADSAT1() {
        return ADSAT1;
    }

    public byte getADSAT2() {
        return ADSAT2;
    }

    public byte getADSAT3() {
        return ADSAT3;
    }

    public byte getADSATREFLECT1() {
        return ADSATREFLECT1;
    }

    public byte getADSATREFLECT2() {
        return ADSATREFLECT2;
    }

    public byte getADSATREFLECT3() {
        return ADSATREFLECT3;
    }

    public byte getADSAVINV1() {
        return ADSAVINV1;
    }

    public byte getADSAVINV10() {
        return ADSAVINV10;
    }

    public byte getADSAVINV11() {
        return ADSAVINV11;
    }

    public byte getADSAVINV12() {
        return ADSAVINV12;
    }

    public byte getADSAVINV13() {
        return ADSAVINV13;
    }

    public byte getADSAVINV14() {
        return ADSAVINV14;
    }

    public byte getADSAVINV15() {
        return ADSAVINV15;
    }

    public byte getADSAVINV19() {
        return ADSAVINV19;
    }

    public byte getADSAVINV2() {
        return ADSAVINV2;
    }

    public byte getADSAVINV20() {
        return ADSAVINV20;
    }

    public byte getADSAVINV21() {
        return ADSAVINV21;
    }

    public byte getADSAVINV3() {
        return ADSAVINV3;
    }

    public byte getADSAVINV4() {
        return ADSAVINV4;
    }

    public byte getADSAVINV5() {
        return ADSAVINV5;
    }

    public boolean getADSAVINV6() {
        return ADSAVINV6;
    }

    public boolean getADSAVINV7() {
        return ADSAVINV7;
    }

    public byte getADSAVINV8() {
        return ADSAVINV8;
    }

    public byte getADSAVINV9() {
        return ADSAVINV9;
    }

    public byte getADTYP1() {
        return ADTYP1;
    }

    public byte getADTYP2() {
        return ADTYP2;
    }

    public byte getADTYP3() {
        return ADTYP3;
    }

    public byte getADVICE() {
        return ADVICE;
    }

    public byte getADVNUMALL() {
        return ADVNUMALL;
    }

    public byte getADVREAS1() {
        return ADVREAS1;
    }

    public byte getADVREAS2() {
        return ADVREAS2;
    }

    public byte getADVREAS3() {
        return ADVREAS3;
    }

    public byte getADWHO01() {
        return ADWHO01;
    }

    public byte getADWHO02() {
        return ADWHO02;
    }

    public boolean getADWHO15() {
        return ADWHO15;
    }

    public byte getADWHO16() {
        return ADWHO16;
    }

    public byte getADWHO17() {
        return ADWHO17;
    }

    public byte getADWHO31() {
        return ADWHO31;
    }

    public boolean getADWHO32() {
        return ADWHO32;
    }

    public double getAGEASAF() {
        return AGEASAF;
    }

    public double getANNUITY1() {
        return ANNUITY1;
    }

    public double getANNUITY2() {
        return ANNUITY2;
    }

    public boolean getANYOTHERB_IFLAG() {
        return ANYOTHERB_IFLAG;
    }

    public byte getBENINTRO() {
        return BENINTRO;
    }

    public byte getCAJISA() {
        return CAJISA;
    }

    public short getCASEW4() {
        return CASEW4;
    }

    public byte getCATYPE1() {
        return CATYPE1;
    }

    public byte getCATYPE2() {
        return CATYPE2;
    }

    public byte getDBURDW3() {
        return DBURDW3;
    }

    public byte getDCARRCL01() {
        return DCARRCL01;
    }

    public byte getDCARRCL02() {
        return DCARRCL02;
    }

    public byte getDCARRCL03() {
        return DCARRCL03;
    }

    public boolean getDCARRCL04() {
        return DCARRCL04;
    }

    public byte getDCBE2YR1() {
        return DCBE2YR1;
    }

    public byte getDCBE2YR2() {
        return DCBE2YR2;
    }

    public byte getDCBE2YR3() {
        return DCBE2YR3;
    }

    public byte getDISBEN1() {
        return DISBEN1;
    }

    public byte getDISBEN1_I() {
        return DISBEN1_I;
    }

    public byte getDISBEN2() {
        return DISBEN2;
    }

    public byte getDISBEN2_I() {
        return DISBEN2_I;
    }

    public byte getDISBEN3() {
        return DISBEN3;
    }

    public byte getDISBEN3_I() {
        return DISBEN3_I;
    }

    public boolean getDISBEN_IFLAG() {
        return DISBEN_IFLAG;
    }

    public byte getDLBEH6() {
        return DLBEH6;
    }

    public byte getDLBEH6_I() {
        return DLBEH6_I;
    }

    public boolean getDLBEH6_IFLAG() {
        return DLBEH6_IFLAG;
    }

    public boolean getDLBEH7() {
        return DLBEH7;
    }

    public boolean getDLBEH7_I() {
        return DLBEH7_I;
    }

    public boolean getDLBEH7_IFLAG() {
        return DLBEH7_IFLAG;
    }

    public boolean getDLBEH8() {
        return DLBEH8;
    }

    public boolean getDLBEH8_I() {
        return DLBEH8_I;
    }

    public boolean getDLBEH8_IFLAG() {
        return DLBEH8_IFLAG;
    }

    public boolean getDLBEH9() {
        return DLBEH9;
    }

    public boolean getDLBEH9_I() {
        return DLBEH9_I;
    }

    public boolean getDLBEH9_IFLAG() {
        return DLBEH9_IFLAG;
    }

    public boolean getDLEST6() {
        return DLEST6;
    }

    public boolean getDLEST6_I() {
        return DLEST6_I;
    }

    public boolean getDLEST6_IFLAG() {
        return DLEST6_IFLAG;
    }

    public boolean getDLEST7() {
        return DLEST7;
    }

    public boolean getDLEST7_I() {
        return DLEST7_I;
    }

    public boolean getDLEST7_IFLAG() {
        return DLEST7_IFLAG;
    }

    public boolean getDLEST8() {
        return DLEST8;
    }

    public boolean getDLEST8_I() {
        return DLEST8_I;
    }

    public boolean getDLEST8_IFLAG() {
        return DLEST8_IFLAG;
    }

    public boolean getDLEST9() {
        return DLEST9;
    }

    public boolean getDLEST9_I() {
        return DLEST9_I;
    }

    public boolean getDLEST9_IFLAG() {
        return DLEST9_IFLAG;
    }

    public byte getDLINS6() {
        return DLINS6;
    }

    public byte getDLINS6_I() {
        return DLINS6_I;
    }

    public boolean getDLINS6_IFLAG() {
        return DLINS6_IFLAG;
    }

    public byte getDLINS7() {
        return DLINS7;
    }

    public byte getDLINS7_I() {
        return DLINS7_I;
    }

    public boolean getDLINS7_IFLAG() {
        return DLINS7_IFLAG;
    }

    public boolean getDLINS8() {
        return DLINS8;
    }

    public boolean getDLINS8_I() {
        return DLINS8_I;
    }

    public boolean getDLINS8_IFLAG() {
        return DLINS8_IFLAG;
    }

    public boolean getDLINS9() {
        return DLINS9;
    }

    public boolean getDLINS9_I() {
        return DLINS9_I;
    }

    public boolean getDLINS9_IFLAG() {
        return DLINS9_IFLAG;
    }

    public byte getDLINT6() {
        return DLINT6;
    }

    public byte getDLINT7() {
        return DLINT7;
    }

    public boolean getDLINT8() {
        return DLINT8;
    }

    public boolean getDLINT9() {
        return DLINT9;
    }

    public boolean getDLOFT6() {
        return DLOFT6;
    }

    public boolean getDLOFT6_I() {
        return DLOFT6_I;
    }

    public boolean getDLOFT6_IFLAG() {
        return DLOFT6_IFLAG;
    }

    public boolean getDLOFT7() {
        return DLOFT7;
    }

    public boolean getDLOFT7_I() {
        return DLOFT7_I;
    }

    public boolean getDLOFT7_IFLAG() {
        return DLOFT7_IFLAG;
    }

    public boolean getDLOFT8() {
        return DLOFT8;
    }

    public boolean getDLOFT8_I() {
        return DLOFT8_I;
    }

    public boolean getDLOFT8_IFLAG() {
        return DLOFT8_IFLAG;
    }

    public boolean getDLOFT9() {
        return DLOFT9;
    }

    public boolean getDLOFT9_I() {
        return DLOFT9_I;
    }

    public boolean getDLOFT9_IFLAG() {
        return DLOFT9_IFLAG;
    }

    public boolean getDLOWE6() {
        return DLOWE6;
    }

    public short getDLOWE6_I() {
        return DLOWE6_I;
    }

    public boolean getDLOWE6_IFLAG() {
        return DLOWE6_IFLAG;
    }

    public boolean getDLOWE7() {
        return DLOWE7;
    }

    public boolean getDLOWE7_I() {
        return DLOWE7_I;
    }

    public boolean getDLOWE7_IFLAG() {
        return DLOWE7_IFLAG;
    }

    public boolean getDLOWE8() {
        return DLOWE8;
    }

    public boolean getDLOWE8_I() {
        return DLOWE8_I;
    }

    public boolean getDLOWE8_IFLAG() {
        return DLOWE8_IFLAG;
    }

    public boolean getDLOWE9() {
        return DLOWE9;
    }

    public boolean getDLOWE9_I() {
        return DLOWE9_I;
    }

    public boolean getDLOWE9_IFLAG() {
        return DLOWE9_IFLAG;
    }

    public boolean getDLSEC6() {
        return DLSEC6;
    }

    public boolean getDLSEC7() {
        return DLSEC7;
    }

    public boolean getDLSEC8() {
        return DLSEC8;
    }

    public boolean getDLSEC9() {
        return DLSEC9;
    }

    public byte getDLTYPE6() {
        return DLTYPE6;
    }

    public byte getDLTYPE6_I() {
        return DLTYPE6_I;
    }

    public boolean getDLTYPE6_IFLAG() {
        return DLTYPE6_IFLAG;
    }

    public byte getDLTYPE7() {
        return DLTYPE7;
    }

    public byte getDLTYPE7_I() {
        return DLTYPE7_I;
    }

    public boolean getDLTYPE7_IFLAG() {
        return DLTYPE7_IFLAG;
    }

    public byte getDLTYPE8() {
        return DLTYPE8;
    }

    public byte getDLTYPE8_I() {
        return DLTYPE8_I;
    }

    public boolean getDLTYPE8_IFLAG() {
        return DLTYPE8_IFLAG;
    }

    public byte getDLTYPE9() {
        return DLTYPE9;
    }

    public byte getDLTYPE9_I() {
        return DLTYPE9_I;
    }

    public boolean getDLTYPE9_IFLAG() {
        return DLTYPE9_IFLAG;
    }

    public boolean getDLWEST6() {
        return DLWEST6;
    }

    public boolean getDLWEST7() {
        return DLWEST7;
    }

    public boolean getDLWEST8() {
        return DLWEST8;
    }

    public boolean getDLWEST9() {
        return DLWEST9;
    }

    public byte getDLWHNM6() {
        return DLWHNM6;
    }

    public byte getDLWHNM6_I() {
        return DLWHNM6_I;
    }

    public boolean getDLWHNM6_IFLAG() {
        return DLWHNM6_IFLAG;
    }

    public byte getDLWHNM7() {
        return DLWHNM7;
    }

    public byte getDLWHNM7_I() {
        return DLWHNM7_I;
    }

    public boolean getDLWHNM7_IFLAG() {
        return DLWHNM7_IFLAG;
    }

    public byte getDLWHNM8() {
        return DLWHNM8;
    }

    public byte getDLWHNM8_I() {
        return DLWHNM8_I;
    }

    public boolean getDLWHNM8_IFLAG() {
        return DLWHNM8_IFLAG;
    }

    public byte getDLWHNM9() {
        return DLWHNM9;
    }

    public byte getDLWHNM9_I() {
        return DLWHNM9_I;
    }

    public boolean getDLWHNM9_IFLAG() {
        return DLWHNM9_IFLAG;
    }

    public short getDLWHNY6() {
        return DLWHNY6;
    }

    public short getDLWHNY6_I() {
        return DLWHNY6_I;
    }

    public boolean getDLWHNY6_IFLAG() {
        return DLWHNY6_IFLAG;
    }

    public short getDLWHNY7() {
        return DLWHNY7;
    }

    public short getDLWHNY7_I() {
        return DLWHNY7_I;
    }

    public boolean getDLWHNY7_IFLAG() {
        return DLWHNY7_IFLAG;
    }

    public short getDLWHNY8() {
        return DLWHNY8;
    }

    public short getDLWHNY8_I() {
        return DLWHNY8_I;
    }

    public boolean getDLWHNY8_IFLAG() {
        return DLWHNY8_IFLAG;
    }

    public short getDLWHNY9() {
        return DLWHNY9;
    }

    public short getDLWHNY9_I() {
        return DLWHNY9_I;
    }

    public boolean getDLWHNY9_IFLAG() {
        return DLWHNY9_IFLAG;
    }

    public boolean getDSLAMT6() {
        return DSLAMT6;
    }

    public boolean getDSLAMT6_I() {
        return DSLAMT6_I;
    }

    public boolean getDSLAMT7() {
        return DSLAMT7;
    }

    public boolean getDSLAMT7_I() {
        return DSLAMT7_I;
    }

    public boolean getDSLAMT8() {
        return DSLAMT8;
    }

    public boolean getDSLAMT8_I() {
        return DSLAMT8_I;
    }

    public boolean getDSLAMT9() {
        return DSLAMT9;
    }

    public boolean getDSLAMT9_I() {
        return DSLAMT9_I;
    }

    public boolean getDSLEST6() {
        return DSLEST6;
    }

    public boolean getDSLEST7() {
        return DSLEST7;
    }

    public boolean getDSLEST8() {
        return DSLEST8;
    }

    public boolean getDSLEST9() {
        return DSLEST9;
    }

    public boolean getDSLPAY6() {
        return DSLPAY6;
    }

    public boolean getDSLPAY7() {
        return DSLPAY7;
    }

    public boolean getDSLPAY8() {
        return DSLPAY8;
    }

    public boolean getDSLPAY9() {
        return DSLPAY9;
    }

    public byte getDSNUM1() {
        return DSNUM1;
    }

    public int getDVBENEFITANNUAL_I() {
        return DVBENEFITANNUAL_I;
    }

    public int getDVCOINV1() {
        return DVCOINV1;
    }

    public short getDVDLOWE6() {
        return DVDLOWE6;
    }

    public boolean getDVDLOWE7() {
        return DVDLOWE7;
    }

    public boolean getDVDLOWE8() {
        return DVDLOWE8;
    }

    public boolean getDVDLOWE9() {
        return DVDLOWE9;
    }

    public byte getDVECACT() {
        return DVECACT;
    }

    public boolean getDVHASDBRWEALTH() {
        return DVHASDBRWEALTH;
    }

    public byte getDVMRDF12() {
        return DVMRDF12;
    }

    public double getDVSHODVAL1() {
        return DVSHODVAL1;
    }

    public int getFNSVAL() {
        return FNSVAL;
    }

    public byte getHRPDVECACT() {
        return HRPDVECACT;
    }

    public byte getIWHO1() {
        return IWHO1;
    }

    public byte getKIDBEN1() {
        return KIDBEN1;
    }

    public byte getKIDBEN1_I() {
        return KIDBEN1_I;
    }

    public byte getKIDBEN2() {
        return KIDBEN2;
    }

    public byte getKIDBEN2_I() {
        return KIDBEN2_I;
    }

    public boolean getKIDBEN_IFLAG() {
        return KIDBEN_IFLAG;
    }

    public byte getKNOWWPR() {
        return KNOWWPR;
    }

    public byte getLIVWTH12() {
        return LIVWTH12;
    }

    public byte getLNLFT6() {
        return LNLFT6;
    }

    public byte getLNLFT7() {
        return LNLFT7;
    }

    public byte getLNLFT8() {
        return LNLFT8;
    }

    public byte getLNLFT9() {
        return LNLFT9;
    }

    public byte getLNMN6() {
        return LNMN6;
    }

    public byte getLNMN7() {
        return LNMN7;
    }

    public byte getLNMN8() {
        return LNMN8;
    }

    public byte getLNMN9() {
        return LNMN9;
    }

    public short getLNOS6() {
        return LNOS6;
    }

    public short getLNOS7() {
        return LNOS7;
    }

    public byte getLNOS8() {
        return LNOS8;
    }

    public byte getLNOS9() {
        return LNOS9;
    }

    public byte getLNYR6() {
        return LNYR6;
    }

    public byte getLNYR7() {
        return LNYR7;
    }

    public byte getLNYR8() {
        return LNYR8;
    }

    public byte getLNYR9() {
        return LNYR9;
    }

    public byte getMONTHW3() {
        return MONTHW3;
    }

    public boolean getNWFLNVAL6() {
        return NWFLNVAL6;
    }

    public boolean getNWFLNVAL7() {
        return NWFLNVAL7;
    }

    public boolean getNWFLNVAL8() {
        return NWFLNVAL8;
    }

    public boolean getNWFLNVAL9() {
        return NWFLNVAL9;
    }

    public boolean getNWILNVAL6() {
        return NWILNVAL6;
    }

    public boolean getNWILNVAL7() {
        return NWILNVAL7;
    }

    public boolean getNWILNVAL8() {
        return NWILNVAL8;
    }

    public boolean getNWILNVAL9() {
        return NWILNVAL9;
    }

    public boolean getOSLC6() {
        return OSLC6;
    }

    public boolean getOSLC7() {
        return OSLC7;
    }

    public boolean getOSLC8() {
        return OSLC8;
    }

    public boolean getOSLC9() {
        return OSLC9;
    }

    public byte getOTHERBEN1() {
        return OTHERBEN1;
    }

    public byte getOTHERBEN1_I() {
        return OTHERBEN1_I;
    }

    public byte getOTHERBEN2() {
        return OTHERBEN2;
    }

    public byte getOTHERBEN2_I() {
        return OTHERBEN2_I;
    }

    public boolean getOTHERBEN3() {
        return OTHERBEN3;
    }

    public byte getOTHERBEN3_I() {
        return OTHERBEN3_I;
    }

    public boolean getOTHERBEN4() {
        return OTHERBEN4;
    }

    public boolean getOTHERBEN4_I() {
        return OTHERBEN4_I;
    }

    public boolean getOTHERBEN_IFLAG() {
        return OTHERBEN_IFLAG;
    }

    public byte getOWHYSAV1() {
        return OWHYSAV1;
    }

    public byte getOWHYSAV2() {
        return OWHYSAV2;
    }

    public byte getOWHYSAV3() {
        return OWHYSAV3;
    }

    public byte getOWHYSAV4() {
        return OWHYSAV4;
    }

    public byte getOWHYSAV5() {
        return OWHYSAV5;
    }

    public byte getOWHYSAV6() {
        return OWHYSAV6;
    }

    public byte getOWHYSAV7() {
        return OWHYSAV7;
    }

    public byte getOWHYSAV8() {
        return OWHYSAV8;
    }

    public byte getOWHYSAV9() {
        return OWHYSAV9;
    }

    public byte getPENBEN1() {
        return PENBEN1;
    }

    public byte getPENBEN1_I() {
        return PENBEN1_I;
    }

    public byte getPENBEN2() {
        return PENBEN2;
    }

    public byte getPENBEN2_I() {
        return PENBEN2_I;
    }

    public byte getPENBEN3() {
        return PENBEN3;
    }

    public byte getPENBEN3_I() {
        return PENBEN3_I;
    }

    public boolean getPENBEN_IFLAG() {
        return PENBEN_IFLAG;
    }

    public byte getPERSONW4() {
        return PERSONW4;
    }

    public byte getPFDRAW3() {
        return PFDRAW3;
    }

    public byte getPMORTC1() {
        return PMORTC1;
    }

    public int getPOCNAMT1() {
        return POCNAMT1;
    }

    public short getPOCNAMT2() {
        return POCNAMT2;
    }

    public byte getPOPYCH1() {
        return POPYCH1;
    }

    public byte getPORAGE1T() {
        return PORAGE1T;
    }

    public byte getPORAGE2T() {
        return PORAGE2T;
    }

    public byte getPPCNHOW3() {
        return PPCNHOW3;
    }

    public byte getPPCONCH1() {
        return PPCONCH1;
    }

    public byte getPPDRINCB1() {
        return PPDRINCB1;
    }

    public int getPPRGAM1() {
        return PPRGAM1;
    }

    public double getSIC2007() {
        return SIC2007;
    }

    public byte getSOCFUND1() {
        return SOCFUND1;
    }

    public byte getSOCFUND1_I() {
        return SOCFUND1_I;
    }

    public byte getSOCFUND2() {
        return SOCFUND2;
    }

    public byte getSOCFUND2_I() {
        return SOCFUND2_I;
    }

    public boolean getSOCFUND3() {
        return SOCFUND3;
    }

    public boolean getSOCFUND3_I() {
        return SOCFUND3_I;
    }

    public boolean getSOCFUND4() {
        return SOCFUND4;
    }

    public boolean getSOCFUND4_I() {
        return SOCFUND4_I;
    }

    public boolean getSOCFUND_IFLAG() {
        return SOCFUND_IFLAG;
    }

    public int getTADDVL1() {
        return TADDVL1;
    }

    public boolean getUBUYTOL1() {
        return UBUYTOL1;
    }

    public byte getUBUYTOL10() {
        return UBUYTOL10;
    }

    public byte getUBUYTOL11() {
        return UBUYTOL11;
    }

    public byte getUBUYTOL12() {
        return UBUYTOL12;
    }

    public boolean getUBUYTOL2() {
        return UBUYTOL2;
    }

    public boolean getUBUYTOL3() {
        return UBUYTOL3;
    }

    public boolean getUBUYTOL4() {
        return UBUYTOL4;
    }

    public boolean getUBUYTOL5() {
        return UBUYTOL5;
    }

    public boolean getUBUYTOL6() {
        return UBUYTOL6;
    }

    public byte getUBUYTOL7() {
        return UBUYTOL7;
    }

    public byte getUBUYTOL8() {
        return UBUYTOL8;
    }

    public byte getUBUYTOL9() {
        return UBUYTOL9;
    }

    public boolean getUPROP5() {
        return UPROP5;
    }

    public boolean getUPRTYP1() {
        return UPRTYP1;
    }

    public byte getWAGEBEN1() {
        return WAGEBEN1;
    }

    public byte getWAGEBEN1_I() {
        return WAGEBEN1_I;
    }

    public byte getWAGEBEN2() {
        return WAGEBEN2;
    }

    public byte getWAGEBEN2_I() {
        return WAGEBEN2_I;
    }

    public byte getWAGEBEN3() {
        return WAGEBEN3;
    }

    public byte getWAGEBEN3_I() {
        return WAGEBEN3_I;
    }

    public byte getWAGEBEN4() {
        return WAGEBEN4;
    }

    public byte getWAGEBEN4_I() {
        return WAGEBEN4_I;
    }

    public boolean getWAGEBEN5() {
        return WAGEBEN5;
    }

    public byte getWAGEBEN5_I() {
        return WAGEBEN5_I;
    }

    public boolean getWAGEBEN6() {
        return WAGEBEN6;
    }

    public boolean getWAGEBEN6_I() {
        return WAGEBEN6_I;
    }

    public boolean getWAGEBEN_IFLAG() {
        return WAGEBEN_IFLAG;
    }

    public byte getWPBTHA1() {
        return WPBTHA1;
    }

    public byte getWPBTHA2() {
        return WPBTHA2;
    }

    public byte getWPBTHP1() {
        return WPBTHP1;
    }

    public byte getWPBTHP2() {
        return WPBTHP2;
    }

    public byte getWPERA1() {
        return WPERA1;
    }

    public byte getWPERA2() {
        return WPERA2;
    }

    public byte getWPNRA1() {
        return WPNRA1;
    }

    public byte getWPNRA2() {
        return WPNRA2;
    }

    public short getYEARW3() {
        return YEARW3;
    }

    public double get_NONPROXY_WGT() {
        return _NONPROXY_WGT;
    }

}
