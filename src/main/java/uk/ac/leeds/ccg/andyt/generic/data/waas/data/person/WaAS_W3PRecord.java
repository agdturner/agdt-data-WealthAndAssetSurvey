/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.waas.process.WaAS_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.waas.data.person;
public class WaAS_W3PRecord extends WaAS_W3W4W5PRecord {
protected double ACCFRAC;
protected double AGEASAF1;
protected double AGMSAF2T;
protected double AGMSAFT;
protected double AGMSAFT1;
protected String BACCEND1;
protected String BACCEND2;
protected String BACCEND3;
protected boolean BCARRY2;
protected byte BENTYPE01;
protected byte BENTYPE02;
protected byte BENTYPE03;
protected byte BENTYPE04;
protected byte BENTYPE05;
protected byte BENTYPE06;
protected boolean BENTYPE07;
protected boolean BENTYPE08;
protected boolean BENTYPE09;
protected boolean BENTYPE10;
protected boolean BENTYPE11;
protected boolean BENTYPE12;
protected byte BFUND11;
protected boolean BFUND12;
protected boolean BFUND13;
protected boolean BFUND14;
protected boolean BFUND15;
protected boolean BFUND16;
protected byte BFUND18;
protected boolean BFUND19;
protected boolean BFUND20;
protected boolean BFUND21;
protected boolean BFUND22;
protected boolean BFUND23;
protected boolean BFUND24;
protected byte BFUND3;
protected boolean BFUND4;
protected boolean BFUND5;
protected boolean BFUND6;
protected boolean BFUND7;
protected boolean BFUND8;
protected boolean BSEPPD09;
protected boolean BSEPPD10;
protected boolean BSEPPD11;
protected boolean BSEPPD12;
protected boolean BSEPPD13;
protected boolean BSEPPD14;
protected boolean BSEPPD15;
protected boolean BSEPPD16;
protected boolean BSEPPD17;
protected boolean BSEPPD18;
protected boolean BSEPPD19;
protected boolean BSEPPD20;
protected byte CAEXTRA;
protected byte CAOLDER;
protected byte CAOTHER1;
protected boolean CAOTHER2;
protected boolean CAOTHER3;
protected boolean CAOTHER4;
protected boolean CAOTHER5;
protected byte CATYPE;
protected byte CCAC4;
protected byte CCAC5;
protected byte COMBPD;
protected byte COMMIT1;
protected byte COMMIT2;
protected byte COMMIT3;
protected byte COMMIT4;
protected boolean COMMIT5;
protected boolean COURSE20;
protected byte CREDTYPE1;
protected byte CREDTYPE2;
protected byte CTCPD;
protected byte CTOGSEP;
protected boolean CTPAY;
protected boolean CTPAYS;
protected boolean CTPAYW;
protected byte DBURDH;
protected byte DBURDW4;
protected byte DBURDW5;
protected byte DBURDW6;
protected boolean DBURDW7;
protected byte DBURD___W3;
protected byte DC12BEH4;
protected byte DC12BEH5;
protected short DC12OWE4;
protected short DC12OWE5;
protected int DCAMC4;
protected short DCAMC5;
protected short DCAMD4;
protected short DCAMD5;
protected int DCAMOS4;
protected short DCAMOS5;
protected short DCAMP1_I;
protected boolean DCAMP1_IFLAG;
protected short DCAMP2_I;
protected byte DCAMP2_IFLAG;
protected short DCAMP3_I;
protected byte DCAMP3_IFLAG;
protected short DCAMP4;
protected short DCAMP4_I;
protected byte DCAMP4_IFLAG;
protected short DCAMP5;
protected short DCAMP5_I;
protected byte DCAMP5_IFLAG;
protected byte DCANU_I;
protected byte DCANU_IFLAG;
protected byte DCANY_I;
protected byte DCANY_IFLAG;
protected byte DCCOS1_I;
protected boolean DCCOS1_IFLAG;
protected byte DCCOS2_I;
protected byte DCCOS2_IFLAG;
protected byte DCCOS3_I;
protected byte DCCOS3_IFLAG;
protected byte DCCOS4;
protected byte DCCOS4_I;
protected byte DCCOS4_IFLAG;
protected byte DCCOS5;
protected byte DCCOS5_I;
protected byte DCCOS5_IFLAG;
protected byte DCCSP1_I;
protected boolean DCCSP1_IFLAG;
protected byte DCCSP2_I;
protected byte DCCSP2_IFLAG;
protected byte DCCSP3_I;
protected byte DCCSP3_IFLAG;
protected byte DCCSP4;
protected byte DCCSP4_I;
protected boolean DCCSP4_IFLAG;
protected byte DCCSP5;
protected byte DCCSP5_I;
protected boolean DCCSP5_IFLAG;
protected byte DCESB4;
protected byte DCESB5;
protected byte DCINZ4;
protected byte DCINZ5;
protected byte DCNAM1_I;
protected boolean DCNAM1_IFLAG;
protected byte DCNAM2_I;
protected byte DCNAM2_IFLAG;
protected byte DCNAM3_I;
protected byte DCNAM3_IFLAG;
protected byte DCNAM4;
protected byte DCNAM4_I;
protected byte DCNAM4_IFLAG;
protected byte DCNAM5;
protected byte DCNAM5_I;
protected byte DCNAM5_IFLAG;
protected byte DCNUM1_I;
protected boolean DCNUM1_IFLAG;
protected byte DCNUM2_I;
protected boolean DCNUM2_IFLAG;
protected boolean DCONM10;
protected byte DCONM7;
protected boolean DCONM8;
protected byte DCONM9;
protected boolean DCOSHV4_I;
protected boolean DCOSHV4_IFLAG;
protected boolean DCOSHV5_I;
protected boolean DCOSHV5_IFLAG;
protected boolean DCPER4;
protected boolean DCPER5;
protected byte DCREC1_I;
protected boolean DCREC1_IFLAG;
protected byte DCREC2_I;
protected byte DCREC2_IFLAG;
protected byte DCREC3_I;
protected byte DCREC3_IFLAG;
protected byte DCREC4;
protected byte DCREC4_I;
protected byte DCREC4_IFLAG;
protected byte DCREC5;
protected byte DCREC5_I;
protected byte DCREC5_IFLAG;
protected boolean DCRSP1_I;
protected boolean DCRSP1_IFLAG;
protected byte DCRSP2_I;
protected byte DCRSP2_IFLAG;
protected byte DCRSP3_I;
protected byte DCRSP3_IFLAG;
protected boolean DCRSP4;
protected byte DCRSP4_I;
protected byte DCRSP4_IFLAG;
protected boolean DCRSP5;
protected byte DCRSP5_I;
protected boolean DCRSP5_IFLAG;
protected boolean DHBANY08_I;
protected boolean DHBANY08_IFLAG;
protected boolean DHBANY09_I;
protected boolean DHBANY09_IFLAG;
protected boolean DHBANY10_I;
protected boolean DHBANY10_IFLAG;
protected boolean DHBANY11_I;
protected boolean DHBANY11_IFLAG;
protected boolean DHPANY4;
protected boolean DHPANY5;
protected boolean DHPANY6;
protected boolean DHPANY7;
protected byte DHPBEH3;
protected byte DHPBEH3_I;
protected byte DHPBEH3_IFLAG;
protected byte DHPBEH4;
protected byte DHPBEH4_I;
protected boolean DHPBEH4_IFLAG;
protected byte DHPBEH5;
protected byte DHPBEH5_I;
protected boolean DHPBEH5_IFLAG;
protected byte DHPEST3;
protected byte DHPEST4;
protected boolean DHPEST5;
protected short DHPINS3;
protected short DHPINS3_I;
protected byte DHPINS3_IFLAG;
protected short DHPINS4;
protected double DHPINS4_I;
protected byte DHPINS4_IFLAG;
protected short DHPINS5;
protected short DHPINS5_I;
protected byte DHPINS5_IFLAG;
protected byte DHPINT3;
protected byte DHPINT4;
protected byte DHPINT5;
protected byte DHPOFT3;
protected byte DHPOFT3_I;
protected byte DHPOFT3_IFLAG;
protected byte DHPOFT4;
protected byte DHPOFT4_I;
protected boolean DHPOFT4_IFLAG;
protected byte DHPOFT5;
protected byte DHPOFT5_I;
protected boolean DHPOFT5_IFLAG;
protected short DHPOWE3;
protected short DHPOWE3_I;
protected byte DHPOWE3_IFLAG;
protected short DHPOWE4;
protected short DHPOWE4_I;
protected byte DHPOWE4_IFLAG;
protected short DHPOWE5;
protected short DHPOWE5_I;
protected boolean DHPOWE5_IFLAG;
protected byte DHPWEST3;
protected byte DHPWEST4;
protected byte DHPWEST5;
protected byte DHPWHNM3;
protected byte DHPWHNM3_I;
protected byte DHPWHNM3_IFLAG;
protected byte DHPWHNM4;
protected byte DHPWHNM4_I;
protected byte DHPWHNM4_IFLAG;
protected byte DHPWHNM5;
protected byte DHPWHNM5_I;
protected byte DHPWHNM5_IFLAG;
protected short DHPWHNY3;
protected short DHPWHNY3_I;
protected byte DHPWHNY3_IFLAG;
protected short DHPWHNY4;
protected short DHPWHNY4_I;
protected byte DHPWHNY4_IFLAG;
protected short DHPWHNY5;
protected short DHPWHNY5_I;
protected byte DHPWHNY5_IFLAG;
protected byte DLWHY11;
protected boolean DLWHY12;
protected boolean DLWHY13;
protected boolean DLWHY14;
protected byte DLWHY17;
protected boolean DLWHY18;
protected boolean DLWHY19;
protected boolean DLWHY20;
protected boolean DLWHY21;
protected boolean DLWHY24;
protected boolean DLWHY25;
protected boolean DLWHY26;
protected boolean DLWHY27;
protected boolean DLWHY28;
protected byte DLWHY29;
protected boolean DLWHY30;
protected boolean DLWHY31;
protected boolean DLWHY32;
protected boolean DLWHY33;
protected boolean DLWHY34;
protected boolean DLWHY35;
protected byte DMOBEH3;
protected byte DMOBEH3_I;
protected byte DMOBEH3_IFLAG;
protected byte DMOBEH4;
protected byte DMOBEH4_I;
protected boolean DMOBEH4_IFLAG;
protected byte DMOBEH5;
protected byte DMOBEH5_I;
protected boolean DMOBEH5_IFLAG;
protected byte DMOEST3;
protected byte DMOEST4;
protected byte DMOEST5;
protected short DMOINS3;
protected byte DMOINS3_I;
protected boolean DMOINS3_IFLAG;
protected short DMOINS4;
protected byte DMOINS4_I;
protected byte DMOINS4_IFLAG;
protected byte DMOINS5;
protected byte DMOINS5_I;
protected boolean DMOINS5_IFLAG;
protected byte DMOINT3;
protected byte DMOINT4;
protected byte DMOINT5;
protected byte DMOOFT3;
protected byte DMOOFT3_I;
protected byte DMOOFT3_IFLAG;
protected byte DMOOFT4;
protected byte DMOOFT4_I;
protected boolean DMOOFT4_IFLAG;
protected byte DMOOFT5;
protected boolean DMOOFT5_I;
protected boolean DMOOFT5_IFLAG;
protected short DMOOWE3;
protected short DMOOWE3_I;
protected byte DMOOWE3_IFLAG;
protected short DMOOWE4;
protected short DMOOWE4_I;
protected boolean DMOOWE4_IFLAG;
protected short DMOOWE5;
protected short DMOOWE5_I;
protected boolean DMOOWE5_IFLAG;
protected byte DMOWEST3;
protected byte DMOWEST4;
protected byte DMOWEST5;
protected byte DMOWHNM3;
protected byte DMOWHNM3_I;
protected byte DMOWHNM3_IFLAG;
protected byte DMOWHNM4;
protected byte DMOWHNM4_I;
protected boolean DMOWHNM4_IFLAG;
protected byte DMOWHNM5;
protected byte DMOWHNM5_I;
protected boolean DMOWHNM5_IFLAG;
protected short DMOWHNY3;
protected short DMOWHNY3_I;
protected byte DMOWHNY3_IFLAG;
protected short DMOWHNY4;
protected short DMOWHNY4_I;
protected boolean DMOWHNY4_IFLAG;
protected short DMOWHNY5;
protected short DMOWHNY5_I;
protected boolean DMOWHNY5_IFLAG;
protected byte DS12BEH4;
protected byte DS12BEH5;
protected boolean DS12OWE4;
protected boolean DS12OWE5;
protected short DSAMC1_I;
protected boolean DSAMC1_IFLAG;
protected short DSAMC2_I;
protected byte DSAMC2_IFLAG;
protected short DSAMC3_I;
protected boolean DSAMC3_IFLAG;
protected short DSAMC4;
protected short DSAMC4_I;
protected byte DSAMC4_IFLAG;
protected short DSAMC5;
protected short DSAMC5_I;
protected boolean DSAMC5_IFLAG;
protected short DSAMD1_I;
protected boolean DSAMD1_IFLAG;
protected short DSAMD2_I;
protected byte DSAMD2_IFLAG;
protected short DSAMD3_I;
protected boolean DSAMD3_IFLAG;
protected short DSAMD4;
protected short DSAMD4_I;
protected boolean DSAMD4_IFLAG;
protected byte DSAMD5;
protected short DSAMD5_I;
protected boolean DSAMD5_IFLAG;
protected short DSAMOS4;
protected short DSAMOS5;
protected short DSAMP1_I;
protected boolean DSAMP1_IFLAG;
protected short DSAMP2_I;
protected byte DSAMP2_IFLAG;
protected short DSAMP3_I;
protected boolean DSAMP3_IFLAG;
protected short DSAMP4;
protected short DSAMP4_I;
protected byte DSAMP4_IFLAG;
protected short DSAMP5;
protected short DSAMP5_I;
protected boolean DSAMP5_IFLAG;
protected byte DSANU1_I;
protected byte DSANU1_IFLAG;
protected boolean DSANU2_I;
protected boolean DSANU2_IFLAG;
protected byte DSANY1_I;
protected byte DSANY1_IFLAG;
protected boolean DSANY2_I;
protected boolean DSANY2_IFLAG;
protected byte DSCOS1_I;
protected boolean DSCOS1_IFLAG;
protected byte DSCOS2_I;
protected byte DSCOS2_IFLAG;
protected byte DSCOS3_I;
protected byte DSCOS3_IFLAG;
protected byte DSCOS4;
protected byte DSCOS4_I;
protected byte DSCOS4_IFLAG;
protected byte DSCOS5;
protected byte DSCOS5_I;
protected byte DSCOS5_IFLAG;
protected byte DSCSP1_I;
protected boolean DSCSP1_IFLAG;
protected byte DSCSP2_I;
protected boolean DSCSP2_IFLAG;
protected byte DSCSP3_I;
protected boolean DSCSP3_IFLAG;
protected byte DSCSP4;
protected boolean DSCSP4_I;
protected boolean DSCSP4_IFLAG;
protected byte DSCSP5;
protected byte DSCSP5_I;
protected boolean DSCSP5_IFLAG;
protected byte DSESB4;
protected boolean DSESB5;
protected boolean DSLEST5_IFLAG;
protected byte DSNAM1_I;
protected boolean DSNAM1_IFLAG;
protected byte DSNAM2_I;
protected byte DSNAM2_IFLAG;
protected byte DSNAM3_I;
protected byte DSNAM3_IFLAG;
protected byte DSNAM4;
protected boolean DSNAM4_I;
protected byte DSNAM4_IFLAG;
protected byte DSNAM5;
protected boolean DSNAM5_I;
protected boolean DSNAM5_IFLAG;
protected byte DSNUM;
protected byte DSNUM2_I;
protected boolean DSNUM2_IFLAG;
protected byte DSNUM_I;
protected byte DSNUM_IFLAG;
protected boolean DSONM10;
protected boolean DSONM7;
protected boolean DSONM8;
protected boolean DSONM9;
protected boolean DSPER4;
protected boolean DSPER5;
protected boolean DSREC4;
protected boolean DSREC5;
protected boolean DSRSP1;
protected boolean DSRSP1_I;
protected boolean DSRSP1_IFLAG;
protected byte DSRSP2;
protected boolean DSRSP2_I;
protected byte DSRSP2_IFLAG;
protected boolean DSRSP3;
protected boolean DSRSP3_I;
protected boolean DSRSP3_IFLAG;
protected boolean DSRSP4;
protected boolean DSRSP4_I;
protected boolean DSRSP4_IFLAG;
protected boolean DSRSP5;
protected boolean DSRSP5_I;
protected boolean DSRSP5_IFLAG;
protected int DTLOWE1;
protected int DTLOWE1_I;
protected boolean DTLOWE1_IFLAG;
protected short DTLOWE2;
protected short DTLOWE2_I;
protected boolean DTLOWE2_IFLAG;
protected short DTLOWE3;
protected short DTLOWE3_I;
protected boolean DTLOWE3_IFLAG;
protected boolean DTLOWE4_I;
protected boolean DTLOWE4_IFLAG;
protected boolean DTLOWE5_I;
protected boolean DTLOWE5_IFLAG;
protected byte DTLOWEB1;
protected byte DTLOWEB1_I;
protected boolean DTLOWEB1_IFLAG;
protected byte DTLOWEB2;
protected byte DTLOWEB2_I;
protected boolean DTLOWEB2_IFLAG;
protected boolean DTLOWEB3;
protected byte DTLOWEB3_I;
protected boolean DTLOWEB3_IFLAG;
protected boolean DTLOWEB4_I;
protected boolean DTLOWEB4_IFLAG;
protected boolean DTLOWEB5_I;
protected boolean DTLOWEB5_IFLAG;
protected byte DTLTYPE1;
protected byte DTLTYPE1_I;
protected boolean DTLTYPE1_IFLAG;
protected byte DTLTYPE2;
protected byte DTLTYPE2_I;
protected boolean DTLTYPE2_IFLAG;
protected byte DTLTYPE3;
protected byte DTLTYPE3_I;
protected boolean DTLTYPE3_IFLAG;
protected boolean DTLTYPE4_I;
protected boolean DTLTYPE4_IFLAG;
protected boolean DTLTYPE5_I;
protected boolean DTLTYPE5_IFLAG;
protected short DTTOWE1;
protected short DTTOWE2;
protected boolean DTTOWE3;
protected byte DTTOWEB1;
protected boolean DTTOWEB10;
protected boolean DTTOWEB11;
protected boolean DTTOWEB12;
protected boolean DTTOWEB13;
protected boolean DTTOWEB14;
protected boolean DTTOWEB15;
protected boolean DTTOWEB2;
protected boolean DTTOWEB3;
protected boolean DTTOWEB4;
protected boolean DTTOWEB5;
protected boolean DTTOWEB6;
protected boolean DTTOWEB7;
protected boolean DTTOWEB8;
protected boolean DTTOWEB9;
protected byte DVAGE18;
protected byte DVAGEW3BAND;
protected byte DVBENU1;
protected int DVCOINV;
protected short DVCTCANNUAL;
protected short DVDHPOWE3;
protected short DVDHPOWE4;
protected short DVDHPOWE5;
protected short DVDMOOWE3;
protected short DVDMOOWE4;
protected short DVDMOOWE5;
protected int DVGRSPAY_I;
protected boolean DVGRSPAY_IFLAG;
protected boolean DVHASBOND;
protected byte DVHASCC;
protected boolean DVHASDBR_ORIG;
protected boolean DVHASEMPSH;
protected boolean DVHASGILT;
protected boolean DVHASISA;
protected boolean DVHASLINS;
protected boolean DVHASNHP;
protected boolean DVHASNOFA;
protected boolean DVHASNSP;
protected boolean DVHASOINV;
protected boolean DVHASOTHSH;
protected byte DVHASSC;
protected boolean DVHASUTRUST;
protected int DVNETPAY_I;
protected boolean DVNETPAY_IFLAG;
protected short DVNWHP_SUM;
protected short DVOIGGTANNUAL;
protected int DVOIGOEANNUAL_I;
protected int DVOIGOSANNUAL_I;
protected int DVOIGPPANNUAL_I;
protected short DVOIGRRANNUAL;
protected byte DVPUBLPRIV;
protected int DVRENTAMTANNUAL;
protected byte DVRENTBNDANNUAL_I;
protected boolean DVRENTBNDANNUAL_IFLAG;
protected byte DVSAME_I;
protected boolean DVSAME_IFLAG;
protected byte DVSEGRSPAYBAND_I;
protected boolean DVSEGRSPAYBAND_IFLAG;
protected byte DVSENETPAYBAND_I;
protected boolean DVSENETPAYBAND_IFLAG;
protected boolean DVSEPANNUAL09;
protected boolean DVSEPANNUAL10;
protected boolean DVSEPANNUAL11;
protected boolean DVSEPANNUAL12;
protected boolean DVSEPANNUAL13;
protected boolean DVSEPANNUAL14;
protected boolean DVSEPANNUAL15;
protected boolean DVSEPANNUAL16;
protected boolean DVSEPANNUAL17;
protected boolean DVSEPANNUAL18;
protected boolean DVSEPANNUAL19;
protected boolean DVSEPANNUAL20;
protected double DVSHODVAL;
protected double DVSPECANNUAL01;
protected double DVSPECANNUAL02;
protected double DVSPECANNUAL03;
protected double DVSPECANNUAL04;
protected short DVSPECANNUAL05;
protected short DVSPECANNUAL06;
protected short DVSPECANNUAL07;
protected short DVSPECANNUAL08;
protected short DVSPECANNUAL09;
protected short DVSPECANNUAL10;
protected boolean DVSTAT;
protected short DVTOGTCANNUAL;
protected double DVTOTALLBENANNUAL;
protected double DVTOTBENANNUAL;
protected double DVTOTTAXANNUAL;
protected byte DVWAVE;
protected double DVWTCANNUAL;
protected byte ECACT;
protected boolean EDAGE;
protected boolean EMPSTAT1;
protected byte EMPSTAT2;
protected boolean ETYPE;
protected byte FINVTY01_IFLAG;
protected byte FINVTY02_IFLAG;
protected byte FINVTY03_IFLAG;
protected byte FINVTY04_IFLAG;
protected byte FINVTY05_IFLAG;
protected byte FINVTY06_IFLAG;
protected byte FINVTY07_IFLAG;
protected byte FINVTY08_IFLAG;
protected byte FINVTY09_IFLAG;
protected byte FINVTY10_IFLAG;
protected boolean FINVTY11_IFLAG;
protected short FLNOS5;
protected byte FLOORN;
protected int FNSVAL1;
protected int FSHADA;
protected byte FSHADAB;
protected byte FSHADD;
protected boolean FSTYPIN5;
protected boolean FSTYPSH5;
protected double HPLFT3;
protected double HPLFT4;
protected double HPLFT5;
protected byte HPMN3;
protected byte HPMN4;
protected byte HPMN5;
protected double HPOS3;
protected double HPOS4;
protected double HPOS5;
protected byte HPYR3;
protected byte HPYR4;
protected byte HPYR5;
protected byte H_FLAG1;
protected boolean IGDS12;
protected boolean IGDS13;
protected boolean IGDS14;
protected boolean IGDS16;
protected boolean IGDS17;
protected boolean IGDS18;
protected boolean IGDS19;
protected boolean IGDS20;
protected boolean IGDS21;
protected boolean IGDS6;
protected boolean IGDS7;
protected boolean IHSE13;
protected boolean IHSE14;
protected boolean IHSE15;
protected boolean IHSE16;
protected boolean IHSE17;
protected boolean IHSE18;
protected boolean IHSE4;
protected boolean IHSE5;
protected boolean IHSE6;
protected boolean ILNUSE06;
protected boolean ILNUSE07;
protected boolean ILNUSE08;
protected boolean ILNUSE09;
protected boolean ILNUSE10;
protected byte ILUMTY2_I;
protected boolean ILUMTY2_IFLAG;
protected byte ILUMTY3_I;
protected boolean ILUMTY3_IFLAG;
protected boolean ILUMTY4;
protected boolean ILUMTY4_I;
protected boolean ILUMTY4_IFLAG;
protected boolean ILUMTY5;
protected boolean ILUMTY5_I;
protected boolean ILUMTY5_IFLAG;
protected boolean ILUMTY6;
protected boolean ILUMTY6_I;
protected boolean ILUMTY6_IFLAG;
protected boolean ILUMTY7;
protected boolean ILUMTY7_I;
protected boolean ILUMTY7_IFLAG;
protected byte INSPOL;
protected byte INTRO;
protected int IVAL1;
protected int IVAL2_I;
protected int IVAL3_I;
protected boolean IWAT10;
protected boolean IWAT11;
protected boolean IWAT12;
protected boolean IWAT14;
protected boolean IWAT15;
protected boolean IWAT16;
protected boolean IWAT17;
protected boolean IWAT18;
protected byte IWAT8;
protected byte IWAT9;
protected byte IWHO;
protected String LEA;
protected byte LIVWTH;
protected byte LVTDAY;
protected double MOLFT3;
protected double MOLFT4;
protected double MOLFT5;
protected byte MOMN3;
protected byte MOMN4;
protected byte MOMN5;
protected double MOOS3;
protected double MOOS4;
protected double MOOS5;
protected byte MOYR3;
protected byte MOYR4;
protected byte MOYR5;
protected boolean NSLBNK4;
protected boolean NSLBNK5;
protected boolean NSLC4;
protected boolean NSLC5;
protected double NSSEC;
protected byte NWHP;
protected byte NWHPNO;
protected short NWHPVAL1;
protected short NWHPVAL2;
protected short NWHPVAL3;
protected short OIGGT;
protected short OIGRR;
protected boolean OIMPRS7;
protected boolean OIMPRS8;
protected boolean OIMPRS9;
protected boolean ONOSAVE7;
protected boolean ONOSAVE8;
protected boolean ONOSAVE9;
protected byte OPENSAV;
protected boolean ORUNDO09;
protected boolean ORUNDO10;
protected boolean ORUNDO11;
protected byte OSAFERE2;
protected byte OSAFERET;
protected byte OSAVA;
protected byte OSAVB;
protected byte OSAVC;
protected boolean OSLBNK4;
protected boolean OSLBNK5;
protected byte OWHYSAV01;
protected byte OWHYSAV02;
protected byte OWHYSAV03;
protected byte OWHYSAV04;
protected byte OWHYSAV05;
protected byte OWHYSAV06;
protected byte OWHYSAV07;
protected byte OWHYSAV08;
protected byte OWHYSAV09;
protected byte OWHYSAV10;
protected boolean OWHYSAV11;
protected boolean OWRSRS08;
protected boolean OWRSRS09;
protected boolean OWRSRS10;
protected byte PADDFUT;
protected boolean PADDFUT2;
protected short PAVCAM1;
protected short PAVCAM2;
protected byte PAVCFG1;
protected boolean PAVCFG2;
protected double PAVCFR1;
protected byte PAVCFR2;
protected byte PAVCH1;
protected byte PAVCH2;
protected byte PAVCIN1;
protected byte PAVCIN2;
protected byte PAVCPR1;
protected boolean PAVCPR2;
protected boolean PDCVAL3;
protected byte PEMFIN;
protected byte PESAME_I;
protected boolean PESAME_IFLAG;
protected boolean PEVERC_PEVERNC__SFLAG;
protected byte PEWYNO01;
protected byte PEWYNO02;
protected byte PEWYNO03;
protected byte PEWYNO04;
protected byte PEWYNO05;
protected boolean PEWYNO06;
protected boolean PEWYNO07;
protected boolean PEWYNO08;
protected boolean PEWYNO09;
protected boolean PEWYNO10;
protected boolean PEWYNO11;
protected boolean PFANEH3;
protected boolean PFANEH5;
protected boolean PFANEH6;
protected boolean PFANEXM1;
protected boolean PFANEXM2;
protected boolean PFANEXM3;
protected boolean PFANEXM4;
protected boolean PFANEXM5;
protected boolean PFANEXM6;
protected boolean PFANEXY1;
protected boolean PFANEXY2;
protected boolean PFANEXY3;
protected boolean PFANEXY4;
protected boolean PFANEXY5;
protected boolean PFANEXY6;
protected byte PFANGA3;
protected boolean PFANGA5;
protected boolean PFANGA6;
protected boolean PFANIF3;
protected boolean PFANIF5;
protected boolean PFANIF6;
protected byte PFANJT3;
protected boolean PFANJT5;
protected boolean PFANJT6;
protected boolean PFANLM1;
protected boolean PFANLM2;
protected boolean PFANLM3;
protected boolean PFANLM4;
protected boolean PFANLM5;
protected boolean PFANLM6;
protected boolean PFANN10;
protected byte PFANN11;
protected boolean PFANN12;
protected boolean PFANN13;
protected boolean PFANN14;
protected boolean PFANN15;
protected boolean PFANN17;
protected boolean PFANN18;
protected boolean PFANN19;
protected boolean PFANN2;
protected boolean PFANN20;
protected boolean PFANN21;
protected boolean PFANN22;
protected boolean PFANN23;
protected boolean PFANN24;
protected boolean PFANN25;
protected boolean PFANN26;
protected boolean PFANN27;
protected boolean PFANN28;
protected boolean PFANN29;
protected boolean PFANN3;
protected boolean PFANN30;
protected boolean PFANN4;
protected boolean PFANN5;
protected boolean PFANN7;
protected boolean PFANN8;
protected boolean PFANN9;
protected boolean PFANVB1;
protected boolean PFANVB2;
protected boolean PFANVB3;
protected boolean PFANVB4;
protected boolean PFANVB5;
protected boolean PFANVB6;
protected short PFANVI1;
protected short PFANVI2;
protected short PFANVI3;
protected boolean PFANVI4;
protected boolean PFANVI5;
protected boolean PFANVI6;
protected short PFBEG1;
protected short PFBEG2;
protected short PFBEG3;
protected short PFBEG4;
protected boolean PFBEG5;
protected boolean PFBEG6;
protected boolean PFCASH5;
protected boolean PFCASH5_I;
protected boolean PFCASH5_IFLAG;
protected boolean PFCASH6;
protected boolean PFCASH6_I;
protected boolean PFCASH6_IFLAG;
protected int PFDDV4;
protected boolean PFDDV5;
protected boolean PFDDV6;
protected boolean PFDDVB4;
protected boolean PFDDVB5;
protected boolean PFDDVB6;
protected boolean PFDRAW4;
protected boolean PFDRAW5;
protected boolean PFDRAW6;
protected boolean PFDRA___W3;
protected short PFDRINC2;
protected boolean PFDRINC3;
protected boolean PFDRINC4;
protected boolean PFDRINC5;
protected boolean PFDRINC6;
protected boolean PFDRINCB1;
protected boolean PFDRINCB2;
protected boolean PFDRINCB3;
protected boolean PFDRINCB4;
protected boolean PFDRINCB5;
protected boolean PFDRINCB6;
protected boolean PFDRVB2;
protected boolean PFDRVB3;
protected boolean PFDRVB4;
protected boolean PFDRVB5;
protected boolean PFDRVB6;
protected int PFDRVI2;
protected boolean PFDRVI3;
protected boolean PFDRVI4;
protected boolean PFDRVI5;
protected boolean PFDRVI6;
protected short PFEND1;
protected short PFEND2;
protected short PFEND3;
protected short PFEND4;
protected boolean PFEND5;
protected boolean PFEND6;
protected boolean PFFAAG3;
protected boolean PFFAAG4;
protected boolean PFFAAG5;
protected boolean PFFAAG6;
protected boolean PFFAN10;
protected boolean PFFAN12;
protected boolean PFFAN13;
protected boolean PFFAN14;
protected boolean PFFAN15;
protected boolean PFFAN17;
protected boolean PFFAN18;
protected boolean PFFAN19;
protected boolean PFFAN20;
protected boolean PFFAN21;
protected boolean PFFAN22;
protected boolean PFFAN23;
protected boolean PFFAN24;
protected boolean PFFAN25;
protected boolean PFFAN26;
protected boolean PFFAN27;
protected boolean PFFAN28;
protected boolean PFFAN29;
protected boolean PFFAN3;
protected boolean PFFAN30;
protected boolean PFFAN4;
protected boolean PFFAN5;
protected boolean PFFAN7;
protected boolean PFFAN8;
protected boolean PFFAN9;
protected boolean PFFAWH10;
protected boolean PFFAWH11;
protected boolean PFFAWH12;
protected byte PFFAWH13;
protected boolean PFFAWH14;
protected boolean PFFAWH15;
protected boolean PFFAWH17;
protected boolean PFFAWH18;
protected boolean PFFAWH19;
protected boolean PFFAWH2;
protected boolean PFFAWH20;
protected boolean PFFAWH21;
protected boolean PFFAWH22;
protected boolean PFFAWH23;
protected boolean PFFAWH24;
protected boolean PFFAWH25;
protected boolean PFFAWH26;
protected boolean PFFAWH27;
protected boolean PFFAWH28;
protected boolean PFFAWH29;
protected boolean PFFAWH3;
protected boolean PFFAWH30;
protected boolean PFFAWH31;
protected boolean PFFAWH32;
protected boolean PFFAWH33;
protected boolean PFFAWH34;
protected boolean PFFAWH35;
protected boolean PFFAWH36;
protected boolean PFFAWH4;
protected boolean PFFAWH5;
protected byte PFFAWH7;
protected boolean PFFAWH8;
protected boolean PFFAWH9;
protected boolean PFINCA6_IFLAG;
protected boolean PFLMUS5;
protected boolean PFLMUS6;
protected boolean PFLMV5;
protected boolean PFLMV5_I;
protected boolean PFLMV5_IFLAG;
protected boolean PFLMV6_I;
protected boolean PFLMV6_IFLAG;
protected boolean PFLMVB4;
protected boolean PFLMVB5;
protected boolean PFLMVB5_I;
protected boolean PFLMVB5_IFLAG;
protected boolean PFLMVB6;
protected boolean PFLMVB6_I;
protected boolean PFLMVB6_IFLAG;
protected boolean PFLUMALL5;
protected boolean PFLUMALL5_I;
protected boolean PFLUMALL5_IFLAG;
protected boolean PFLUMALL6;
protected boolean PFLUMALL6_I;
protected boolean PFLUMALL6_IFLAG;
protected byte PFPENVB1;
protected boolean PFPENVB2;
protected boolean PFPENVB3;
protected boolean PFPENVB4;
protected boolean PFPENVB5;
protected boolean PFPENVB6;
protected int PFPENVI1;
protected short PFPENVI2;
protected short PFPENVI3;
protected short PFPENVI4;
protected boolean PFPENVI5;
protected boolean PFPENVI6;
protected boolean PFREM5;
protected boolean PFREM5_I;
protected boolean PFREM5_IFLAG;
protected boolean PFREM6;
protected boolean PFREM6_I;
protected boolean PFREM6_IFLAG;
protected byte PFSIPTY1;
protected byte PFSIPTY10;
protected boolean PFSIPTY11;
protected boolean PFSIPTY12;
protected boolean PFSIPTY13;
protected boolean PFSIPTY14;
protected byte PFSIPTY15;
protected boolean PFSIPTY16;
protected boolean PFSIPTY17;
protected boolean PFSIPTY18;
protected boolean PFSIPTY19;
protected byte PFSIPTY2;
protected boolean PFSIPTY20;
protected boolean PFSIPTY21;
protected byte PFSIPTY22;
protected boolean PFSIPTY23;
protected boolean PFSIPTY24;
protected boolean PFSIPTY25;
protected boolean PFSIPTY26;
protected boolean PFSIPTY27;
protected boolean PFSIPTY28;
protected boolean PFSIPTY29;
protected byte PFSIPTY3;
protected boolean PFSIPTY30;
protected boolean PFSIPTY31;
protected boolean PFSIPTY32;
protected boolean PFSIPTY33;
protected boolean PFSIPTY34;
protected boolean PFSIPTY35;
protected boolean PFSIPTY36;
protected boolean PFSIPTY37;
protected boolean PFSIPTY38;
protected boolean PFSIPTY39;
protected byte PFSIPTY4;
protected boolean PFSIPTY40;
protected boolean PFSIPTY41;
protected boolean PFSIPTY42;
protected byte PFSIPTY5;
protected byte PFSIPTY6;
protected boolean PFSIPTY7;
protected byte PFSIPTY8;
protected byte PFSIPTY9;
protected short PIRREG;
protected short PIRREG2;
protected byte PMORTC;
protected byte PNEWMEM;
protected boolean POADD5;
protected boolean POADD6;
protected boolean POANEH2;
protected boolean POANEXM1;
protected boolean POANEXM2;
protected boolean POANEXY1;
protected boolean POANEXY2;
protected boolean POANGA2;
protected boolean POANIF2;
protected boolean POANJT2;
protected boolean POANLM1;
protected boolean POANLM2;
protected boolean POANN2;
protected boolean POANN3;
protected boolean POANN4;
protected boolean POANN6;
protected boolean POANN7;
protected boolean POANN8;
protected boolean POANVB;
protected boolean POANVB2;
protected short POANVI1;
protected short POANVI2;
protected byte POCNDRS1;
protected boolean POCNDRS10;
protected boolean POCNDRS11;
protected boolean POCNDRS12;
protected byte POCNDRS2;
protected byte POCNDRS3;
protected boolean POCNDRS4;
protected boolean POCNDRS5;
protected boolean POCNDRS6;
protected byte POCNDRS7;
protected boolean POCNDRS8;
protected boolean POCNDRS9;
protected byte POCNHOW1;
protected byte POCNHOW2;
protected byte POCNLRS1;
protected byte POCNLRS2;
protected boolean POCNLRS3;
protected boolean POCNLRS4;
protected boolean POCNLRS5;
protected boolean POCNLRS6;
protected boolean POCNLRS7;
protected boolean POCNLRS8;
protected byte POCNPLN1;
protected byte POCNPLN2;
protected byte POCNVOL1;
protected byte POCNVOL2;
protected byte POCONCH1;
protected byte POCONCH2;
protected boolean POFAN10;
protected boolean POFAN11;
protected boolean POFAN12;
protected boolean POFAN9;
protected boolean POFAWH10;
protected boolean POFAWH11;
protected boolean POFAWH12;
protected boolean POFAWH3;
protected boolean POFAWH4;
protected boolean POFAWH5;
protected byte POFAWH7;
protected boolean POFAWH8;
protected boolean POFAWH9;
protected boolean POLMUS10;
protected boolean POLMUS11;
protected boolean POLMUS12;
protected boolean POLMUS9;
protected boolean POLMVB2;
protected byte POPENVB;
protected boolean POPENVB2;
protected int POPENVI;
protected int POPENVI2;
protected byte POPYCH;
protected boolean PPANEXM1;
protected boolean PPANEXM2;
protected boolean PPANEXM3;
protected boolean PPANEXY1;
protected boolean PPANEXY2;
protected boolean PPANEXY3;
protected boolean PPANLM1;
protected byte PPANLM2;
protected boolean PPANLM3;
protected boolean PPANN3;
protected boolean PPANN4;
protected boolean PPANN6;
protected boolean PPANN7;
protected boolean PPANN8;
protected byte PPANVB1;
protected boolean PPANVB2;
protected boolean PPANVB3;
protected int PPANVI1;
protected short PPANVI2;
protected short PPANVI3;
protected boolean PPCNDRS12;
protected boolean PPCNDRS13;
protected boolean PPCNDRS14;
protected boolean PPCNDRS15;
protected boolean PPCNDRS16;
protected byte PPCNDRS17;
protected boolean PPCNDRS18;
protected boolean PPCNDRS20;
protected boolean PPCNDRS21;
protected boolean PPCNDRS22;
protected boolean PPCNDRS23;
protected boolean PPCNDRS24;
protected boolean PPCNDRS3;
protected boolean PPCNDRS4;
protected boolean PPCNDRS5;
protected boolean PPCNDRS6;
protected boolean PPCNDRS7;
protected boolean PPCNDRS8;
protected byte PPCNDRS9;
protected byte PPCNHO___W3;
protected boolean PPCNLRS10;
protected boolean PPCNLRS11;
protected boolean PPCNLRS12;
protected boolean PPCNLRS4;
protected boolean PPCNLRS6;
protected boolean PPCNLRS7;
protected boolean PPCNLRS8;
protected byte PPCNLRS9;
protected byte PPCNPLN1;
protected byte PPCNPLN2;
protected byte PPCNPLN3;
protected byte PPCONCH;
protected boolean PPDRINC3;
protected byte PPDRINCB;
protected boolean PPDRINCB3;
protected boolean PPDRVB3;
protected boolean PPDRVI3;
protected boolean PPFAAG2;
protected boolean PPFAAG3;
protected boolean PPFAN10;
protected boolean PPFAN12;
protected boolean PPFAN13;
protected boolean PPFAN14;
protected boolean PPFAN15;
protected boolean PPFAN3;
protected boolean PPFAN4;
protected boolean PPFAN5;
protected boolean PPFAN7;
protected boolean PPFAN8;
protected boolean PPFAN9;
protected boolean PPFAWH10;
protected boolean PPFAWH11;
protected boolean PPFAWH12;
protected boolean PPFAWH13;
protected boolean PPFAWH14;
protected boolean PPFAWH16;
protected boolean PPFAWH17;
protected boolean PPFAWH18;
protected boolean PPFAWH19;
protected boolean PPFAWH20;
protected boolean PPFAWH21;
protected boolean PPFAWH4;
protected boolean PPFAWH5;
protected boolean PPFAWH7;
protected byte PPFAWH8;
protected boolean PPFAWH9;
protected byte PPIRNO1;
protected byte PPIRNO2;
protected boolean PPIRNO3;
protected int PPIRRA1;
protected int PPIRRA2;
protected short PPIRRA3;
protected boolean PPIRRF1;
protected boolean PPIRRF2;
protected boolean PPIRRF3;
protected byte PPIRRH1;
protected byte PPIRRH2;
protected boolean PPIRRH3;
protected short PPIRRY1;
protected short PPIRRY2;
protected short PPIRRY3;
protected short PPLASY1;
protected short PPLASY2;
protected short PPLASY3;
protected byte PPNINS1;
protected byte PPNINS2;
protected byte PPNINS3;
protected int PPRGAM;
protected boolean PPRGFG3;
protected boolean PPRGFR3;
protected byte PPYSTP15;
protected boolean PPYSTP16;
protected boolean PPYSTP17;
protected boolean PPYSTP18;
protected boolean PPYSTP20;
protected boolean PPYSTP21;
protected byte PPYSTP3;
protected boolean PPYSTP4;
protected boolean PPYSTP5;
protected boolean PPYSTP6;
protected boolean PPYSTP7;
protected byte PRCRELIG;
protected boolean PROXPERS;
protected byte PSCHY_F;
protected byte PSCHY_S;
protected byte PSCHY_T;
protected byte PSTYPE1;
protected byte PSTYPE10;
protected byte PSTYPE11;
protected boolean PSTYPE12;
protected boolean PSTYPE13;
protected boolean PSTYPE14;
protected byte PSTYPE15;
protected byte PSTYPE16;
protected boolean PSTYPE17;
protected boolean PSTYPE18;
protected boolean PSTYPE19;
protected byte PSTYPE2;
protected boolean PSTYPE20;
protected boolean PSTYPE21;
protected byte PSTYPE3;
protected byte PSTYPE4;
protected byte PSTYPE5;
protected byte PSTYPE6;
protected boolean PSTYPE7;
protected byte PSTYPE8;
protected byte PSTYPE9;
protected boolean REGLRPY3;
protected boolean REGLRPY3_I;
protected boolean REGLRPY3_IFLAG;
protected boolean REGLRPY4;
protected boolean REGLRPY4_I;
protected boolean REGLRPY4_IFLAG;
protected boolean REGLRPY5;
protected boolean REGLRPY5_I;
protected boolean REGLRPY5_IFLAG;
protected byte RELIGE;
protected byte RELIGS;
protected byte RELIGW;
protected byte RPCRET1;
protected boolean RPCRET2;
protected boolean RPCRET3;
protected byte RPDBCAL_F;
protected byte SCAC4;
protected byte SCAC5;
protected byte SEGRSBAND;
protected byte SENETBAND;
protected byte SENO;
protected byte SOC2000;
protected double SPASAF_IORIG;
protected double SPECAMT10;
protected byte SPECIAL01;
protected byte SPECIAL02;
protected byte SPECIAL03;
protected byte SPECIAL04;
protected byte SPECIAL05;
protected boolean SPECIAL06;
protected boolean SPECIAL07;
protected boolean SPECIAL08;
protected boolean SPECIAL09;
protected boolean SPECIAL10;
protected byte SPECINCL1;
protected byte SPECINCL10;
protected byte SPECINCL2;
protected byte SPECINCL3;
protected byte SPECINCL4;
protected byte SPECINCL5;
protected byte SPECINCL6;
protected byte SPECINCL7;
protected byte SPECINCL8;
protected byte SPECINCL9;
protected byte SPECPD1;
protected byte SPECPD10;
protected short SPECPD2;
protected byte SPECPD3;
protected byte SPECPD4;
protected byte SPECPD5;
protected byte SPECPD6;
protected byte SPECPD7;
protected byte SPECPD8;
protected byte SPECPD9;
protected byte SPECWHEN1;
protected byte SPECWHEN10;
protected byte SPECWHEN2;
protected byte SPECWHEN3;
protected byte SPECWHEN4;
protected byte SPECWHEN5;
protected byte SPECWHEN6;
protected byte SPECWHEN7;
protected byte SPECWHEN8;
protected byte SPECWHEN9;
protected byte SPENDM;
protected boolean STATUS;
protected byte TACC3;
protected boolean TADDVB3;
protected int TADDVL;
protected boolean TADDVL3;
protected byte TBCAP3;
protected boolean TBCAPY3;
protected boolean TBCKNO3;
protected boolean TBEN13;
protected boolean TBEN14;
protected boolean TBEN15;
protected boolean TBEN16;
protected byte TBEN17;
protected byte TBEN18;
protected boolean TBEN19;
protected boolean TBEN20;
protected boolean TBEN21;
protected boolean TBEN22;
protected boolean TBEN23;
protected boolean TBEN24;
protected boolean TBEN6;
protected boolean TBEN7;
protected boolean TBEN8;
protected byte TBINC3;
protected short TBREC3;
protected boolean TBRECB3;
protected byte TBVALB3;
protected byte TDUP3;
protected boolean TDUPA3;
protected byte TJNT5;
protected boolean TJNT6;
protected byte TRAINEE;
protected byte TSNO3;
protected int TVAL3;
protected byte TVALB3;
protected boolean TWHO10;
protected boolean TWHO11;
protected boolean TWHO12;
protected byte TWHO13;
protected boolean TWHO14;
protected boolean TWHO15;
protected boolean TWHO16;
protected boolean TWHO17;
protected boolean TWHO18;
protected boolean TWHO3;
protected boolean TWHO4;
protected boolean TWHO5;
protected boolean TWHO6;
protected boolean TWHO9;
protected byte ULAND10;
protected byte ULAND11;
protected byte ULAND12;
protected byte ULAND16;
protected byte ULAND17;
protected byte ULAND18;
protected boolean UPROP1_IFLAG;
protected boolean UPROP2_IFLAG;
protected boolean UPROP3_IFLAG;
protected boolean UPROP4_IFLAG;
protected boolean UPROP5_IFLAG;
protected boolean UPROP6_IFLAG;
protected byte UPRSH13;
protected byte UPRSH14;
protected byte UPRSH15;
protected byte UPRSH16;
protected byte UPRSH17;
protected boolean UPRSH18;
protected byte UPRSH19;
protected boolean UPRSH20;
protected byte UPRSH21;
protected boolean UPRSH22;
protected byte UPRSH23;
protected boolean UPRSH24;
protected byte UPRSH25;
protected byte UPRSH26;
protected byte UPRSH27;
protected boolean UPRSH28;
protected byte UPRSH29;
protected boolean UPRSH30;
protected byte UPRSH31;
protected boolean UPRSH32;
protected byte UPRSH33;
protected boolean UPRSH34;
protected byte UPRSH35;
protected boolean UPRSH36;
protected byte UPRSH6;
protected boolean UPRTYP;
protected double W1W3WGT;
protected double W2W3WGT;
protected double W3XSWGT;
protected byte WHOREATT;
protected byte WHORECAR;
protected byte WHOREMOB;
protected byte WTCPD;
protected byte XBCON;
protected boolean XBCONREM;
protected boolean XBCONSC;
protected byte XBCRT;
protected boolean XBOK;
protected byte XDCON;
protected boolean XDCONREM;
protected boolean XDCONSC;
protected boolean XDOK;
protected byte XDREF;
protected byte XICON;
protected boolean XICONREM;
protected boolean XICONSC;
protected final void initACCFRAC(String s) {
if (!s.trim().isEmpty()) {
ACCFRAC = Double.parseDouble(s);
} else {
ACCFRAC = Double.NaN;
}
}

protected final void initAGEASAF1(String s) {
if (!s.trim().isEmpty()) {
AGEASAF1 = Double.parseDouble(s);
} else {
AGEASAF1 = Double.NaN;
}
}

protected final void initAGMSAF2T(String s) {
if (!s.trim().isEmpty()) {
AGMSAF2T = Double.parseDouble(s);
} else {
AGMSAF2T = Double.NaN;
}
}

protected final void initAGMSAFT(String s) {
if (!s.trim().isEmpty()) {
AGMSAFT = Double.parseDouble(s);
} else {
AGMSAFT = Double.NaN;
}
}

protected final void initAGMSAFT1(String s) {
if (!s.trim().isEmpty()) {
AGMSAFT1 = Double.parseDouble(s);
} else {
AGMSAFT1 = Double.NaN;
}
}

protected final void initBACCEND1(String s) {
if (!s.trim().isEmpty()) {
BACCEND1 = s;
}
}

protected final void initBACCEND2(String s) {
if (!s.trim().isEmpty()) {
BACCEND2 = s;
}
}

protected final void initBACCEND3(String s) {
if (!s.trim().isEmpty()) {
BACCEND3 = s;
}
}

protected final void initBCARRY2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BCARRY2 = false;
} else {
BCARRY2 = true;
}
}
}

protected final void initBENTYPE01(String s) {
if (!s.trim().isEmpty()) {
BENTYPE01 = Byte.parseByte(s);
} else {
BENTYPE01 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE02(String s) {
if (!s.trim().isEmpty()) {
BENTYPE02 = Byte.parseByte(s);
} else {
BENTYPE02 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE03(String s) {
if (!s.trim().isEmpty()) {
BENTYPE03 = Byte.parseByte(s);
} else {
BENTYPE03 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE04(String s) {
if (!s.trim().isEmpty()) {
BENTYPE04 = Byte.parseByte(s);
} else {
BENTYPE04 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE05(String s) {
if (!s.trim().isEmpty()) {
BENTYPE05 = Byte.parseByte(s);
} else {
BENTYPE05 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE06(String s) {
if (!s.trim().isEmpty()) {
BENTYPE06 = Byte.parseByte(s);
} else {
BENTYPE06 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE07 = false;
} else {
BENTYPE07 = true;
}
}
}

protected final void initBENTYPE08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE08 = false;
} else {
BENTYPE08 = true;
}
}
}

protected final void initBENTYPE09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE09 = false;
} else {
BENTYPE09 = true;
}
}
}

protected final void initBENTYPE10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE10 = false;
} else {
BENTYPE10 = true;
}
}
}

protected final void initBENTYPE11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE11 = false;
} else {
BENTYPE11 = true;
}
}
}

protected final void initBENTYPE12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE12 = false;
} else {
BENTYPE12 = true;
}
}
}

protected final void initBFUND11(String s) {
if (!s.trim().isEmpty()) {
BFUND11 = Byte.parseByte(s);
} else {
BFUND11 = Byte.MIN_VALUE;
}
}

protected final void initBFUND12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND12 = false;
} else {
BFUND12 = true;
}
}
}

protected final void initBFUND13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND13 = false;
} else {
BFUND13 = true;
}
}
}

protected final void initBFUND14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND14 = false;
} else {
BFUND14 = true;
}
}
}

protected final void initBFUND15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND15 = false;
} else {
BFUND15 = true;
}
}
}

protected final void initBFUND16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND16 = false;
} else {
BFUND16 = true;
}
}
}

protected final void initBFUND18(String s) {
if (!s.trim().isEmpty()) {
BFUND18 = Byte.parseByte(s);
} else {
BFUND18 = Byte.MIN_VALUE;
}
}

protected final void initBFUND19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND19 = false;
} else {
BFUND19 = true;
}
}
}

protected final void initBFUND20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND20 = false;
} else {
BFUND20 = true;
}
}
}

protected final void initBFUND21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND21 = false;
} else {
BFUND21 = true;
}
}
}

protected final void initBFUND22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND22 = false;
} else {
BFUND22 = true;
}
}
}

protected final void initBFUND23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND23 = false;
} else {
BFUND23 = true;
}
}
}

protected final void initBFUND24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND24 = false;
} else {
BFUND24 = true;
}
}
}

protected final void initBFUND3(String s) {
if (!s.trim().isEmpty()) {
BFUND3 = Byte.parseByte(s);
} else {
BFUND3 = Byte.MIN_VALUE;
}
}

protected final void initBFUND4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND4 = false;
} else {
BFUND4 = true;
}
}
}

protected final void initBFUND5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND5 = false;
} else {
BFUND5 = true;
}
}
}

protected final void initBFUND6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND6 = false;
} else {
BFUND6 = true;
}
}
}

protected final void initBFUND7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND7 = false;
} else {
BFUND7 = true;
}
}
}

protected final void initBFUND8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BFUND8 = false;
} else {
BFUND8 = true;
}
}
}

protected final void initBSEPPD09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD09 = false;
} else {
BSEPPD09 = true;
}
}
}

protected final void initBSEPPD10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD10 = false;
} else {
BSEPPD10 = true;
}
}
}

protected final void initBSEPPD11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD11 = false;
} else {
BSEPPD11 = true;
}
}
}

protected final void initBSEPPD12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD12 = false;
} else {
BSEPPD12 = true;
}
}
}

protected final void initBSEPPD13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD13 = false;
} else {
BSEPPD13 = true;
}
}
}

protected final void initBSEPPD14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD14 = false;
} else {
BSEPPD14 = true;
}
}
}

protected final void initBSEPPD15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD15 = false;
} else {
BSEPPD15 = true;
}
}
}

protected final void initBSEPPD16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD16 = false;
} else {
BSEPPD16 = true;
}
}
}

protected final void initBSEPPD17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD17 = false;
} else {
BSEPPD17 = true;
}
}
}

protected final void initBSEPPD18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD18 = false;
} else {
BSEPPD18 = true;
}
}
}

protected final void initBSEPPD19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD19 = false;
} else {
BSEPPD19 = true;
}
}
}

protected final void initBSEPPD20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BSEPPD20 = false;
} else {
BSEPPD20 = true;
}
}
}

protected final void initCAEXTRA(String s) {
if (!s.trim().isEmpty()) {
CAEXTRA = Byte.parseByte(s);
} else {
CAEXTRA = Byte.MIN_VALUE;
}
}

protected final void initCAOLDER(String s) {
if (!s.trim().isEmpty()) {
CAOLDER = Byte.parseByte(s);
} else {
CAOLDER = Byte.MIN_VALUE;
}
}

protected final void initCAOTHER1(String s) {
if (!s.trim().isEmpty()) {
CAOTHER1 = Byte.parseByte(s);
} else {
CAOTHER1 = Byte.MIN_VALUE;
}
}

protected final void initCAOTHER2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
CAOTHER2 = false;
} else {
CAOTHER2 = true;
}
}
}

protected final void initCAOTHER3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
CAOTHER3 = false;
} else {
CAOTHER3 = true;
}
}
}

protected final void initCAOTHER4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
CAOTHER4 = false;
} else {
CAOTHER4 = true;
}
}
}

protected final void initCAOTHER5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
CAOTHER5 = false;
} else {
CAOTHER5 = true;
}
}
}

protected final void initCATYPE(String s) {
if (!s.trim().isEmpty()) {
CATYPE = Byte.parseByte(s);
} else {
CATYPE = Byte.MIN_VALUE;
}
}

protected final void initCCAC4(String s) {
if (!s.trim().isEmpty()) {
CCAC4 = Byte.parseByte(s);
} else {
CCAC4 = Byte.MIN_VALUE;
}
}

protected final void initCCAC5(String s) {
if (!s.trim().isEmpty()) {
CCAC5 = Byte.parseByte(s);
} else {
CCAC5 = Byte.MIN_VALUE;
}
}

protected final void initCOMBPD(String s) {
if (!s.trim().isEmpty()) {
COMBPD = Byte.parseByte(s);
} else {
COMBPD = Byte.MIN_VALUE;
}
}

protected final void initCOMMIT1(String s) {
if (!s.trim().isEmpty()) {
COMMIT1 = Byte.parseByte(s);
} else {
COMMIT1 = Byte.MIN_VALUE;
}
}

protected final void initCOMMIT2(String s) {
if (!s.trim().isEmpty()) {
COMMIT2 = Byte.parseByte(s);
} else {
COMMIT2 = Byte.MIN_VALUE;
}
}

protected final void initCOMMIT3(String s) {
if (!s.trim().isEmpty()) {
COMMIT3 = Byte.parseByte(s);
} else {
COMMIT3 = Byte.MIN_VALUE;
}
}

protected final void initCOMMIT4(String s) {
if (!s.trim().isEmpty()) {
COMMIT4 = Byte.parseByte(s);
} else {
COMMIT4 = Byte.MIN_VALUE;
}
}

protected final void initCOMMIT5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
COMMIT5 = false;
} else {
COMMIT5 = true;
}
}
}

protected final void initCOURSE20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
COURSE20 = false;
} else {
COURSE20 = true;
}
}
}

protected final void initCREDTYPE1(String s) {
if (!s.trim().isEmpty()) {
CREDTYPE1 = Byte.parseByte(s);
} else {
CREDTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initCREDTYPE2(String s) {
if (!s.trim().isEmpty()) {
CREDTYPE2 = Byte.parseByte(s);
} else {
CREDTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initCTCPD(String s) {
if (!s.trim().isEmpty()) {
CTCPD = Byte.parseByte(s);
} else {
CTCPD = Byte.MIN_VALUE;
}
}

protected final void initCTOGSEP(String s) {
if (!s.trim().isEmpty()) {
CTOGSEP = Byte.parseByte(s);
} else {
CTOGSEP = Byte.MIN_VALUE;
}
}

protected final void initCTPAY(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
CTPAY = false;
}
}

protected final void initCTPAYS(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
CTPAYS = false;
}
}

protected final void initCTPAYW(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
CTPAYW = false;
}
}

protected final void initDBURDH(String s) {
if (!s.trim().isEmpty()) {
DBURDH = Byte.parseByte(s);
} else {
DBURDH = Byte.MIN_VALUE;
}
}

protected final void initDBURDW4(String s) {
if (!s.trim().isEmpty()) {
DBURDW4 = Byte.parseByte(s);
} else {
DBURDW4 = Byte.MIN_VALUE;
}
}

protected final void initDBURDW5(String s) {
if (!s.trim().isEmpty()) {
DBURDW5 = Byte.parseByte(s);
} else {
DBURDW5 = Byte.MIN_VALUE;
}
}

protected final void initDBURDW6(String s) {
if (!s.trim().isEmpty()) {
DBURDW6 = Byte.parseByte(s);
} else {
DBURDW6 = Byte.MIN_VALUE;
}
}

protected final void initDBURDW7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DBURDW7 = false;
} else {
DBURDW7 = true;
}
}
}

protected final void initDBURD___W3(String s) {
if (!s.trim().isEmpty()) {
DBURD___W3 = Byte.parseByte(s);
} else {
DBURD___W3 = Byte.MIN_VALUE;
}
}

protected final void initDC12BEH4(String s) {
if (!s.trim().isEmpty()) {
DC12BEH4 = Byte.parseByte(s);
} else {
DC12BEH4 = Byte.MIN_VALUE;
}
}

protected final void initDC12BEH5(String s) {
if (!s.trim().isEmpty()) {
DC12BEH5 = Byte.parseByte(s);
} else {
DC12BEH5 = Byte.MIN_VALUE;
}
}

protected final void initDC12OWE4(String s) {
if (!s.trim().isEmpty()) {
DC12OWE4 = Short.parseShort(s);
} else {
DC12OWE4 = Short.MIN_VALUE;
}
}

protected final void initDC12OWE5(String s) {
if (!s.trim().isEmpty()) {
DC12OWE5 = Short.parseShort(s);
} else {
DC12OWE5 = Short.MIN_VALUE;
}
}

protected final void initDCAMC4(String s) {
if (!s.trim().isEmpty()) {
DCAMC4 = Integer.parseInt(s);
} else {
DCAMC4 = Integer.MIN_VALUE;
}
}

protected final void initDCAMC5(String s) {
if (!s.trim().isEmpty()) {
DCAMC5 = Short.parseShort(s);
} else {
DCAMC5 = Short.MIN_VALUE;
}
}

protected final void initDCAMD4(String s) {
if (!s.trim().isEmpty()) {
DCAMD4 = Short.parseShort(s);
} else {
DCAMD4 = Short.MIN_VALUE;
}
}

protected final void initDCAMD5(String s) {
if (!s.trim().isEmpty()) {
DCAMD5 = Short.parseShort(s);
} else {
DCAMD5 = Short.MIN_VALUE;
}
}

protected final void initDCAMOS4(String s) {
if (!s.trim().isEmpty()) {
DCAMOS4 = Integer.parseInt(s);
} else {
DCAMOS4 = Integer.MIN_VALUE;
}
}

protected final void initDCAMOS5(String s) {
if (!s.trim().isEmpty()) {
DCAMOS5 = Short.parseShort(s);
} else {
DCAMOS5 = Short.MIN_VALUE;
}
}

protected final void initDCAMP1_I(String s) {
if (!s.trim().isEmpty()) {
DCAMP1_I = Short.parseShort(s);
} else {
DCAMP1_I = Short.MIN_VALUE;
}
}

protected final void initDCAMP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCAMP1_IFLAG = false;
} else {
DCAMP1_IFLAG = true;
}
}
}

protected final void initDCAMP2_I(String s) {
if (!s.trim().isEmpty()) {
DCAMP2_I = Short.parseShort(s);
} else {
DCAMP2_I = Short.MIN_VALUE;
}
}

protected final void initDCAMP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCAMP2_IFLAG = Byte.parseByte(s);
} else {
DCAMP2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCAMP3_I(String s) {
if (!s.trim().isEmpty()) {
DCAMP3_I = Short.parseShort(s);
} else {
DCAMP3_I = Short.MIN_VALUE;
}
}

protected final void initDCAMP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCAMP3_IFLAG = Byte.parseByte(s);
} else {
DCAMP3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCAMP4(String s) {
if (!s.trim().isEmpty()) {
DCAMP4 = Short.parseShort(s);
} else {
DCAMP4 = Short.MIN_VALUE;
}
}

protected final void initDCAMP4_I(String s) {
if (!s.trim().isEmpty()) {
DCAMP4_I = Short.parseShort(s);
} else {
DCAMP4_I = Short.MIN_VALUE;
}
}

protected final void initDCAMP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCAMP4_IFLAG = Byte.parseByte(s);
} else {
DCAMP4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCAMP5(String s) {
if (!s.trim().isEmpty()) {
DCAMP5 = Short.parseShort(s);
} else {
DCAMP5 = Short.MIN_VALUE;
}
}

protected final void initDCAMP5_I(String s) {
if (!s.trim().isEmpty()) {
DCAMP5_I = Short.parseShort(s);
} else {
DCAMP5_I = Short.MIN_VALUE;
}
}

protected final void initDCAMP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCAMP5_IFLAG = Byte.parseByte(s);
} else {
DCAMP5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCANU_I(String s) {
if (!s.trim().isEmpty()) {
DCANU_I = Byte.parseByte(s);
} else {
DCANU_I = Byte.MIN_VALUE;
}
}

protected final void initDCANU_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCANU_IFLAG = Byte.parseByte(s);
} else {
DCANU_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCANY_I(String s) {
if (!s.trim().isEmpty()) {
DCANY_I = Byte.parseByte(s);
} else {
DCANY_I = Byte.MIN_VALUE;
}
}

protected final void initDCANY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCANY_IFLAG = Byte.parseByte(s);
} else {
DCANY_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCOS1_I(String s) {
if (!s.trim().isEmpty()) {
DCCOS1_I = Byte.parseByte(s);
} else {
DCCOS1_I = Byte.MIN_VALUE;
}
}

protected final void initDCCOS1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCCOS1_IFLAG = false;
} else {
DCCOS1_IFLAG = true;
}
}
}

protected final void initDCCOS2_I(String s) {
if (!s.trim().isEmpty()) {
DCCOS2_I = Byte.parseByte(s);
} else {
DCCOS2_I = Byte.MIN_VALUE;
}
}

protected final void initDCCOS2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCCOS2_IFLAG = Byte.parseByte(s);
} else {
DCCOS2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCOS3_I(String s) {
if (!s.trim().isEmpty()) {
DCCOS3_I = Byte.parseByte(s);
} else {
DCCOS3_I = Byte.MIN_VALUE;
}
}

protected final void initDCCOS3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCCOS3_IFLAG = Byte.parseByte(s);
} else {
DCCOS3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCOS4(String s) {
if (!s.trim().isEmpty()) {
DCCOS4 = Byte.parseByte(s);
} else {
DCCOS4 = Byte.MIN_VALUE;
}
}

protected final void initDCCOS4_I(String s) {
if (!s.trim().isEmpty()) {
DCCOS4_I = Byte.parseByte(s);
} else {
DCCOS4_I = Byte.MIN_VALUE;
}
}

protected final void initDCCOS4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCCOS4_IFLAG = Byte.parseByte(s);
} else {
DCCOS4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCOS5(String s) {
if (!s.trim().isEmpty()) {
DCCOS5 = Byte.parseByte(s);
} else {
DCCOS5 = Byte.MIN_VALUE;
}
}

protected final void initDCCOS5_I(String s) {
if (!s.trim().isEmpty()) {
DCCOS5_I = Byte.parseByte(s);
} else {
DCCOS5_I = Byte.MIN_VALUE;
}
}

protected final void initDCCOS5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCCOS5_IFLAG = Byte.parseByte(s);
} else {
DCCOS5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCSP1_I(String s) {
if (!s.trim().isEmpty()) {
DCCSP1_I = Byte.parseByte(s);
} else {
DCCSP1_I = Byte.MIN_VALUE;
}
}

protected final void initDCCSP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCCSP1_IFLAG = false;
} else {
DCCSP1_IFLAG = true;
}
}
}

protected final void initDCCSP2_I(String s) {
if (!s.trim().isEmpty()) {
DCCSP2_I = Byte.parseByte(s);
} else {
DCCSP2_I = Byte.MIN_VALUE;
}
}

protected final void initDCCSP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCCSP2_IFLAG = Byte.parseByte(s);
} else {
DCCSP2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCSP3_I(String s) {
if (!s.trim().isEmpty()) {
DCCSP3_I = Byte.parseByte(s);
} else {
DCCSP3_I = Byte.MIN_VALUE;
}
}

protected final void initDCCSP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCCSP3_IFLAG = Byte.parseByte(s);
} else {
DCCSP3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCCSP4(String s) {
if (!s.trim().isEmpty()) {
DCCSP4 = Byte.parseByte(s);
} else {
DCCSP4 = Byte.MIN_VALUE;
}
}

protected final void initDCCSP4_I(String s) {
if (!s.trim().isEmpty()) {
DCCSP4_I = Byte.parseByte(s);
} else {
DCCSP4_I = Byte.MIN_VALUE;
}
}

protected final void initDCCSP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCCSP4_IFLAG = false;
} else {
DCCSP4_IFLAG = true;
}
}
}

protected final void initDCCSP5(String s) {
if (!s.trim().isEmpty()) {
DCCSP5 = Byte.parseByte(s);
} else {
DCCSP5 = Byte.MIN_VALUE;
}
}

protected final void initDCCSP5_I(String s) {
if (!s.trim().isEmpty()) {
DCCSP5_I = Byte.parseByte(s);
} else {
DCCSP5_I = Byte.MIN_VALUE;
}
}

protected final void initDCCSP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCCSP5_IFLAG = false;
} else {
DCCSP5_IFLAG = true;
}
}
}

protected final void initDCESB4(String s) {
if (!s.trim().isEmpty()) {
DCESB4 = Byte.parseByte(s);
} else {
DCESB4 = Byte.MIN_VALUE;
}
}

protected final void initDCESB5(String s) {
if (!s.trim().isEmpty()) {
DCESB5 = Byte.parseByte(s);
} else {
DCESB5 = Byte.MIN_VALUE;
}
}

protected final void initDCINZ4(String s) {
if (!s.trim().isEmpty()) {
DCINZ4 = Byte.parseByte(s);
} else {
DCINZ4 = Byte.MIN_VALUE;
}
}

protected final void initDCINZ5(String s) {
if (!s.trim().isEmpty()) {
DCINZ5 = Byte.parseByte(s);
} else {
DCINZ5 = Byte.MIN_VALUE;
}
}

protected final void initDCNAM1_I(String s) {
if (!s.trim().isEmpty()) {
DCNAM1_I = Byte.parseByte(s);
} else {
DCNAM1_I = Byte.MIN_VALUE;
}
}

protected final void initDCNAM1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCNAM1_IFLAG = false;
} else {
DCNAM1_IFLAG = true;
}
}
}

protected final void initDCNAM2_I(String s) {
if (!s.trim().isEmpty()) {
DCNAM2_I = Byte.parseByte(s);
} else {
DCNAM2_I = Byte.MIN_VALUE;
}
}

protected final void initDCNAM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCNAM2_IFLAG = Byte.parseByte(s);
} else {
DCNAM2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCNAM3_I(String s) {
if (!s.trim().isEmpty()) {
DCNAM3_I = Byte.parseByte(s);
} else {
DCNAM3_I = Byte.MIN_VALUE;
}
}

protected final void initDCNAM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCNAM3_IFLAG = Byte.parseByte(s);
} else {
DCNAM3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCNAM4(String s) {
if (!s.trim().isEmpty()) {
DCNAM4 = Byte.parseByte(s);
} else {
DCNAM4 = Byte.MIN_VALUE;
}
}

protected final void initDCNAM4_I(String s) {
if (!s.trim().isEmpty()) {
DCNAM4_I = Byte.parseByte(s);
} else {
DCNAM4_I = Byte.MIN_VALUE;
}
}

protected final void initDCNAM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCNAM4_IFLAG = Byte.parseByte(s);
} else {
DCNAM4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCNAM5(String s) {
if (!s.trim().isEmpty()) {
DCNAM5 = Byte.parseByte(s);
} else {
DCNAM5 = Byte.MIN_VALUE;
}
}

protected final void initDCNAM5_I(String s) {
if (!s.trim().isEmpty()) {
DCNAM5_I = Byte.parseByte(s);
} else {
DCNAM5_I = Byte.MIN_VALUE;
}
}

protected final void initDCNAM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCNAM5_IFLAG = Byte.parseByte(s);
} else {
DCNAM5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCNUM1_I(String s) {
if (!s.trim().isEmpty()) {
DCNUM1_I = Byte.parseByte(s);
} else {
DCNUM1_I = Byte.MIN_VALUE;
}
}

protected final void initDCNUM1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCNUM1_IFLAG = false;
} else {
DCNUM1_IFLAG = true;
}
}
}

protected final void initDCNUM2_I(String s) {
if (!s.trim().isEmpty()) {
DCNUM2_I = Byte.parseByte(s);
} else {
DCNUM2_I = Byte.MIN_VALUE;
}
}

protected final void initDCNUM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCNUM2_IFLAG = false;
} else {
DCNUM2_IFLAG = true;
}
}
}

protected final void initDCONM10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCONM10 = false;
} else {
DCONM10 = true;
}
}
}

protected final void initDCONM7(String s) {
if (!s.trim().isEmpty()) {
DCONM7 = Byte.parseByte(s);
} else {
DCONM7 = Byte.MIN_VALUE;
}
}

protected final void initDCONM8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCONM8 = false;
} else {
DCONM8 = true;
}
}
}

protected final void initDCONM9(String s) {
if (!s.trim().isEmpty()) {
DCONM9 = Byte.parseByte(s);
} else {
DCONM9 = Byte.MIN_VALUE;
}
}

protected final void initDCOSHV4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCOSHV4_I = false;
} else {
DCOSHV4_I = true;
}
}
}

protected final void initDCOSHV4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCOSHV4_IFLAG = false;
} else {
DCOSHV4_IFLAG = true;
}
}
}

protected final void initDCOSHV5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCOSHV5_I = false;
} else {
DCOSHV5_I = true;
}
}
}

protected final void initDCOSHV5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCOSHV5_IFLAG = false;
} else {
DCOSHV5_IFLAG = true;
}
}
}

protected final void initDCPER4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCPER4 = false;
} else {
DCPER4 = true;
}
}
}

protected final void initDCPER5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCPER5 = false;
} else {
DCPER5 = true;
}
}
}

protected final void initDCREC1_I(String s) {
if (!s.trim().isEmpty()) {
DCREC1_I = Byte.parseByte(s);
} else {
DCREC1_I = Byte.MIN_VALUE;
}
}

protected final void initDCREC1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCREC1_IFLAG = false;
} else {
DCREC1_IFLAG = true;
}
}
}

protected final void initDCREC2_I(String s) {
if (!s.trim().isEmpty()) {
DCREC2_I = Byte.parseByte(s);
} else {
DCREC2_I = Byte.MIN_VALUE;
}
}

protected final void initDCREC2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCREC2_IFLAG = Byte.parseByte(s);
} else {
DCREC2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCREC3_I(String s) {
if (!s.trim().isEmpty()) {
DCREC3_I = Byte.parseByte(s);
} else {
DCREC3_I = Byte.MIN_VALUE;
}
}

protected final void initDCREC3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCREC3_IFLAG = Byte.parseByte(s);
} else {
DCREC3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCREC4(String s) {
if (!s.trim().isEmpty()) {
DCREC4 = Byte.parseByte(s);
} else {
DCREC4 = Byte.MIN_VALUE;
}
}

protected final void initDCREC4_I(String s) {
if (!s.trim().isEmpty()) {
DCREC4_I = Byte.parseByte(s);
} else {
DCREC4_I = Byte.MIN_VALUE;
}
}

protected final void initDCREC4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCREC4_IFLAG = Byte.parseByte(s);
} else {
DCREC4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCREC5(String s) {
if (!s.trim().isEmpty()) {
DCREC5 = Byte.parseByte(s);
} else {
DCREC5 = Byte.MIN_VALUE;
}
}

protected final void initDCREC5_I(String s) {
if (!s.trim().isEmpty()) {
DCREC5_I = Byte.parseByte(s);
} else {
DCREC5_I = Byte.MIN_VALUE;
}
}

protected final void initDCREC5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCREC5_IFLAG = Byte.parseByte(s);
} else {
DCREC5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCRSP1_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCRSP1_I = false;
} else {
DCRSP1_I = true;
}
}
}

protected final void initDCRSP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCRSP1_IFLAG = false;
} else {
DCRSP1_IFLAG = true;
}
}
}

protected final void initDCRSP2_I(String s) {
if (!s.trim().isEmpty()) {
DCRSP2_I = Byte.parseByte(s);
} else {
DCRSP2_I = Byte.MIN_VALUE;
}
}

protected final void initDCRSP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCRSP2_IFLAG = Byte.parseByte(s);
} else {
DCRSP2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCRSP3_I(String s) {
if (!s.trim().isEmpty()) {
DCRSP3_I = Byte.parseByte(s);
} else {
DCRSP3_I = Byte.MIN_VALUE;
}
}

protected final void initDCRSP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCRSP3_IFLAG = Byte.parseByte(s);
} else {
DCRSP3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCRSP4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCRSP4 = false;
} else {
DCRSP4 = true;
}
}
}

protected final void initDCRSP4_I(String s) {
if (!s.trim().isEmpty()) {
DCRSP4_I = Byte.parseByte(s);
} else {
DCRSP4_I = Byte.MIN_VALUE;
}
}

protected final void initDCRSP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DCRSP4_IFLAG = Byte.parseByte(s);
} else {
DCRSP4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDCRSP5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DCRSP5 = false;
} else {
DCRSP5 = true;
}
}
}

protected final void initDCRSP5_I(String s) {
if (!s.trim().isEmpty()) {
DCRSP5_I = Byte.parseByte(s);
} else {
DCRSP5_I = Byte.MIN_VALUE;
}
}

protected final void initDCRSP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DCRSP5_IFLAG = false;
} else {
DCRSP5_IFLAG = true;
}
}
}

protected final void initDHBANY08_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHBANY08_I = false;
} else {
DHBANY08_I = true;
}
}
}

protected final void initDHBANY08_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHBANY08_IFLAG = false;
} else {
DHBANY08_IFLAG = true;
}
}
}

protected final void initDHBANY09_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHBANY09_I = false;
} else {
DHBANY09_I = true;
}
}
}

protected final void initDHBANY09_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHBANY09_IFLAG = false;
} else {
DHBANY09_IFLAG = true;
}
}
}

protected final void initDHBANY10_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHBANY10_I = false;
} else {
DHBANY10_I = true;
}
}
}

protected final void initDHBANY10_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHBANY10_IFLAG = false;
} else {
DHBANY10_IFLAG = true;
}
}
}

protected final void initDHBANY11_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHBANY11_I = false;
} else {
DHBANY11_I = true;
}
}
}

protected final void initDHBANY11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHBANY11_IFLAG = false;
} else {
DHBANY11_IFLAG = true;
}
}
}

protected final void initDHPANY4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHPANY4 = false;
} else {
DHPANY4 = true;
}
}
}

protected final void initDHPANY5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHPANY5 = false;
} else {
DHPANY5 = true;
}
}
}

protected final void initDHPANY6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHPANY6 = false;
} else {
DHPANY6 = true;
}
}
}

protected final void initDHPANY7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHPANY7 = false;
} else {
DHPANY7 = true;
}
}
}

protected final void initDHPBEH3(String s) {
if (!s.trim().isEmpty()) {
DHPBEH3 = Byte.parseByte(s);
} else {
DHPBEH3 = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH3_I(String s) {
if (!s.trim().isEmpty()) {
DHPBEH3_I = Byte.parseByte(s);
} else {
DHPBEH3_I = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPBEH3_IFLAG = Byte.parseByte(s);
} else {
DHPBEH3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH4(String s) {
if (!s.trim().isEmpty()) {
DHPBEH4 = Byte.parseByte(s);
} else {
DHPBEH4 = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH4_I(String s) {
if (!s.trim().isEmpty()) {
DHPBEH4_I = Byte.parseByte(s);
} else {
DHPBEH4_I = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHPBEH4_IFLAG = false;
} else {
DHPBEH4_IFLAG = true;
}
}
}

protected final void initDHPBEH5(String s) {
if (!s.trim().isEmpty()) {
DHPBEH5 = Byte.parseByte(s);
} else {
DHPBEH5 = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH5_I(String s) {
if (!s.trim().isEmpty()) {
DHPBEH5_I = Byte.parseByte(s);
} else {
DHPBEH5_I = Byte.MIN_VALUE;
}
}

protected final void initDHPBEH5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHPBEH5_IFLAG = false;
} else {
DHPBEH5_IFLAG = true;
}
}
}

protected final void initDHPEST3(String s) {
if (!s.trim().isEmpty()) {
DHPEST3 = Byte.parseByte(s);
} else {
DHPEST3 = Byte.MIN_VALUE;
}
}

protected final void initDHPEST4(String s) {
if (!s.trim().isEmpty()) {
DHPEST4 = Byte.parseByte(s);
} else {
DHPEST4 = Byte.MIN_VALUE;
}
}

protected final void initDHPEST5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DHPEST5 = false;
} else {
DHPEST5 = true;
}
}
}

protected final void initDHPINS3(String s) {
if (!s.trim().isEmpty()) {
DHPINS3 = Short.parseShort(s);
} else {
DHPINS3 = Short.MIN_VALUE;
}
}

protected final void initDHPINS3_I(String s) {
if (!s.trim().isEmpty()) {
DHPINS3_I = Short.parseShort(s);
} else {
DHPINS3_I = Short.MIN_VALUE;
}
}

protected final void initDHPINS3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPINS3_IFLAG = Byte.parseByte(s);
} else {
DHPINS3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPINS4(String s) {
if (!s.trim().isEmpty()) {
DHPINS4 = Short.parseShort(s);
} else {
DHPINS4 = Short.MIN_VALUE;
}
}

protected final void initDHPINS4_I(String s) {
if (!s.trim().isEmpty()) {
DHPINS4_I = Double.parseDouble(s);
} else {
DHPINS4_I = Double.NaN;
}
}

protected final void initDHPINS4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPINS4_IFLAG = Byte.parseByte(s);
} else {
DHPINS4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPINS5(String s) {
if (!s.trim().isEmpty()) {
DHPINS5 = Short.parseShort(s);
} else {
DHPINS5 = Short.MIN_VALUE;
}
}

protected final void initDHPINS5_I(String s) {
if (!s.trim().isEmpty()) {
DHPINS5_I = Short.parseShort(s);
} else {
DHPINS5_I = Short.MIN_VALUE;
}
}

protected final void initDHPINS5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPINS5_IFLAG = Byte.parseByte(s);
} else {
DHPINS5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPINT3(String s) {
if (!s.trim().isEmpty()) {
DHPINT3 = Byte.parseByte(s);
} else {
DHPINT3 = Byte.MIN_VALUE;
}
}

protected final void initDHPINT4(String s) {
if (!s.trim().isEmpty()) {
DHPINT4 = Byte.parseByte(s);
} else {
DHPINT4 = Byte.MIN_VALUE;
}
}

protected final void initDHPINT5(String s) {
if (!s.trim().isEmpty()) {
DHPINT5 = Byte.parseByte(s);
} else {
DHPINT5 = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT3(String s) {
if (!s.trim().isEmpty()) {
DHPOFT3 = Byte.parseByte(s);
} else {
DHPOFT3 = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT3_I(String s) {
if (!s.trim().isEmpty()) {
DHPOFT3_I = Byte.parseByte(s);
} else {
DHPOFT3_I = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPOFT3_IFLAG = Byte.parseByte(s);
} else {
DHPOFT3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT4(String s) {
if (!s.trim().isEmpty()) {
DHPOFT4 = Byte.parseByte(s);
} else {
DHPOFT4 = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT4_I(String s) {
if (!s.trim().isEmpty()) {
DHPOFT4_I = Byte.parseByte(s);
} else {
DHPOFT4_I = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHPOFT4_IFLAG = false;
} else {
DHPOFT4_IFLAG = true;
}
}
}

protected final void initDHPOFT5(String s) {
if (!s.trim().isEmpty()) {
DHPOFT5 = Byte.parseByte(s);
} else {
DHPOFT5 = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT5_I(String s) {
if (!s.trim().isEmpty()) {
DHPOFT5_I = Byte.parseByte(s);
} else {
DHPOFT5_I = Byte.MIN_VALUE;
}
}

protected final void initDHPOFT5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHPOFT5_IFLAG = false;
} else {
DHPOFT5_IFLAG = true;
}
}
}

protected final void initDHPOWE3(String s) {
if (!s.trim().isEmpty()) {
DHPOWE3 = Short.parseShort(s);
} else {
DHPOWE3 = Short.MIN_VALUE;
}
}

protected final void initDHPOWE3_I(String s) {
if (!s.trim().isEmpty()) {
DHPOWE3_I = Short.parseShort(s);
} else {
DHPOWE3_I = Short.MIN_VALUE;
}
}

protected final void initDHPOWE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPOWE3_IFLAG = Byte.parseByte(s);
} else {
DHPOWE3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPOWE4(String s) {
if (!s.trim().isEmpty()) {
DHPOWE4 = Short.parseShort(s);
} else {
DHPOWE4 = Short.MIN_VALUE;
}
}

protected final void initDHPOWE4_I(String s) {
if (!s.trim().isEmpty()) {
DHPOWE4_I = Short.parseShort(s);
} else {
DHPOWE4_I = Short.MIN_VALUE;
}
}

protected final void initDHPOWE4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPOWE4_IFLAG = Byte.parseByte(s);
} else {
DHPOWE4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPOWE5(String s) {
if (!s.trim().isEmpty()) {
DHPOWE5 = Short.parseShort(s);
} else {
DHPOWE5 = Short.MIN_VALUE;
}
}

protected final void initDHPOWE5_I(String s) {
if (!s.trim().isEmpty()) {
DHPOWE5_I = Short.parseShort(s);
} else {
DHPOWE5_I = Short.MIN_VALUE;
}
}

protected final void initDHPOWE5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DHPOWE5_IFLAG = false;
} else {
DHPOWE5_IFLAG = true;
}
}
}

protected final void initDHPWEST3(String s) {
if (!s.trim().isEmpty()) {
DHPWEST3 = Byte.parseByte(s);
} else {
DHPWEST3 = Byte.MIN_VALUE;
}
}

protected final void initDHPWEST4(String s) {
if (!s.trim().isEmpty()) {
DHPWEST4 = Byte.parseByte(s);
} else {
DHPWEST4 = Byte.MIN_VALUE;
}
}

protected final void initDHPWEST5(String s) {
if (!s.trim().isEmpty()) {
DHPWEST5 = Byte.parseByte(s);
} else {
DHPWEST5 = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM3(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM3 = Byte.parseByte(s);
} else {
DHPWHNM3 = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM3_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM3_I = Byte.parseByte(s);
} else {
DHPWHNM3_I = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM3_IFLAG = Byte.parseByte(s);
} else {
DHPWHNM3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM4(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM4 = Byte.parseByte(s);
} else {
DHPWHNM4 = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM4_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM4_I = Byte.parseByte(s);
} else {
DHPWHNM4_I = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM4_IFLAG = Byte.parseByte(s);
} else {
DHPWHNM4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM5(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM5 = Byte.parseByte(s);
} else {
DHPWHNM5 = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM5_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM5_I = Byte.parseByte(s);
} else {
DHPWHNM5_I = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNM5_IFLAG = Byte.parseByte(s);
} else {
DHPWHNM5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNY3(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY3 = Short.parseShort(s);
} else {
DHPWHNY3 = Short.MIN_VALUE;
}
}

protected final void initDHPWHNY3_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY3_I = Short.parseShort(s);
} else {
DHPWHNY3_I = Short.MIN_VALUE;
}
}

protected final void initDHPWHNY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY3_IFLAG = Byte.parseByte(s);
} else {
DHPWHNY3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNY4(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY4 = Short.parseShort(s);
} else {
DHPWHNY4 = Short.MIN_VALUE;
}
}

protected final void initDHPWHNY4_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY4_I = Short.parseShort(s);
} else {
DHPWHNY4_I = Short.MIN_VALUE;
}
}

protected final void initDHPWHNY4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY4_IFLAG = Byte.parseByte(s);
} else {
DHPWHNY4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDHPWHNY5(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY5 = Short.parseShort(s);
} else {
DHPWHNY5 = Short.MIN_VALUE;
}
}

protected final void initDHPWHNY5_I(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY5_I = Short.parseShort(s);
} else {
DHPWHNY5_I = Short.MIN_VALUE;
}
}

protected final void initDHPWHNY5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DHPWHNY5_IFLAG = Byte.parseByte(s);
} else {
DHPWHNY5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDLWHY11(String s) {
if (!s.trim().isEmpty()) {
DLWHY11 = Byte.parseByte(s);
} else {
DLWHY11 = Byte.MIN_VALUE;
}
}

protected final void initDLWHY12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY12 = false;
} else {
DLWHY12 = true;
}
}
}

protected final void initDLWHY13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY13 = false;
} else {
DLWHY13 = true;
}
}
}

protected final void initDLWHY14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY14 = false;
} else {
DLWHY14 = true;
}
}
}

protected final void initDLWHY17(String s) {
if (!s.trim().isEmpty()) {
DLWHY17 = Byte.parseByte(s);
} else {
DLWHY17 = Byte.MIN_VALUE;
}
}

protected final void initDLWHY18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY18 = false;
} else {
DLWHY18 = true;
}
}
}

protected final void initDLWHY19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY19 = false;
} else {
DLWHY19 = true;
}
}
}

protected final void initDLWHY20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY20 = false;
} else {
DLWHY20 = true;
}
}
}

protected final void initDLWHY21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY21 = false;
} else {
DLWHY21 = true;
}
}
}

protected final void initDLWHY24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY24 = false;
} else {
DLWHY24 = true;
}
}
}

protected final void initDLWHY25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY25 = false;
} else {
DLWHY25 = true;
}
}
}

protected final void initDLWHY26(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY26 = false;
} else {
DLWHY26 = true;
}
}
}

protected final void initDLWHY27(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY27 = false;
} else {
DLWHY27 = true;
}
}
}

protected final void initDLWHY28(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY28 = false;
} else {
DLWHY28 = true;
}
}
}

protected final void initDLWHY29(String s) {
if (!s.trim().isEmpty()) {
DLWHY29 = Byte.parseByte(s);
} else {
DLWHY29 = Byte.MIN_VALUE;
}
}

protected final void initDLWHY30(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY30 = false;
} else {
DLWHY30 = true;
}
}
}

protected final void initDLWHY31(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY31 = false;
} else {
DLWHY31 = true;
}
}
}

protected final void initDLWHY32(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY32 = false;
} else {
DLWHY32 = true;
}
}
}

protected final void initDLWHY33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY33 = false;
} else {
DLWHY33 = true;
}
}
}

protected final void initDLWHY34(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY34 = false;
} else {
DLWHY34 = true;
}
}
}

protected final void initDLWHY35(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DLWHY35 = false;
} else {
DLWHY35 = true;
}
}
}

protected final void initDMOBEH3(String s) {
if (!s.trim().isEmpty()) {
DMOBEH3 = Byte.parseByte(s);
} else {
DMOBEH3 = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH3_I(String s) {
if (!s.trim().isEmpty()) {
DMOBEH3_I = Byte.parseByte(s);
} else {
DMOBEH3_I = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOBEH3_IFLAG = Byte.parseByte(s);
} else {
DMOBEH3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH4(String s) {
if (!s.trim().isEmpty()) {
DMOBEH4 = Byte.parseByte(s);
} else {
DMOBEH4 = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH4_I(String s) {
if (!s.trim().isEmpty()) {
DMOBEH4_I = Byte.parseByte(s);
} else {
DMOBEH4_I = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOBEH4_IFLAG = false;
} else {
DMOBEH4_IFLAG = true;
}
}
}

protected final void initDMOBEH5(String s) {
if (!s.trim().isEmpty()) {
DMOBEH5 = Byte.parseByte(s);
} else {
DMOBEH5 = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH5_I(String s) {
if (!s.trim().isEmpty()) {
DMOBEH5_I = Byte.parseByte(s);
} else {
DMOBEH5_I = Byte.MIN_VALUE;
}
}

protected final void initDMOBEH5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOBEH5_IFLAG = false;
} else {
DMOBEH5_IFLAG = true;
}
}
}

protected final void initDMOEST3(String s) {
if (!s.trim().isEmpty()) {
DMOEST3 = Byte.parseByte(s);
} else {
DMOEST3 = Byte.MIN_VALUE;
}
}

protected final void initDMOEST4(String s) {
if (!s.trim().isEmpty()) {
DMOEST4 = Byte.parseByte(s);
} else {
DMOEST4 = Byte.MIN_VALUE;
}
}

protected final void initDMOEST5(String s) {
if (!s.trim().isEmpty()) {
DMOEST5 = Byte.parseByte(s);
} else {
DMOEST5 = Byte.MIN_VALUE;
}
}

protected final void initDMOINS3(String s) {
if (!s.trim().isEmpty()) {
DMOINS3 = Short.parseShort(s);
} else {
DMOINS3 = Short.MIN_VALUE;
}
}

protected final void initDMOINS3_I(String s) {
if (!s.trim().isEmpty()) {
DMOINS3_I = Byte.parseByte(s);
} else {
DMOINS3_I = Byte.MIN_VALUE;
}
}

protected final void initDMOINS3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOINS3_IFLAG = false;
} else {
DMOINS3_IFLAG = true;
}
}
}

protected final void initDMOINS4(String s) {
if (!s.trim().isEmpty()) {
DMOINS4 = Short.parseShort(s);
} else {
DMOINS4 = Short.MIN_VALUE;
}
}

protected final void initDMOINS4_I(String s) {
if (!s.trim().isEmpty()) {
DMOINS4_I = Byte.parseByte(s);
} else {
DMOINS4_I = Byte.MIN_VALUE;
}
}

protected final void initDMOINS4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOINS4_IFLAG = Byte.parseByte(s);
} else {
DMOINS4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDMOINS5(String s) {
if (!s.trim().isEmpty()) {
DMOINS5 = Byte.parseByte(s);
} else {
DMOINS5 = Byte.MIN_VALUE;
}
}

protected final void initDMOINS5_I(String s) {
if (!s.trim().isEmpty()) {
DMOINS5_I = Byte.parseByte(s);
} else {
DMOINS5_I = Byte.MIN_VALUE;
}
}

protected final void initDMOINS5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOINS5_IFLAG = false;
} else {
DMOINS5_IFLAG = true;
}
}
}

protected final void initDMOINT3(String s) {
if (!s.trim().isEmpty()) {
DMOINT3 = Byte.parseByte(s);
} else {
DMOINT3 = Byte.MIN_VALUE;
}
}

protected final void initDMOINT4(String s) {
if (!s.trim().isEmpty()) {
DMOINT4 = Byte.parseByte(s);
} else {
DMOINT4 = Byte.MIN_VALUE;
}
}

protected final void initDMOINT5(String s) {
if (!s.trim().isEmpty()) {
DMOINT5 = Byte.parseByte(s);
} else {
DMOINT5 = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT3(String s) {
if (!s.trim().isEmpty()) {
DMOOFT3 = Byte.parseByte(s);
} else {
DMOOFT3 = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT3_I(String s) {
if (!s.trim().isEmpty()) {
DMOOFT3_I = Byte.parseByte(s);
} else {
DMOOFT3_I = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOOFT3_IFLAG = Byte.parseByte(s);
} else {
DMOOFT3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT4(String s) {
if (!s.trim().isEmpty()) {
DMOOFT4 = Byte.parseByte(s);
} else {
DMOOFT4 = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT4_I(String s) {
if (!s.trim().isEmpty()) {
DMOOFT4_I = Byte.parseByte(s);
} else {
DMOOFT4_I = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOOFT4_IFLAG = false;
} else {
DMOOFT4_IFLAG = true;
}
}
}

protected final void initDMOOFT5(String s) {
if (!s.trim().isEmpty()) {
DMOOFT5 = Byte.parseByte(s);
} else {
DMOOFT5 = Byte.MIN_VALUE;
}
}

protected final void initDMOOFT5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DMOOFT5_I = false;
} else {
DMOOFT5_I = true;
}
}
}

protected final void initDMOOFT5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOOFT5_IFLAG = false;
} else {
DMOOFT5_IFLAG = true;
}
}
}

protected final void initDMOOWE3(String s) {
if (!s.trim().isEmpty()) {
DMOOWE3 = Short.parseShort(s);
} else {
DMOOWE3 = Short.MIN_VALUE;
}
}

protected final void initDMOOWE3_I(String s) {
if (!s.trim().isEmpty()) {
DMOOWE3_I = Short.parseShort(s);
} else {
DMOOWE3_I = Short.MIN_VALUE;
}
}

protected final void initDMOOWE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOOWE3_IFLAG = Byte.parseByte(s);
} else {
DMOOWE3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDMOOWE4(String s) {
if (!s.trim().isEmpty()) {
DMOOWE4 = Short.parseShort(s);
} else {
DMOOWE4 = Short.MIN_VALUE;
}
}

protected final void initDMOOWE4_I(String s) {
if (!s.trim().isEmpty()) {
DMOOWE4_I = Short.parseShort(s);
} else {
DMOOWE4_I = Short.MIN_VALUE;
}
}

protected final void initDMOOWE4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOOWE4_IFLAG = false;
} else {
DMOOWE4_IFLAG = true;
}
}
}

protected final void initDMOOWE5(String s) {
if (!s.trim().isEmpty()) {
DMOOWE5 = Short.parseShort(s);
} else {
DMOOWE5 = Short.MIN_VALUE;
}
}

protected final void initDMOOWE5_I(String s) {
if (!s.trim().isEmpty()) {
DMOOWE5_I = Short.parseShort(s);
} else {
DMOOWE5_I = Short.MIN_VALUE;
}
}

protected final void initDMOOWE5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOOWE5_IFLAG = false;
} else {
DMOOWE5_IFLAG = true;
}
}
}

protected final void initDMOWEST3(String s) {
if (!s.trim().isEmpty()) {
DMOWEST3 = Byte.parseByte(s);
} else {
DMOWEST3 = Byte.MIN_VALUE;
}
}

protected final void initDMOWEST4(String s) {
if (!s.trim().isEmpty()) {
DMOWEST4 = Byte.parseByte(s);
} else {
DMOWEST4 = Byte.MIN_VALUE;
}
}

protected final void initDMOWEST5(String s) {
if (!s.trim().isEmpty()) {
DMOWEST5 = Byte.parseByte(s);
} else {
DMOWEST5 = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM3(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM3 = Byte.parseByte(s);
} else {
DMOWHNM3 = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM3_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM3_I = Byte.parseByte(s);
} else {
DMOWHNM3_I = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM3_IFLAG = Byte.parseByte(s);
} else {
DMOWHNM3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM4(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM4 = Byte.parseByte(s);
} else {
DMOWHNM4 = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM4_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM4_I = Byte.parseByte(s);
} else {
DMOWHNM4_I = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOWHNM4_IFLAG = false;
} else {
DMOWHNM4_IFLAG = true;
}
}
}

protected final void initDMOWHNM5(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM5 = Byte.parseByte(s);
} else {
DMOWHNM5 = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM5_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNM5_I = Byte.parseByte(s);
} else {
DMOWHNM5_I = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOWHNM5_IFLAG = false;
} else {
DMOWHNM5_IFLAG = true;
}
}
}

protected final void initDMOWHNY3(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY3 = Short.parseShort(s);
} else {
DMOWHNY3 = Short.MIN_VALUE;
}
}

protected final void initDMOWHNY3_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY3_I = Short.parseShort(s);
} else {
DMOWHNY3_I = Short.MIN_VALUE;
}
}

protected final void initDMOWHNY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY3_IFLAG = Byte.parseByte(s);
} else {
DMOWHNY3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDMOWHNY4(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY4 = Short.parseShort(s);
} else {
DMOWHNY4 = Short.MIN_VALUE;
}
}

protected final void initDMOWHNY4_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY4_I = Short.parseShort(s);
} else {
DMOWHNY4_I = Short.MIN_VALUE;
}
}

protected final void initDMOWHNY4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOWHNY4_IFLAG = false;
} else {
DMOWHNY4_IFLAG = true;
}
}
}

protected final void initDMOWHNY5(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY5 = Short.parseShort(s);
} else {
DMOWHNY5 = Short.MIN_VALUE;
}
}

protected final void initDMOWHNY5_I(String s) {
if (!s.trim().isEmpty()) {
DMOWHNY5_I = Short.parseShort(s);
} else {
DMOWHNY5_I = Short.MIN_VALUE;
}
}

protected final void initDMOWHNY5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DMOWHNY5_IFLAG = false;
} else {
DMOWHNY5_IFLAG = true;
}
}
}

protected final void initDS12BEH4(String s) {
if (!s.trim().isEmpty()) {
DS12BEH4 = Byte.parseByte(s);
} else {
DS12BEH4 = Byte.MIN_VALUE;
}
}

protected final void initDS12BEH5(String s) {
if (!s.trim().isEmpty()) {
DS12BEH5 = Byte.parseByte(s);
} else {
DS12BEH5 = Byte.MIN_VALUE;
}
}

protected final void initDS12OWE4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DS12OWE4 = false;
} else {
DS12OWE4 = true;
}
}
}

protected final void initDS12OWE5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DS12OWE5 = false;
} else {
DS12OWE5 = true;
}
}
}

protected final void initDSAMC1_I(String s) {
if (!s.trim().isEmpty()) {
DSAMC1_I = Short.parseShort(s);
} else {
DSAMC1_I = Short.MIN_VALUE;
}
}

protected final void initDSAMC1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMC1_IFLAG = false;
} else {
DSAMC1_IFLAG = true;
}
}
}

protected final void initDSAMC2_I(String s) {
if (!s.trim().isEmpty()) {
DSAMC2_I = Short.parseShort(s);
} else {
DSAMC2_I = Short.MIN_VALUE;
}
}

protected final void initDSAMC2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSAMC2_IFLAG = Byte.parseByte(s);
} else {
DSAMC2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSAMC3_I(String s) {
if (!s.trim().isEmpty()) {
DSAMC3_I = Short.parseShort(s);
} else {
DSAMC3_I = Short.MIN_VALUE;
}
}

protected final void initDSAMC3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMC3_IFLAG = false;
} else {
DSAMC3_IFLAG = true;
}
}
}

protected final void initDSAMC4(String s) {
if (!s.trim().isEmpty()) {
DSAMC4 = Short.parseShort(s);
} else {
DSAMC4 = Short.MIN_VALUE;
}
}

protected final void initDSAMC4_I(String s) {
if (!s.trim().isEmpty()) {
DSAMC4_I = Short.parseShort(s);
} else {
DSAMC4_I = Short.MIN_VALUE;
}
}

protected final void initDSAMC4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSAMC4_IFLAG = Byte.parseByte(s);
} else {
DSAMC4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSAMC5(String s) {
if (!s.trim().isEmpty()) {
DSAMC5 = Short.parseShort(s);
} else {
DSAMC5 = Short.MIN_VALUE;
}
}

protected final void initDSAMC5_I(String s) {
if (!s.trim().isEmpty()) {
DSAMC5_I = Short.parseShort(s);
} else {
DSAMC5_I = Short.MIN_VALUE;
}
}

protected final void initDSAMC5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMC5_IFLAG = false;
} else {
DSAMC5_IFLAG = true;
}
}
}

protected final void initDSAMD1_I(String s) {
if (!s.trim().isEmpty()) {
DSAMD1_I = Short.parseShort(s);
} else {
DSAMD1_I = Short.MIN_VALUE;
}
}

protected final void initDSAMD1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMD1_IFLAG = false;
} else {
DSAMD1_IFLAG = true;
}
}
}

protected final void initDSAMD2_I(String s) {
if (!s.trim().isEmpty()) {
DSAMD2_I = Short.parseShort(s);
} else {
DSAMD2_I = Short.MIN_VALUE;
}
}

protected final void initDSAMD2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSAMD2_IFLAG = Byte.parseByte(s);
} else {
DSAMD2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSAMD3_I(String s) {
if (!s.trim().isEmpty()) {
DSAMD3_I = Short.parseShort(s);
} else {
DSAMD3_I = Short.MIN_VALUE;
}
}

protected final void initDSAMD3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMD3_IFLAG = false;
} else {
DSAMD3_IFLAG = true;
}
}
}

protected final void initDSAMD4(String s) {
if (!s.trim().isEmpty()) {
DSAMD4 = Short.parseShort(s);
} else {
DSAMD4 = Short.MIN_VALUE;
}
}

protected final void initDSAMD4_I(String s) {
if (!s.trim().isEmpty()) {
DSAMD4_I = Short.parseShort(s);
} else {
DSAMD4_I = Short.MIN_VALUE;
}
}

protected final void initDSAMD4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMD4_IFLAG = false;
} else {
DSAMD4_IFLAG = true;
}
}
}

protected final void initDSAMD5(String s) {
if (!s.trim().isEmpty()) {
DSAMD5 = Byte.parseByte(s);
} else {
DSAMD5 = Byte.MIN_VALUE;
}
}

protected final void initDSAMD5_I(String s) {
if (!s.trim().isEmpty()) {
DSAMD5_I = Short.parseShort(s);
} else {
DSAMD5_I = Short.MIN_VALUE;
}
}

protected final void initDSAMD5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMD5_IFLAG = false;
} else {
DSAMD5_IFLAG = true;
}
}
}

protected final void initDSAMOS4(String s) {
if (!s.trim().isEmpty()) {
DSAMOS4 = Short.parseShort(s);
} else {
DSAMOS4 = Short.MIN_VALUE;
}
}

protected final void initDSAMOS5(String s) {
if (!s.trim().isEmpty()) {
DSAMOS5 = Short.parseShort(s);
} else {
DSAMOS5 = Short.MIN_VALUE;
}
}

protected final void initDSAMP1_I(String s) {
if (!s.trim().isEmpty()) {
DSAMP1_I = Short.parseShort(s);
} else {
DSAMP1_I = Short.MIN_VALUE;
}
}

protected final void initDSAMP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMP1_IFLAG = false;
} else {
DSAMP1_IFLAG = true;
}
}
}

protected final void initDSAMP2_I(String s) {
if (!s.trim().isEmpty()) {
DSAMP2_I = Short.parseShort(s);
} else {
DSAMP2_I = Short.MIN_VALUE;
}
}

protected final void initDSAMP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSAMP2_IFLAG = Byte.parseByte(s);
} else {
DSAMP2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSAMP3_I(String s) {
if (!s.trim().isEmpty()) {
DSAMP3_I = Short.parseShort(s);
} else {
DSAMP3_I = Short.MIN_VALUE;
}
}

protected final void initDSAMP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMP3_IFLAG = false;
} else {
DSAMP3_IFLAG = true;
}
}
}

protected final void initDSAMP4(String s) {
if (!s.trim().isEmpty()) {
DSAMP4 = Short.parseShort(s);
} else {
DSAMP4 = Short.MIN_VALUE;
}
}

protected final void initDSAMP4_I(String s) {
if (!s.trim().isEmpty()) {
DSAMP4_I = Short.parseShort(s);
} else {
DSAMP4_I = Short.MIN_VALUE;
}
}

protected final void initDSAMP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSAMP4_IFLAG = Byte.parseByte(s);
} else {
DSAMP4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSAMP5(String s) {
if (!s.trim().isEmpty()) {
DSAMP5 = Short.parseShort(s);
} else {
DSAMP5 = Short.MIN_VALUE;
}
}

protected final void initDSAMP5_I(String s) {
if (!s.trim().isEmpty()) {
DSAMP5_I = Short.parseShort(s);
} else {
DSAMP5_I = Short.MIN_VALUE;
}
}

protected final void initDSAMP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSAMP5_IFLAG = false;
} else {
DSAMP5_IFLAG = true;
}
}
}

protected final void initDSANU1_I(String s) {
if (!s.trim().isEmpty()) {
DSANU1_I = Byte.parseByte(s);
} else {
DSANU1_I = Byte.MIN_VALUE;
}
}

protected final void initDSANU1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSANU1_IFLAG = Byte.parseByte(s);
} else {
DSANU1_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSANU2_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSANU2_I = false;
} else {
DSANU2_I = true;
}
}
}

protected final void initDSANU2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSANU2_IFLAG = false;
} else {
DSANU2_IFLAG = true;
}
}
}

protected final void initDSANY1_I(String s) {
if (!s.trim().isEmpty()) {
DSANY1_I = Byte.parseByte(s);
} else {
DSANY1_I = Byte.MIN_VALUE;
}
}

protected final void initDSANY1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSANY1_IFLAG = Byte.parseByte(s);
} else {
DSANY1_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSANY2_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSANY2_I = false;
} else {
DSANY2_I = true;
}
}
}

protected final void initDSANY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSANY2_IFLAG = false;
} else {
DSANY2_IFLAG = true;
}
}
}

protected final void initDSCOS1_I(String s) {
if (!s.trim().isEmpty()) {
DSCOS1_I = Byte.parseByte(s);
} else {
DSCOS1_I = Byte.MIN_VALUE;
}
}

protected final void initDSCOS1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSCOS1_IFLAG = false;
} else {
DSCOS1_IFLAG = true;
}
}
}

protected final void initDSCOS2_I(String s) {
if (!s.trim().isEmpty()) {
DSCOS2_I = Byte.parseByte(s);
} else {
DSCOS2_I = Byte.MIN_VALUE;
}
}

protected final void initDSCOS2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSCOS2_IFLAG = Byte.parseByte(s);
} else {
DSCOS2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSCOS3_I(String s) {
if (!s.trim().isEmpty()) {
DSCOS3_I = Byte.parseByte(s);
} else {
DSCOS3_I = Byte.MIN_VALUE;
}
}

protected final void initDSCOS3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSCOS3_IFLAG = Byte.parseByte(s);
} else {
DSCOS3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSCOS4(String s) {
if (!s.trim().isEmpty()) {
DSCOS4 = Byte.parseByte(s);
} else {
DSCOS4 = Byte.MIN_VALUE;
}
}

protected final void initDSCOS4_I(String s) {
if (!s.trim().isEmpty()) {
DSCOS4_I = Byte.parseByte(s);
} else {
DSCOS4_I = Byte.MIN_VALUE;
}
}

protected final void initDSCOS4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSCOS4_IFLAG = Byte.parseByte(s);
} else {
DSCOS4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSCOS5(String s) {
if (!s.trim().isEmpty()) {
DSCOS5 = Byte.parseByte(s);
} else {
DSCOS5 = Byte.MIN_VALUE;
}
}

protected final void initDSCOS5_I(String s) {
if (!s.trim().isEmpty()) {
DSCOS5_I = Byte.parseByte(s);
} else {
DSCOS5_I = Byte.MIN_VALUE;
}
}

protected final void initDSCOS5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSCOS5_IFLAG = Byte.parseByte(s);
} else {
DSCOS5_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSCSP1_I(String s) {
if (!s.trim().isEmpty()) {
DSCSP1_I = Byte.parseByte(s);
} else {
DSCSP1_I = Byte.MIN_VALUE;
}
}

protected final void initDSCSP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSCSP1_IFLAG = false;
} else {
DSCSP1_IFLAG = true;
}
}
}

protected final void initDSCSP2_I(String s) {
if (!s.trim().isEmpty()) {
DSCSP2_I = Byte.parseByte(s);
} else {
DSCSP2_I = Byte.MIN_VALUE;
}
}

protected final void initDSCSP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSCSP2_IFLAG = false;
} else {
DSCSP2_IFLAG = true;
}
}
}

protected final void initDSCSP3_I(String s) {
if (!s.trim().isEmpty()) {
DSCSP3_I = Byte.parseByte(s);
} else {
DSCSP3_I = Byte.MIN_VALUE;
}
}

protected final void initDSCSP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSCSP3_IFLAG = false;
} else {
DSCSP3_IFLAG = true;
}
}
}

protected final void initDSCSP4(String s) {
if (!s.trim().isEmpty()) {
DSCSP4 = Byte.parseByte(s);
} else {
DSCSP4 = Byte.MIN_VALUE;
}
}

protected final void initDSCSP4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSCSP4_I = false;
} else {
DSCSP4_I = true;
}
}
}

protected final void initDSCSP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSCSP4_IFLAG = false;
} else {
DSCSP4_IFLAG = true;
}
}
}

protected final void initDSCSP5(String s) {
if (!s.trim().isEmpty()) {
DSCSP5 = Byte.parseByte(s);
} else {
DSCSP5 = Byte.MIN_VALUE;
}
}

protected final void initDSCSP5_I(String s) {
if (!s.trim().isEmpty()) {
DSCSP5_I = Byte.parseByte(s);
} else {
DSCSP5_I = Byte.MIN_VALUE;
}
}

protected final void initDSCSP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSCSP5_IFLAG = false;
} else {
DSCSP5_IFLAG = true;
}
}
}

protected final void initDSESB4(String s) {
if (!s.trim().isEmpty()) {
DSESB4 = Byte.parseByte(s);
} else {
DSESB4 = Byte.MIN_VALUE;
}
}

protected final void initDSESB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSESB5 = false;
} else {
DSESB5 = true;
}
}
}

protected final void initDSLEST5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSLEST5_IFLAG = false;
} else {
DSLEST5_IFLAG = true;
}
}
}

protected final void initDSNAM1_I(String s) {
if (!s.trim().isEmpty()) {
DSNAM1_I = Byte.parseByte(s);
} else {
DSNAM1_I = Byte.MIN_VALUE;
}
}

protected final void initDSNAM1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSNAM1_IFLAG = false;
} else {
DSNAM1_IFLAG = true;
}
}
}

protected final void initDSNAM2_I(String s) {
if (!s.trim().isEmpty()) {
DSNAM2_I = Byte.parseByte(s);
} else {
DSNAM2_I = Byte.MIN_VALUE;
}
}

protected final void initDSNAM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSNAM2_IFLAG = Byte.parseByte(s);
} else {
DSNAM2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSNAM3_I(String s) {
if (!s.trim().isEmpty()) {
DSNAM3_I = Byte.parseByte(s);
} else {
DSNAM3_I = Byte.MIN_VALUE;
}
}

protected final void initDSNAM3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSNAM3_IFLAG = Byte.parseByte(s);
} else {
DSNAM3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSNAM4(String s) {
if (!s.trim().isEmpty()) {
DSNAM4 = Byte.parseByte(s);
} else {
DSNAM4 = Byte.MIN_VALUE;
}
}

protected final void initDSNAM4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSNAM4_I = false;
} else {
DSNAM4_I = true;
}
}
}

protected final void initDSNAM4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSNAM4_IFLAG = Byte.parseByte(s);
} else {
DSNAM4_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSNAM5(String s) {
if (!s.trim().isEmpty()) {
DSNAM5 = Byte.parseByte(s);
} else {
DSNAM5 = Byte.MIN_VALUE;
}
}

protected final void initDSNAM5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSNAM5_I = false;
} else {
DSNAM5_I = true;
}
}
}

protected final void initDSNAM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSNAM5_IFLAG = false;
} else {
DSNAM5_IFLAG = true;
}
}
}

protected final void initDSNUM(String s) {
if (!s.trim().isEmpty()) {
DSNUM = Byte.parseByte(s);
} else {
DSNUM = Byte.MIN_VALUE;
}
}

protected final void initDSNUM2_I(String s) {
if (!s.trim().isEmpty()) {
DSNUM2_I = Byte.parseByte(s);
} else {
DSNUM2_I = Byte.MIN_VALUE;
}
}

protected final void initDSNUM2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSNUM2_IFLAG = false;
} else {
DSNUM2_IFLAG = true;
}
}
}

protected final void initDSNUM_I(String s) {
if (!s.trim().isEmpty()) {
DSNUM_I = Byte.parseByte(s);
} else {
DSNUM_I = Byte.MIN_VALUE;
}
}

protected final void initDSNUM_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSNUM_IFLAG = Byte.parseByte(s);
} else {
DSNUM_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSONM10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSONM10 = false;
} else {
DSONM10 = true;
}
}
}

protected final void initDSONM7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSONM7 = false;
} else {
DSONM7 = true;
}
}
}

protected final void initDSONM8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSONM8 = false;
} else {
DSONM8 = true;
}
}
}

protected final void initDSONM9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSONM9 = false;
} else {
DSONM9 = true;
}
}
}

protected final void initDSPER4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSPER4 = false;
} else {
DSPER4 = true;
}
}
}

protected final void initDSPER5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSPER5 = false;
} else {
DSPER5 = true;
}
}
}

protected final void initDSREC4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSREC4 = false;
} else {
DSREC4 = true;
}
}
}

protected final void initDSREC5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DSREC5 = false;
} else {
DSREC5 = true;
}
}
}

protected final void initDSRSP1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP1 = false;
} else {
DSRSP1 = true;
}
}
}

protected final void initDSRSP1_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP1_I = false;
} else {
DSRSP1_I = true;
}
}
}

protected final void initDSRSP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSRSP1_IFLAG = false;
} else {
DSRSP1_IFLAG = true;
}
}
}

protected final void initDSRSP2(String s) {
if (!s.trim().isEmpty()) {
DSRSP2 = Byte.parseByte(s);
} else {
DSRSP2 = Byte.MIN_VALUE;
}
}

protected final void initDSRSP2_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP2_I = false;
} else {
DSRSP2_I = true;
}
}
}

protected final void initDSRSP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DSRSP2_IFLAG = Byte.parseByte(s);
} else {
DSRSP2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDSRSP3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP3 = false;
} else {
DSRSP3 = true;
}
}
}

protected final void initDSRSP3_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP3_I = false;
} else {
DSRSP3_I = true;
}
}
}

protected final void initDSRSP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSRSP3_IFLAG = false;
} else {
DSRSP3_IFLAG = true;
}
}
}

protected final void initDSRSP4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP4 = false;
} else {
DSRSP4 = true;
}
}
}

protected final void initDSRSP4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP4_I = false;
} else {
DSRSP4_I = true;
}
}
}

protected final void initDSRSP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSRSP4_IFLAG = false;
} else {
DSRSP4_IFLAG = true;
}
}
}

protected final void initDSRSP5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP5 = false;
} else {
DSRSP5 = true;
}
}
}

protected final void initDSRSP5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
DSRSP5_I = false;
} else {
DSRSP5_I = true;
}
}
}

protected final void initDSRSP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DSRSP5_IFLAG = false;
} else {
DSRSP5_IFLAG = true;
}
}
}

protected final void initDTLOWE1(String s) {
if (!s.trim().isEmpty()) {
DTLOWE1 = Integer.parseInt(s);
} else {
DTLOWE1 = Integer.MIN_VALUE;
}
}

protected final void initDTLOWE1_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE1_I = Integer.parseInt(s);
} else {
DTLOWE1_I = Integer.MIN_VALUE;
}
}

protected final void initDTLOWE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWE1_IFLAG = false;
} else {
DTLOWE1_IFLAG = true;
}
}
}

protected final void initDTLOWE2(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2 = Short.parseShort(s);
} else {
DTLOWE2 = Short.MIN_VALUE;
}
}

protected final void initDTLOWE2_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2_I = Short.parseShort(s);
} else {
DTLOWE2_I = Short.MIN_VALUE;
}
}

protected final void initDTLOWE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWE2_IFLAG = false;
} else {
DTLOWE2_IFLAG = true;
}
}
}

protected final void initDTLOWE3(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3 = Short.parseShort(s);
} else {
DTLOWE3 = Short.MIN_VALUE;
}
}

protected final void initDTLOWE3_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3_I = Short.parseShort(s);
} else {
DTLOWE3_I = Short.MIN_VALUE;
}
}

protected final void initDTLOWE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWE3_IFLAG = false;
} else {
DTLOWE3_IFLAG = true;
}
}
}

protected final void initDTLOWE4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLOWE4_I = false;
} else {
DTLOWE4_I = true;
}
}
}

protected final void initDTLOWE4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWE4_IFLAG = false;
} else {
DTLOWE4_IFLAG = true;
}
}
}

protected final void initDTLOWE5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLOWE5_I = false;
} else {
DTLOWE5_I = true;
}
}
}

protected final void initDTLOWE5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWE5_IFLAG = false;
} else {
DTLOWE5_IFLAG = true;
}
}
}

protected final void initDTLOWEB1(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB1 = Byte.parseByte(s);
} else {
DTLOWEB1 = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB1_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB1_I = Byte.parseByte(s);
} else {
DTLOWEB1_I = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB1_IFLAG = false;
} else {
DTLOWEB1_IFLAG = true;
}
}
}

protected final void initDTLOWEB2(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB2 = Byte.parseByte(s);
} else {
DTLOWEB2 = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB2_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB2_I = Byte.parseByte(s);
} else {
DTLOWEB2_I = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB2_IFLAG = false;
} else {
DTLOWEB2_IFLAG = true;
}
}
}

protected final void initDTLOWEB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLOWEB3 = false;
} else {
DTLOWEB3 = true;
}
}
}

protected final void initDTLOWEB3_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB3_I = Byte.parseByte(s);
} else {
DTLOWEB3_I = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB3_IFLAG = false;
} else {
DTLOWEB3_IFLAG = true;
}
}
}

protected final void initDTLOWEB4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLOWEB4_I = false;
} else {
DTLOWEB4_I = true;
}
}
}

protected final void initDTLOWEB4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB4_IFLAG = false;
} else {
DTLOWEB4_IFLAG = true;
}
}
}

protected final void initDTLOWEB5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLOWEB5_I = false;
} else {
DTLOWEB5_I = true;
}
}
}

protected final void initDTLOWEB5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB5_IFLAG = false;
} else {
DTLOWEB5_IFLAG = true;
}
}
}

protected final void initDTLTYPE1(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE1 = Byte.parseByte(s);
} else {
DTLTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE1_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE1_I = Byte.parseByte(s);
} else {
DTLTYPE1_I = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLTYPE1_IFLAG = false;
} else {
DTLTYPE1_IFLAG = true;
}
}
}

protected final void initDTLTYPE2(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2 = Byte.parseByte(s);
} else {
DTLTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE2_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2_I = Byte.parseByte(s);
} else {
DTLTYPE2_I = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLTYPE2_IFLAG = false;
} else {
DTLTYPE2_IFLAG = true;
}
}
}

protected final void initDTLTYPE3(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3 = Byte.parseByte(s);
} else {
DTLTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE3_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3_I = Byte.parseByte(s);
} else {
DTLTYPE3_I = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLTYPE3_IFLAG = false;
} else {
DTLTYPE3_IFLAG = true;
}
}
}

protected final void initDTLTYPE4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLTYPE4_I = false;
} else {
DTLTYPE4_I = true;
}
}
}

protected final void initDTLTYPE4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLTYPE4_IFLAG = false;
} else {
DTLTYPE4_IFLAG = true;
}
}
}

protected final void initDTLTYPE5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLTYPE5_I = false;
} else {
DTLTYPE5_I = true;
}
}
}

protected final void initDTLTYPE5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLTYPE5_IFLAG = false;
} else {
DTLTYPE5_IFLAG = true;
}
}
}

protected final void initDTTOWE1(String s) {
if (!s.trim().isEmpty()) {
DTTOWE1 = Short.parseShort(s);
} else {
DTTOWE1 = Short.MIN_VALUE;
}
}

protected final void initDTTOWE2(String s) {
if (!s.trim().isEmpty()) {
DTTOWE2 = Short.parseShort(s);
} else {
DTTOWE2 = Short.MIN_VALUE;
}
}

protected final void initDTTOWE3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWE3 = false;
} else {
DTTOWE3 = true;
}
}
}

protected final void initDTTOWEB1(String s) {
if (!s.trim().isEmpty()) {
DTTOWEB1 = Byte.parseByte(s);
} else {
DTTOWEB1 = Byte.MIN_VALUE;
}
}

protected final void initDTTOWEB10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB10 = false;
} else {
DTTOWEB10 = true;
}
}
}

protected final void initDTTOWEB11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB11 = false;
} else {
DTTOWEB11 = true;
}
}
}

protected final void initDTTOWEB12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB12 = false;
} else {
DTTOWEB12 = true;
}
}
}

protected final void initDTTOWEB13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB13 = false;
} else {
DTTOWEB13 = true;
}
}
}

protected final void initDTTOWEB14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB14 = false;
} else {
DTTOWEB14 = true;
}
}
}

protected final void initDTTOWEB15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB15 = false;
} else {
DTTOWEB15 = true;
}
}
}

protected final void initDTTOWEB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB2 = false;
} else {
DTTOWEB2 = true;
}
}
}

protected final void initDTTOWEB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB3 = false;
} else {
DTTOWEB3 = true;
}
}
}

protected final void initDTTOWEB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB4 = false;
} else {
DTTOWEB4 = true;
}
}
}

protected final void initDTTOWEB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB5 = false;
} else {
DTTOWEB5 = true;
}
}
}

protected final void initDTTOWEB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB6 = false;
} else {
DTTOWEB6 = true;
}
}
}

protected final void initDTTOWEB7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB7 = false;
} else {
DTTOWEB7 = true;
}
}
}

protected final void initDTTOWEB8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB8 = false;
} else {
DTTOWEB8 = true;
}
}
}

protected final void initDTTOWEB9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTTOWEB9 = false;
} else {
DTTOWEB9 = true;
}
}
}

protected final void initDVAGE18(String s) {
if (!s.trim().isEmpty()) {
DVAGE18 = Byte.parseByte(s);
} else {
DVAGE18 = Byte.MIN_VALUE;
}
}

protected final void initDVAGEW3BAND(String s) {
if (!s.trim().isEmpty()) {
DVAGEW3BAND = Byte.parseByte(s);
} else {
DVAGEW3BAND = Byte.MIN_VALUE;
}
}

protected final void initDVBENU1(String s) {
if (!s.trim().isEmpty()) {
DVBENU1 = Byte.parseByte(s);
} else {
DVBENU1 = Byte.MIN_VALUE;
}
}

protected final void initDVCOINV(String s) {
if (!s.trim().isEmpty()) {
DVCOINV = Integer.parseInt(s);
} else {
DVCOINV = Integer.MIN_VALUE;
}
}

protected final void initDVCTCANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVCTCANNUAL = Short.parseShort(s);
} else {
DVCTCANNUAL = Short.MIN_VALUE;
}
}

protected final void initDVDHPOWE3(String s) {
if (!s.trim().isEmpty()) {
DVDHPOWE3 = Short.parseShort(s);
} else {
DVDHPOWE3 = Short.MIN_VALUE;
}
}

protected final void initDVDHPOWE4(String s) {
if (!s.trim().isEmpty()) {
DVDHPOWE4 = Short.parseShort(s);
} else {
DVDHPOWE4 = Short.MIN_VALUE;
}
}

protected final void initDVDHPOWE5(String s) {
if (!s.trim().isEmpty()) {
DVDHPOWE5 = Short.parseShort(s);
} else {
DVDHPOWE5 = Short.MIN_VALUE;
}
}

protected final void initDVDMOOWE3(String s) {
if (!s.trim().isEmpty()) {
DVDMOOWE3 = Short.parseShort(s);
} else {
DVDMOOWE3 = Short.MIN_VALUE;
}
}

protected final void initDVDMOOWE4(String s) {
if (!s.trim().isEmpty()) {
DVDMOOWE4 = Short.parseShort(s);
} else {
DVDMOOWE4 = Short.MIN_VALUE;
}
}

protected final void initDVDMOOWE5(String s) {
if (!s.trim().isEmpty()) {
DVDMOOWE5 = Short.parseShort(s);
} else {
DVDMOOWE5 = Short.MIN_VALUE;
}
}

protected final void initDVGRSPAY_I(String s) {
if (!s.trim().isEmpty()) {
DVGRSPAY_I = Integer.parseInt(s);
} else {
DVGRSPAY_I = Integer.MIN_VALUE;
}
}

protected final void initDVGRSPAY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVGRSPAY_IFLAG = false;
} else {
DVGRSPAY_IFLAG = true;
}
}
}

protected final void initDVHASBOND(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASBOND = false;
} else {
DVHASBOND = true;
}
}
}

protected final void initDVHASCC(String s) {
if (!s.trim().isEmpty()) {
DVHASCC = Byte.parseByte(s);
} else {
DVHASCC = Byte.MIN_VALUE;
}
}

protected final void initDVHASDBR_ORIG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
DVHASDBR_ORIG = false;
} else {
DVHASDBR_ORIG = true;
}
}
}

protected final void initDVHASEMPSH(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASEMPSH = false;
} else {
DVHASEMPSH = true;
}
}
}

protected final void initDVHASGILT(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASGILT = false;
} else {
DVHASGILT = true;
}
}
}

protected final void initDVHASISA(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASISA = false;
} else {
DVHASISA = true;
}
}
}

protected final void initDVHASLINS(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASLINS = false;
} else {
DVHASLINS = true;
}
}
}

protected final void initDVHASNHP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASNHP = false;
} else {
DVHASNHP = true;
}
}
}

protected final void initDVHASNOFA(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASNOFA = false;
} else {
DVHASNOFA = true;
}
}
}

protected final void initDVHASNSP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASNSP = false;
} else {
DVHASNSP = true;
}
}
}

protected final void initDVHASOINV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASOINV = false;
} else {
DVHASOINV = true;
}
}
}

protected final void initDVHASOTHSH(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASOTHSH = false;
} else {
DVHASOTHSH = true;
}
}
}

protected final void initDVHASSC(String s) {
if (!s.trim().isEmpty()) {
DVHASSC = Byte.parseByte(s);
} else {
DVHASSC = Byte.MIN_VALUE;
}
}

protected final void initDVHASUTRUST(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVHASUTRUST = false;
} else {
DVHASUTRUST = true;
}
}
}

protected final void initDVNETPAY_I(String s) {
if (!s.trim().isEmpty()) {
DVNETPAY_I = Integer.parseInt(s);
} else {
DVNETPAY_I = Integer.MIN_VALUE;
}
}

protected final void initDVNETPAY_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVNETPAY_IFLAG = false;
} else {
DVNETPAY_IFLAG = true;
}
}
}

protected final void initDVNWHP_SUM(String s) {
if (!s.trim().isEmpty()) {
DVNWHP_SUM = Short.parseShort(s);
} else {
DVNWHP_SUM = Short.MIN_VALUE;
}
}

protected final void initDVOIGGTANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVOIGGTANNUAL = Short.parseShort(s);
} else {
DVOIGGTANNUAL = Short.MIN_VALUE;
}
}

protected final void initDVOIGOEANNUAL_I(String s) {
if (!s.trim().isEmpty()) {
DVOIGOEANNUAL_I = Integer.parseInt(s);
} else {
DVOIGOEANNUAL_I = Integer.MIN_VALUE;
}
}

protected final void initDVOIGOSANNUAL_I(String s) {
if (!s.trim().isEmpty()) {
DVOIGOSANNUAL_I = Integer.parseInt(s);
} else {
DVOIGOSANNUAL_I = Integer.MIN_VALUE;
}
}

protected final void initDVOIGPPANNUAL_I(String s) {
if (!s.trim().isEmpty()) {
DVOIGPPANNUAL_I = Integer.parseInt(s);
} else {
DVOIGPPANNUAL_I = Integer.MIN_VALUE;
}
}

protected final void initDVOIGRRANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVOIGRRANNUAL = Short.parseShort(s);
} else {
DVOIGRRANNUAL = Short.MIN_VALUE;
}
}

protected final void initDVPUBLPRIV(String s) {
if (!s.trim().isEmpty()) {
DVPUBLPRIV = Byte.parseByte(s);
} else {
DVPUBLPRIV = Byte.MIN_VALUE;
}
}

protected final void initDVRENTAMTANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVRENTAMTANNUAL = Integer.parseInt(s);
} else {
DVRENTAMTANNUAL = Integer.MIN_VALUE;
}
}

protected final void initDVRENTBNDANNUAL_I(String s) {
if (!s.trim().isEmpty()) {
DVRENTBNDANNUAL_I = Byte.parseByte(s);
} else {
DVRENTBNDANNUAL_I = Byte.MIN_VALUE;
}
}

protected final void initDVRENTBNDANNUAL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVRENTBNDANNUAL_IFLAG = false;
} else {
DVRENTBNDANNUAL_IFLAG = true;
}
}
}

protected final void initDVSAME_I(String s) {
if (!s.trim().isEmpty()) {
DVSAME_I = Byte.parseByte(s);
} else {
DVSAME_I = Byte.MIN_VALUE;
}
}

protected final void initDVSAME_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSAME_IFLAG = false;
} else {
DVSAME_IFLAG = true;
}
}
}

protected final void initDVSEGRSPAYBAND_I(String s) {
if (!s.trim().isEmpty()) {
DVSEGRSPAYBAND_I = Byte.parseByte(s);
} else {
DVSEGRSPAYBAND_I = Byte.MIN_VALUE;
}
}

protected final void initDVSEGRSPAYBAND_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEGRSPAYBAND_IFLAG = false;
} else {
DVSEGRSPAYBAND_IFLAG = true;
}
}
}

protected final void initDVSENETPAYBAND_I(String s) {
if (!s.trim().isEmpty()) {
DVSENETPAYBAND_I = Byte.parseByte(s);
} else {
DVSENETPAYBAND_I = Byte.MIN_VALUE;
}
}

protected final void initDVSENETPAYBAND_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSENETPAYBAND_IFLAG = false;
} else {
DVSENETPAYBAND_IFLAG = true;
}
}
}

protected final void initDVSEPANNUAL09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL09 = false;
} else {
DVSEPANNUAL09 = true;
}
}
}

protected final void initDVSEPANNUAL10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL10 = false;
} else {
DVSEPANNUAL10 = true;
}
}
}

protected final void initDVSEPANNUAL11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL11 = false;
} else {
DVSEPANNUAL11 = true;
}
}
}

protected final void initDVSEPANNUAL12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL12 = false;
} else {
DVSEPANNUAL12 = true;
}
}
}

protected final void initDVSEPANNUAL13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL13 = false;
} else {
DVSEPANNUAL13 = true;
}
}
}

protected final void initDVSEPANNUAL14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL14 = false;
} else {
DVSEPANNUAL14 = true;
}
}
}

protected final void initDVSEPANNUAL15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL15 = false;
} else {
DVSEPANNUAL15 = true;
}
}
}

protected final void initDVSEPANNUAL16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL16 = false;
} else {
DVSEPANNUAL16 = true;
}
}
}

protected final void initDVSEPANNUAL17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL17 = false;
} else {
DVSEPANNUAL17 = true;
}
}
}

protected final void initDVSEPANNUAL18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL18 = false;
} else {
DVSEPANNUAL18 = true;
}
}
}

protected final void initDVSEPANNUAL19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL19 = false;
} else {
DVSEPANNUAL19 = true;
}
}
}

protected final void initDVSEPANNUAL20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSEPANNUAL20 = false;
} else {
DVSEPANNUAL20 = true;
}
}
}

protected final void initDVSHODVAL(String s) {
if (!s.trim().isEmpty()) {
DVSHODVAL = Double.parseDouble(s);
} else {
DVSHODVAL = Double.NaN;
}
}

protected final void initDVSPECANNUAL01(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL01 = Double.parseDouble(s);
} else {
DVSPECANNUAL01 = Double.NaN;
}
}

protected final void initDVSPECANNUAL02(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL02 = Double.parseDouble(s);
} else {
DVSPECANNUAL02 = Double.NaN;
}
}

protected final void initDVSPECANNUAL03(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL03 = Double.parseDouble(s);
} else {
DVSPECANNUAL03 = Double.NaN;
}
}

protected final void initDVSPECANNUAL04(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL04 = Double.parseDouble(s);
} else {
DVSPECANNUAL04 = Double.NaN;
}
}

protected final void initDVSPECANNUAL05(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL05 = Short.parseShort(s);
} else {
DVSPECANNUAL05 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL06(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL06 = Short.parseShort(s);
} else {
DVSPECANNUAL06 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL07(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL07 = Short.parseShort(s);
} else {
DVSPECANNUAL07 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL08(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL08 = Short.parseShort(s);
} else {
DVSPECANNUAL08 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL09(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL09 = Short.parseShort(s);
} else {
DVSPECANNUAL09 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL10(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL10 = Short.parseShort(s);
} else {
DVSPECANNUAL10 = Short.MIN_VALUE;
}
}

protected final void initDVSTAT(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DVSTAT = false;
} else {
DVSTAT = true;
}
}
}

protected final void initDVTOGTCANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOGTCANNUAL = Short.parseShort(s);
} else {
DVTOGTCANNUAL = Short.MIN_VALUE;
}
}

protected final void initDVTOTALLBENANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTALLBENANNUAL = Double.parseDouble(s);
} else {
DVTOTALLBENANNUAL = Double.NaN;
}
}

protected final void initDVTOTBENANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTBENANNUAL = Double.parseDouble(s);
} else {
DVTOTBENANNUAL = Double.NaN;
}
}

protected final void initDVTOTTAXANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTTAXANNUAL = Double.parseDouble(s);
} else {
DVTOTTAXANNUAL = Double.NaN;
}
}

protected final void initDVWAVE(String s) {
if (!s.trim().isEmpty()) {
DVWAVE = Byte.parseByte(s);
} else {
DVWAVE = Byte.MIN_VALUE;
}
}

protected final void initDVWTCANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVWTCANNUAL = Double.parseDouble(s);
} else {
DVWTCANNUAL = Double.NaN;
}
}

protected final void initECACT(String s) {
if (!s.trim().isEmpty()) {
ECACT = Byte.parseByte(s);
} else {
ECACT = Byte.MIN_VALUE;
}
}

protected final void initEDAGE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
EDAGE = false;
} else {
EDAGE = true;
}
}
}

protected final void initEMPSTAT1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
EMPSTAT1 = false;
} else {
EMPSTAT1 = true;
}
}
}

protected final void initEMPSTAT2(String s) {
if (!s.trim().isEmpty()) {
EMPSTAT2 = Byte.parseByte(s);
} else {
EMPSTAT2 = Byte.MIN_VALUE;
}
}

protected final void initETYPE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ETYPE = false;
} else {
ETYPE = true;
}
}
}

protected final void initFINVTY01_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY01_IFLAG = Byte.parseByte(s);
} else {
FINVTY01_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY02_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY02_IFLAG = Byte.parseByte(s);
} else {
FINVTY02_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY03_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY03_IFLAG = Byte.parseByte(s);
} else {
FINVTY03_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY04_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY04_IFLAG = Byte.parseByte(s);
} else {
FINVTY04_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY05_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY05_IFLAG = Byte.parseByte(s);
} else {
FINVTY05_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY06_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY06_IFLAG = Byte.parseByte(s);
} else {
FINVTY06_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY07_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY07_IFLAG = Byte.parseByte(s);
} else {
FINVTY07_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY08_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY08_IFLAG = Byte.parseByte(s);
} else {
FINVTY08_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY09_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY09_IFLAG = Byte.parseByte(s);
} else {
FINVTY09_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY10_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY10_IFLAG = Byte.parseByte(s);
} else {
FINVTY10_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
FINVTY11_IFLAG = false;
} else {
FINVTY11_IFLAG = true;
}
}
}

protected final void initFLNOS5(String s) {
if (!s.trim().isEmpty()) {
FLNOS5 = Short.parseShort(s);
} else {
FLNOS5 = Short.MIN_VALUE;
}
}

protected final void initFLOORN(String s) {
if (!s.trim().isEmpty()) {
FLOORN = Byte.parseByte(s);
} else {
FLOORN = Byte.MIN_VALUE;
}
}

protected final void initFNSVAL1(String s) {
if (!s.trim().isEmpty()) {
FNSVAL1 = Integer.parseInt(s);
} else {
FNSVAL1 = Integer.MIN_VALUE;
}
}

protected final void initFSHADA(String s) {
if (!s.trim().isEmpty()) {
FSHADA = Integer.parseInt(s);
} else {
FSHADA = Integer.MIN_VALUE;
}
}

protected final void initFSHADAB(String s) {
if (!s.trim().isEmpty()) {
FSHADAB = Byte.parseByte(s);
} else {
FSHADAB = Byte.MIN_VALUE;
}
}

protected final void initFSHADD(String s) {
if (!s.trim().isEmpty()) {
FSHADD = Byte.parseByte(s);
} else {
FSHADD = Byte.MIN_VALUE;
}
}

protected final void initFSTYPIN5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
FSTYPIN5 = false;
} else {
FSTYPIN5 = true;
}
}
}

protected final void initFSTYPSH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
FSTYPSH5 = false;
} else {
FSTYPSH5 = true;
}
}
}

protected final void initHPLFT3(String s) {
if (!s.trim().isEmpty()) {
HPLFT3 = Double.parseDouble(s);
} else {
HPLFT3 = Double.NaN;
}
}

protected final void initHPLFT4(String s) {
if (!s.trim().isEmpty()) {
HPLFT4 = Double.parseDouble(s);
} else {
HPLFT4 = Double.NaN;
}
}

protected final void initHPLFT5(String s) {
if (!s.trim().isEmpty()) {
HPLFT5 = Double.parseDouble(s);
} else {
HPLFT5 = Double.NaN;
}
}

protected final void initHPMN3(String s) {
if (!s.trim().isEmpty()) {
HPMN3 = Byte.parseByte(s);
} else {
HPMN3 = Byte.MIN_VALUE;
}
}

protected final void initHPMN4(String s) {
if (!s.trim().isEmpty()) {
HPMN4 = Byte.parseByte(s);
} else {
HPMN4 = Byte.MIN_VALUE;
}
}

protected final void initHPMN5(String s) {
if (!s.trim().isEmpty()) {
HPMN5 = Byte.parseByte(s);
} else {
HPMN5 = Byte.MIN_VALUE;
}
}

protected final void initHPOS3(String s) {
if (!s.trim().isEmpty()) {
HPOS3 = Double.parseDouble(s);
} else {
HPOS3 = Double.NaN;
}
}

protected final void initHPOS4(String s) {
if (!s.trim().isEmpty()) {
HPOS4 = Double.parseDouble(s);
} else {
HPOS4 = Double.NaN;
}
}

protected final void initHPOS5(String s) {
if (!s.trim().isEmpty()) {
HPOS5 = Double.parseDouble(s);
} else {
HPOS5 = Double.NaN;
}
}

protected final void initHPYR3(String s) {
if (!s.trim().isEmpty()) {
HPYR3 = Byte.parseByte(s);
} else {
HPYR3 = Byte.MIN_VALUE;
}
}

protected final void initHPYR4(String s) {
if (!s.trim().isEmpty()) {
HPYR4 = Byte.parseByte(s);
} else {
HPYR4 = Byte.MIN_VALUE;
}
}

protected final void initHPYR5(String s) {
if (!s.trim().isEmpty()) {
HPYR5 = Byte.parseByte(s);
} else {
HPYR5 = Byte.MIN_VALUE;
}
}

protected final void initH_FLAG1(String s) {
if (!s.trim().isEmpty()) {
H_FLAG1 = Byte.parseByte(s);
} else {
H_FLAG1 = Byte.MIN_VALUE;
}
}

protected final void initIGDS12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS12 = false;
} else {
IGDS12 = true;
}
}
}

protected final void initIGDS13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS13 = false;
} else {
IGDS13 = true;
}
}
}

protected final void initIGDS14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS14 = false;
} else {
IGDS14 = true;
}
}
}

protected final void initIGDS16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS16 = false;
} else {
IGDS16 = true;
}
}
}

protected final void initIGDS17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS17 = false;
} else {
IGDS17 = true;
}
}
}

protected final void initIGDS18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS18 = false;
} else {
IGDS18 = true;
}
}
}

protected final void initIGDS19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS19 = false;
} else {
IGDS19 = true;
}
}
}

protected final void initIGDS20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS20 = false;
} else {
IGDS20 = true;
}
}
}

protected final void initIGDS21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS21 = false;
} else {
IGDS21 = true;
}
}
}

protected final void initIGDS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS6 = false;
} else {
IGDS6 = true;
}
}
}

protected final void initIGDS7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IGDS7 = false;
} else {
IGDS7 = true;
}
}
}

protected final void initIHSE13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE13 = false;
} else {
IHSE13 = true;
}
}
}

protected final void initIHSE14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE14 = false;
} else {
IHSE14 = true;
}
}
}

protected final void initIHSE15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE15 = false;
} else {
IHSE15 = true;
}
}
}

protected final void initIHSE16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE16 = false;
} else {
IHSE16 = true;
}
}
}

protected final void initIHSE17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE17 = false;
} else {
IHSE17 = true;
}
}
}

protected final void initIHSE18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE18 = false;
} else {
IHSE18 = true;
}
}
}

protected final void initIHSE4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE4 = false;
} else {
IHSE4 = true;
}
}
}

protected final void initIHSE5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE5 = false;
} else {
IHSE5 = true;
}
}
}

protected final void initIHSE6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IHSE6 = false;
} else {
IHSE6 = true;
}
}
}

protected final void initILNUSE06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILNUSE06 = false;
} else {
ILNUSE06 = true;
}
}
}

protected final void initILNUSE07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILNUSE07 = false;
} else {
ILNUSE07 = true;
}
}
}

protected final void initILNUSE08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILNUSE08 = false;
} else {
ILNUSE08 = true;
}
}
}

protected final void initILNUSE09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILNUSE09 = false;
} else {
ILNUSE09 = true;
}
}
}

protected final void initILNUSE10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILNUSE10 = false;
} else {
ILNUSE10 = true;
}
}
}

protected final void initILUMTY2_I(String s) {
if (!s.trim().isEmpty()) {
ILUMTY2_I = Byte.parseByte(s);
} else {
ILUMTY2_I = Byte.MIN_VALUE;
}
}

protected final void initILUMTY2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
ILUMTY2_IFLAG = false;
} else {
ILUMTY2_IFLAG = true;
}
}
}

protected final void initILUMTY3_I(String s) {
if (!s.trim().isEmpty()) {
ILUMTY3_I = Byte.parseByte(s);
} else {
ILUMTY3_I = Byte.MIN_VALUE;
}
}

protected final void initILUMTY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
ILUMTY3_IFLAG = false;
} else {
ILUMTY3_IFLAG = true;
}
}
}

protected final void initILUMTY4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY4 = false;
} else {
ILUMTY4 = true;
}
}
}

protected final void initILUMTY4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY4_I = false;
} else {
ILUMTY4_I = true;
}
}
}

protected final void initILUMTY4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
ILUMTY4_IFLAG = false;
} else {
ILUMTY4_IFLAG = true;
}
}
}

protected final void initILUMTY5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY5 = false;
} else {
ILUMTY5 = true;
}
}
}

protected final void initILUMTY5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY5_I = false;
} else {
ILUMTY5_I = true;
}
}
}

protected final void initILUMTY5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
ILUMTY5_IFLAG = false;
} else {
ILUMTY5_IFLAG = true;
}
}
}

protected final void initILUMTY6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY6 = false;
} else {
ILUMTY6 = true;
}
}
}

protected final void initILUMTY6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY6_I = false;
} else {
ILUMTY6_I = true;
}
}
}

protected final void initILUMTY6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
ILUMTY6_IFLAG = false;
} else {
ILUMTY6_IFLAG = true;
}
}
}

protected final void initILUMTY7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY7 = false;
} else {
ILUMTY7 = true;
}
}
}

protected final void initILUMTY7_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ILUMTY7_I = false;
} else {
ILUMTY7_I = true;
}
}
}

protected final void initILUMTY7_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
ILUMTY7_IFLAG = false;
} else {
ILUMTY7_IFLAG = true;
}
}
}

protected final void initINSPOL(String s) {
if (!s.trim().isEmpty()) {
INSPOL = Byte.parseByte(s);
} else {
INSPOL = Byte.MIN_VALUE;
}
}

protected final void initINTRO(String s) {
if (!s.trim().isEmpty()) {
INTRO = Byte.parseByte(s);
} else {
INTRO = Byte.MIN_VALUE;
}
}

protected final void initIVAL1(String s) {
if (!s.trim().isEmpty()) {
IVAL1 = Integer.parseInt(s);
} else {
IVAL1 = Integer.MIN_VALUE;
}
}

protected final void initIVAL2_I(String s) {
if (!s.trim().isEmpty()) {
IVAL2_I = Integer.parseInt(s);
} else {
IVAL2_I = Integer.MIN_VALUE;
}
}

protected final void initIVAL3_I(String s) {
if (!s.trim().isEmpty()) {
IVAL3_I = Integer.parseInt(s);
} else {
IVAL3_I = Integer.MIN_VALUE;
}
}

protected final void initIWAT10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT10 = false;
} else {
IWAT10 = true;
}
}
}

protected final void initIWAT11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT11 = false;
} else {
IWAT11 = true;
}
}
}

protected final void initIWAT12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT12 = false;
} else {
IWAT12 = true;
}
}
}

protected final void initIWAT14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT14 = false;
} else {
IWAT14 = true;
}
}
}

protected final void initIWAT15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT15 = false;
} else {
IWAT15 = true;
}
}
}

protected final void initIWAT16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT16 = false;
} else {
IWAT16 = true;
}
}
}

protected final void initIWAT17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT17 = false;
} else {
IWAT17 = true;
}
}
}

protected final void initIWAT18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
IWAT18 = false;
} else {
IWAT18 = true;
}
}
}

protected final void initIWAT8(String s) {
if (!s.trim().isEmpty()) {
IWAT8 = Byte.parseByte(s);
} else {
IWAT8 = Byte.MIN_VALUE;
}
}

protected final void initIWAT9(String s) {
if (!s.trim().isEmpty()) {
IWAT9 = Byte.parseByte(s);
} else {
IWAT9 = Byte.MIN_VALUE;
}
}

protected final void initIWHO(String s) {
if (!s.trim().isEmpty()) {
IWHO = Byte.parseByte(s);
} else {
IWHO = Byte.MIN_VALUE;
}
}

protected final void initLEA(String s) {
if (!s.trim().isEmpty()) {
LEA = s;
}
}

protected final void initLIVWTH(String s) {
if (!s.trim().isEmpty()) {
LIVWTH = Byte.parseByte(s);
} else {
LIVWTH = Byte.MIN_VALUE;
}
}

protected final void initLVTDAY(String s) {
if (!s.trim().isEmpty()) {
LVTDAY = Byte.parseByte(s);
} else {
LVTDAY = Byte.MIN_VALUE;
}
}

protected final void initMOLFT3(String s) {
if (!s.trim().isEmpty()) {
MOLFT3 = Double.parseDouble(s);
} else {
MOLFT3 = Double.NaN;
}
}

protected final void initMOLFT4(String s) {
if (!s.trim().isEmpty()) {
MOLFT4 = Double.parseDouble(s);
} else {
MOLFT4 = Double.NaN;
}
}

protected final void initMOLFT5(String s) {
if (!s.trim().isEmpty()) {
MOLFT5 = Double.parseDouble(s);
} else {
MOLFT5 = Double.NaN;
}
}

protected final void initMOMN3(String s) {
if (!s.trim().isEmpty()) {
MOMN3 = Byte.parseByte(s);
} else {
MOMN3 = Byte.MIN_VALUE;
}
}

protected final void initMOMN4(String s) {
if (!s.trim().isEmpty()) {
MOMN4 = Byte.parseByte(s);
} else {
MOMN4 = Byte.MIN_VALUE;
}
}

protected final void initMOMN5(String s) {
if (!s.trim().isEmpty()) {
MOMN5 = Byte.parseByte(s);
} else {
MOMN5 = Byte.MIN_VALUE;
}
}

protected final void initMOOS3(String s) {
if (!s.trim().isEmpty()) {
MOOS3 = Double.parseDouble(s);
} else {
MOOS3 = Double.NaN;
}
}

protected final void initMOOS4(String s) {
if (!s.trim().isEmpty()) {
MOOS4 = Double.parseDouble(s);
} else {
MOOS4 = Double.NaN;
}
}

protected final void initMOOS5(String s) {
if (!s.trim().isEmpty()) {
MOOS5 = Double.parseDouble(s);
} else {
MOOS5 = Double.NaN;
}
}

protected final void initMOYR3(String s) {
if (!s.trim().isEmpty()) {
MOYR3 = Byte.parseByte(s);
} else {
MOYR3 = Byte.MIN_VALUE;
}
}

protected final void initMOYR4(String s) {
if (!s.trim().isEmpty()) {
MOYR4 = Byte.parseByte(s);
} else {
MOYR4 = Byte.MIN_VALUE;
}
}

protected final void initMOYR5(String s) {
if (!s.trim().isEmpty()) {
MOYR5 = Byte.parseByte(s);
} else {
MOYR5 = Byte.MIN_VALUE;
}
}

protected final void initNSLBNK4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
NSLBNK4 = false;
} else {
NSLBNK4 = true;
}
}
}

protected final void initNSLBNK5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
NSLBNK5 = false;
} else {
NSLBNK5 = true;
}
}
}

protected final void initNSLC4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
NSLC4 = false;
} else {
NSLC4 = true;
}
}
}

protected final void initNSLC5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
NSLC5 = false;
} else {
NSLC5 = true;
}
}
}

protected final void initNSSEC(String s) {
if (!s.trim().isEmpty()) {
NSSEC = Double.parseDouble(s);
} else {
NSSEC = Double.NaN;
}
}

protected final void initNWHP(String s) {
if (!s.trim().isEmpty()) {
NWHP = Byte.parseByte(s);
} else {
NWHP = Byte.MIN_VALUE;
}
}

protected final void initNWHPNO(String s) {
if (!s.trim().isEmpty()) {
NWHPNO = Byte.parseByte(s);
} else {
NWHPNO = Byte.MIN_VALUE;
}
}

protected final void initNWHPVAL1(String s) {
if (!s.trim().isEmpty()) {
NWHPVAL1 = Short.parseShort(s);
} else {
NWHPVAL1 = Short.MIN_VALUE;
}
}

protected final void initNWHPVAL2(String s) {
if (!s.trim().isEmpty()) {
NWHPVAL2 = Short.parseShort(s);
} else {
NWHPVAL2 = Short.MIN_VALUE;
}
}

protected final void initNWHPVAL3(String s) {
if (!s.trim().isEmpty()) {
NWHPVAL3 = Short.parseShort(s);
} else {
NWHPVAL3 = Short.MIN_VALUE;
}
}

protected final void initOIGGT(String s) {
if (!s.trim().isEmpty()) {
OIGGT = Short.parseShort(s);
} else {
OIGGT = Short.MIN_VALUE;
}
}

protected final void initOIGRR(String s) {
if (!s.trim().isEmpty()) {
OIGRR = Short.parseShort(s);
} else {
OIGRR = Short.MIN_VALUE;
}
}

protected final void initOIMPRS7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OIMPRS7 = false;
} else {
OIMPRS7 = true;
}
}
}

protected final void initOIMPRS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OIMPRS8 = false;
} else {
OIMPRS8 = true;
}
}
}

protected final void initOIMPRS9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OIMPRS9 = false;
} else {
OIMPRS9 = true;
}
}
}

protected final void initONOSAVE7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ONOSAVE7 = false;
} else {
ONOSAVE7 = true;
}
}
}

protected final void initONOSAVE8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ONOSAVE8 = false;
} else {
ONOSAVE8 = true;
}
}
}

protected final void initONOSAVE9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ONOSAVE9 = false;
} else {
ONOSAVE9 = true;
}
}
}

protected final void initOPENSAV(String s) {
if (!s.trim().isEmpty()) {
OPENSAV = Byte.parseByte(s);
} else {
OPENSAV = Byte.MIN_VALUE;
}
}

protected final void initORUNDO09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ORUNDO09 = false;
} else {
ORUNDO09 = true;
}
}
}

protected final void initORUNDO10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ORUNDO10 = false;
} else {
ORUNDO10 = true;
}
}
}

protected final void initORUNDO11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ORUNDO11 = false;
} else {
ORUNDO11 = true;
}
}
}

protected final void initOSAFERE2(String s) {
if (!s.trim().isEmpty()) {
OSAFERE2 = Byte.parseByte(s);
} else {
OSAFERE2 = Byte.MIN_VALUE;
}
}

protected final void initOSAFERET(String s) {
if (!s.trim().isEmpty()) {
OSAFERET = Byte.parseByte(s);
} else {
OSAFERET = Byte.MIN_VALUE;
}
}

protected final void initOSAVA(String s) {
if (!s.trim().isEmpty()) {
OSAVA = Byte.parseByte(s);
} else {
OSAVA = Byte.MIN_VALUE;
}
}

protected final void initOSAVB(String s) {
if (!s.trim().isEmpty()) {
OSAVB = Byte.parseByte(s);
} else {
OSAVB = Byte.MIN_VALUE;
}
}

protected final void initOSAVC(String s) {
if (!s.trim().isEmpty()) {
OSAVC = Byte.parseByte(s);
} else {
OSAVC = Byte.MIN_VALUE;
}
}

protected final void initOSLBNK4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
OSLBNK4 = false;
} else {
OSLBNK4 = true;
}
}
}

protected final void initOSLBNK5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
OSLBNK5 = false;
} else {
OSLBNK5 = true;
}
}
}

protected final void initOWHYSAV01(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV01 = Byte.parseByte(s);
} else {
OWHYSAV01 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV02(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV02 = Byte.parseByte(s);
} else {
OWHYSAV02 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV03(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV03 = Byte.parseByte(s);
} else {
OWHYSAV03 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV04(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV04 = Byte.parseByte(s);
} else {
OWHYSAV04 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV05(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV05 = Byte.parseByte(s);
} else {
OWHYSAV05 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV06(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV06 = Byte.parseByte(s);
} else {
OWHYSAV06 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV07(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV07 = Byte.parseByte(s);
} else {
OWHYSAV07 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV08(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV08 = Byte.parseByte(s);
} else {
OWHYSAV08 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV09(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV09 = Byte.parseByte(s);
} else {
OWHYSAV09 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV10(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV10 = Byte.parseByte(s);
} else {
OWHYSAV10 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OWHYSAV11 = false;
} else {
OWHYSAV11 = true;
}
}
}

protected final void initOWRSRS08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OWRSRS08 = false;
} else {
OWRSRS08 = true;
}
}
}

protected final void initOWRSRS09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OWRSRS09 = false;
} else {
OWRSRS09 = true;
}
}
}

protected final void initOWRSRS10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
OWRSRS10 = false;
} else {
OWRSRS10 = true;
}
}
}

protected final void initPADDFUT(String s) {
if (!s.trim().isEmpty()) {
PADDFUT = Byte.parseByte(s);
} else {
PADDFUT = Byte.MIN_VALUE;
}
}

protected final void initPADDFUT2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PADDFUT2 = false;
} else {
PADDFUT2 = true;
}
}
}

protected final void initPAVCAM1(String s) {
if (!s.trim().isEmpty()) {
PAVCAM1 = Short.parseShort(s);
} else {
PAVCAM1 = Short.MIN_VALUE;
}
}

protected final void initPAVCAM2(String s) {
if (!s.trim().isEmpty()) {
PAVCAM2 = Short.parseShort(s);
} else {
PAVCAM2 = Short.MIN_VALUE;
}
}

protected final void initPAVCFG1(String s) {
if (!s.trim().isEmpty()) {
PAVCFG1 = Byte.parseByte(s);
} else {
PAVCFG1 = Byte.MIN_VALUE;
}
}

protected final void initPAVCFG2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PAVCFG2 = false;
} else {
PAVCFG2 = true;
}
}
}

protected final void initPAVCFR1(String s) {
if (!s.trim().isEmpty()) {
PAVCFR1 = Double.parseDouble(s);
} else {
PAVCFR1 = Double.NaN;
}
}

protected final void initPAVCFR2(String s) {
if (!s.trim().isEmpty()) {
PAVCFR2 = Byte.parseByte(s);
} else {
PAVCFR2 = Byte.MIN_VALUE;
}
}

protected final void initPAVCH1(String s) {
if (!s.trim().isEmpty()) {
PAVCH1 = Byte.parseByte(s);
} else {
PAVCH1 = Byte.MIN_VALUE;
}
}

protected final void initPAVCH2(String s) {
if (!s.trim().isEmpty()) {
PAVCH2 = Byte.parseByte(s);
} else {
PAVCH2 = Byte.MIN_VALUE;
}
}

protected final void initPAVCIN1(String s) {
if (!s.trim().isEmpty()) {
PAVCIN1 = Byte.parseByte(s);
} else {
PAVCIN1 = Byte.MIN_VALUE;
}
}

protected final void initPAVCIN2(String s) {
if (!s.trim().isEmpty()) {
PAVCIN2 = Byte.parseByte(s);
} else {
PAVCIN2 = Byte.MIN_VALUE;
}
}

protected final void initPAVCPR1(String s) {
if (!s.trim().isEmpty()) {
PAVCPR1 = Byte.parseByte(s);
} else {
PAVCPR1 = Byte.MIN_VALUE;
}
}

protected final void initPAVCPR2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PAVCPR2 = false;
} else {
PAVCPR2 = true;
}
}
}

protected final void initPDCVAL3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PDCVAL3 = false;
} else {
PDCVAL3 = true;
}
}
}

protected final void initPEMFIN(String s) {
if (!s.trim().isEmpty()) {
PEMFIN = Byte.parseByte(s);
} else {
PEMFIN = Byte.MIN_VALUE;
}
}

protected final void initPESAME_I(String s) {
if (!s.trim().isEmpty()) {
PESAME_I = Byte.parseByte(s);
} else {
PESAME_I = Byte.MIN_VALUE;
}
}

protected final void initPESAME_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PESAME_IFLAG = false;
} else {
PESAME_IFLAG = true;
}
}
}

protected final void initPEVERC_PEVERNC__SFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 1) {
PEVERC_PEVERNC__SFLAG = false;
} else {
PEVERC_PEVERNC__SFLAG = true;
}
}
}

protected final void initPEWYNO01(String s) {
if (!s.trim().isEmpty()) {
PEWYNO01 = Byte.parseByte(s);
} else {
PEWYNO01 = Byte.MIN_VALUE;
}
}

protected final void initPEWYNO02(String s) {
if (!s.trim().isEmpty()) {
PEWYNO02 = Byte.parseByte(s);
} else {
PEWYNO02 = Byte.MIN_VALUE;
}
}

protected final void initPEWYNO03(String s) {
if (!s.trim().isEmpty()) {
PEWYNO03 = Byte.parseByte(s);
} else {
PEWYNO03 = Byte.MIN_VALUE;
}
}

protected final void initPEWYNO04(String s) {
if (!s.trim().isEmpty()) {
PEWYNO04 = Byte.parseByte(s);
} else {
PEWYNO04 = Byte.MIN_VALUE;
}
}

protected final void initPEWYNO05(String s) {
if (!s.trim().isEmpty()) {
PEWYNO05 = Byte.parseByte(s);
} else {
PEWYNO05 = Byte.MIN_VALUE;
}
}

protected final void initPEWYNO06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PEWYNO06 = false;
} else {
PEWYNO06 = true;
}
}
}

protected final void initPEWYNO07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PEWYNO07 = false;
} else {
PEWYNO07 = true;
}
}
}

protected final void initPEWYNO08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PEWYNO08 = false;
} else {
PEWYNO08 = true;
}
}
}

protected final void initPEWYNO09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PEWYNO09 = false;
} else {
PEWYNO09 = true;
}
}
}

protected final void initPEWYNO10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PEWYNO10 = false;
} else {
PEWYNO10 = true;
}
}
}

protected final void initPEWYNO11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PEWYNO11 = false;
} else {
PEWYNO11 = true;
}
}
}

protected final void initPFANEH3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEH3 = false;
} else {
PFANEH3 = true;
}
}
}

protected final void initPFANEH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEH5 = false;
} else {
PFANEH5 = true;
}
}
}

protected final void initPFANEH6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEH6 = false;
} else {
PFANEH6 = true;
}
}
}

protected final void initPFANEXM1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXM1 = false;
} else {
PFANEXM1 = true;
}
}
}

protected final void initPFANEXM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXM2 = false;
} else {
PFANEXM2 = true;
}
}
}

protected final void initPFANEXM3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXM3 = false;
} else {
PFANEXM3 = true;
}
}
}

protected final void initPFANEXM4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXM4 = false;
} else {
PFANEXM4 = true;
}
}
}

protected final void initPFANEXM5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXM5 = false;
} else {
PFANEXM5 = true;
}
}
}

protected final void initPFANEXM6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXM6 = false;
} else {
PFANEXM6 = true;
}
}
}

protected final void initPFANEXY1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXY1 = false;
} else {
PFANEXY1 = true;
}
}
}

protected final void initPFANEXY2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXY2 = false;
} else {
PFANEXY2 = true;
}
}
}

protected final void initPFANEXY3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXY3 = false;
} else {
PFANEXY3 = true;
}
}
}

protected final void initPFANEXY4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXY4 = false;
} else {
PFANEXY4 = true;
}
}
}

protected final void initPFANEXY5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXY5 = false;
} else {
PFANEXY5 = true;
}
}
}

protected final void initPFANEXY6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANEXY6 = false;
} else {
PFANEXY6 = true;
}
}
}

protected final void initPFANGA3(String s) {
if (!s.trim().isEmpty()) {
PFANGA3 = Byte.parseByte(s);
} else {
PFANGA3 = Byte.MIN_VALUE;
}
}

protected final void initPFANGA5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANGA5 = false;
} else {
PFANGA5 = true;
}
}
}

protected final void initPFANGA6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANGA6 = false;
} else {
PFANGA6 = true;
}
}
}

protected final void initPFANIF3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANIF3 = false;
} else {
PFANIF3 = true;
}
}
}

protected final void initPFANIF5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANIF5 = false;
} else {
PFANIF5 = true;
}
}
}

protected final void initPFANIF6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANIF6 = false;
} else {
PFANIF6 = true;
}
}
}

protected final void initPFANJT3(String s) {
if (!s.trim().isEmpty()) {
PFANJT3 = Byte.parseByte(s);
} else {
PFANJT3 = Byte.MIN_VALUE;
}
}

protected final void initPFANJT5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANJT5 = false;
} else {
PFANJT5 = true;
}
}
}

protected final void initPFANJT6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANJT6 = false;
} else {
PFANJT6 = true;
}
}
}

protected final void initPFANLM1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANLM1 = false;
} else {
PFANLM1 = true;
}
}
}

protected final void initPFANLM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANLM2 = false;
} else {
PFANLM2 = true;
}
}
}

protected final void initPFANLM3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANLM3 = false;
} else {
PFANLM3 = true;
}
}
}

protected final void initPFANLM4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANLM4 = false;
} else {
PFANLM4 = true;
}
}
}

protected final void initPFANLM5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANLM5 = false;
} else {
PFANLM5 = true;
}
}
}

protected final void initPFANLM6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANLM6 = false;
} else {
PFANLM6 = true;
}
}
}

protected final void initPFANN10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN10 = false;
} else {
PFANN10 = true;
}
}
}

protected final void initPFANN11(String s) {
if (!s.trim().isEmpty()) {
PFANN11 = Byte.parseByte(s);
} else {
PFANN11 = Byte.MIN_VALUE;
}
}

protected final void initPFANN12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN12 = false;
} else {
PFANN12 = true;
}
}
}

protected final void initPFANN13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN13 = false;
} else {
PFANN13 = true;
}
}
}

protected final void initPFANN14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN14 = false;
} else {
PFANN14 = true;
}
}
}

protected final void initPFANN15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN15 = false;
} else {
PFANN15 = true;
}
}
}

protected final void initPFANN17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN17 = false;
} else {
PFANN17 = true;
}
}
}

protected final void initPFANN18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN18 = false;
} else {
PFANN18 = true;
}
}
}

protected final void initPFANN19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN19 = false;
} else {
PFANN19 = true;
}
}
}

protected final void initPFANN2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN2 = false;
} else {
PFANN2 = true;
}
}
}

protected final void initPFANN20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN20 = false;
} else {
PFANN20 = true;
}
}
}

protected final void initPFANN21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN21 = false;
} else {
PFANN21 = true;
}
}
}

protected final void initPFANN22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN22 = false;
} else {
PFANN22 = true;
}
}
}

protected final void initPFANN23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN23 = false;
} else {
PFANN23 = true;
}
}
}

protected final void initPFANN24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN24 = false;
} else {
PFANN24 = true;
}
}
}

protected final void initPFANN25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN25 = false;
} else {
PFANN25 = true;
}
}
}

protected final void initPFANN26(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN26 = false;
} else {
PFANN26 = true;
}
}
}

protected final void initPFANN27(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN27 = false;
} else {
PFANN27 = true;
}
}
}

protected final void initPFANN28(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN28 = false;
} else {
PFANN28 = true;
}
}
}

protected final void initPFANN29(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN29 = false;
} else {
PFANN29 = true;
}
}
}

protected final void initPFANN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN3 = false;
} else {
PFANN3 = true;
}
}
}

protected final void initPFANN30(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN30 = false;
} else {
PFANN30 = true;
}
}
}

protected final void initPFANN4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN4 = false;
} else {
PFANN4 = true;
}
}
}

protected final void initPFANN5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN5 = false;
} else {
PFANN5 = true;
}
}
}

protected final void initPFANN7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN7 = false;
} else {
PFANN7 = true;
}
}
}

protected final void initPFANN8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN8 = false;
} else {
PFANN8 = true;
}
}
}

protected final void initPFANN9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANN9 = false;
} else {
PFANN9 = true;
}
}
}

protected final void initPFANVB1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB1 = false;
} else {
PFANVB1 = true;
}
}
}

protected final void initPFANVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB2 = false;
} else {
PFANVB2 = true;
}
}
}

protected final void initPFANVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB3 = false;
} else {
PFANVB3 = true;
}
}
}

protected final void initPFANVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB4 = false;
} else {
PFANVB4 = true;
}
}
}

protected final void initPFANVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB5 = false;
} else {
PFANVB5 = true;
}
}
}

protected final void initPFANVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB6 = false;
} else {
PFANVB6 = true;
}
}
}

protected final void initPFANVI1(String s) {
if (!s.trim().isEmpty()) {
PFANVI1 = Short.parseShort(s);
} else {
PFANVI1 = Short.MIN_VALUE;
}
}

protected final void initPFANVI2(String s) {
if (!s.trim().isEmpty()) {
PFANVI2 = Short.parseShort(s);
} else {
PFANVI2 = Short.MIN_VALUE;
}
}

protected final void initPFANVI3(String s) {
if (!s.trim().isEmpty()) {
PFANVI3 = Short.parseShort(s);
} else {
PFANVI3 = Short.MIN_VALUE;
}
}

protected final void initPFANVI4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVI4 = false;
} else {
PFANVI4 = true;
}
}
}

protected final void initPFANVI5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVI5 = false;
} else {
PFANVI5 = true;
}
}
}

protected final void initPFANVI6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVI6 = false;
} else {
PFANVI6 = true;
}
}
}

protected final void initPFBEG1(String s) {
if (!s.trim().isEmpty()) {
PFBEG1 = Short.parseShort(s);
} else {
PFBEG1 = Short.MIN_VALUE;
}
}

protected final void initPFBEG2(String s) {
if (!s.trim().isEmpty()) {
PFBEG2 = Short.parseShort(s);
} else {
PFBEG2 = Short.MIN_VALUE;
}
}

protected final void initPFBEG3(String s) {
if (!s.trim().isEmpty()) {
PFBEG3 = Short.parseShort(s);
} else {
PFBEG3 = Short.MIN_VALUE;
}
}

protected final void initPFBEG4(String s) {
if (!s.trim().isEmpty()) {
PFBEG4 = Short.parseShort(s);
} else {
PFBEG4 = Short.MIN_VALUE;
}
}

protected final void initPFBEG5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFBEG5 = false;
} else {
PFBEG5 = true;
}
}
}

protected final void initPFBEG6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFBEG6 = false;
} else {
PFBEG6 = true;
}
}
}

protected final void initPFCASH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFCASH5 = false;
} else {
PFCASH5 = true;
}
}
}

protected final void initPFCASH5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFCASH5_I = false;
} else {
PFCASH5_I = true;
}
}
}

protected final void initPFCASH5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFCASH5_IFLAG = false;
} else {
PFCASH5_IFLAG = true;
}
}
}

protected final void initPFCASH6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFCASH6 = false;
} else {
PFCASH6 = true;
}
}
}

protected final void initPFCASH6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFCASH6_I = false;
} else {
PFCASH6_I = true;
}
}
}

protected final void initPFCASH6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFCASH6_IFLAG = false;
} else {
PFCASH6_IFLAG = true;
}
}
}

protected final void initPFDDV4(String s) {
if (!s.trim().isEmpty()) {
PFDDV4 = Integer.parseInt(s);
} else {
PFDDV4 = Integer.MIN_VALUE;
}
}

protected final void initPFDDV5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDDV5 = false;
} else {
PFDDV5 = true;
}
}
}

protected final void initPFDDV6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDDV6 = false;
} else {
PFDDV6 = true;
}
}
}

protected final void initPFDDVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDDVB4 = false;
} else {
PFDDVB4 = true;
}
}
}

protected final void initPFDDVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDDVB5 = false;
} else {
PFDDVB5 = true;
}
}
}

protected final void initPFDDVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDDVB6 = false;
} else {
PFDDVB6 = true;
}
}
}

protected final void initPFDRAW4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRAW4 = false;
} else {
PFDRAW4 = true;
}
}
}

protected final void initPFDRAW5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRAW5 = false;
} else {
PFDRAW5 = true;
}
}
}

protected final void initPFDRAW6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRAW6 = false;
} else {
PFDRAW6 = true;
}
}
}

protected final void initPFDRA___W3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRA___W3 = false;
} else {
PFDRA___W3 = true;
}
}
}

protected final void initPFDRINC2(String s) {
if (!s.trim().isEmpty()) {
PFDRINC2 = Short.parseShort(s);
} else {
PFDRINC2 = Short.MIN_VALUE;
}
}

protected final void initPFDRINC3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINC3 = false;
} else {
PFDRINC3 = true;
}
}
}

protected final void initPFDRINC4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINC4 = false;
} else {
PFDRINC4 = true;
}
}
}

protected final void initPFDRINC5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINC5 = false;
} else {
PFDRINC5 = true;
}
}
}

protected final void initPFDRINC6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINC6 = false;
} else {
PFDRINC6 = true;
}
}
}

protected final void initPFDRINCB1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -9) {
PFDRINCB1 = false;
} else {
PFDRINCB1 = true;
}
}
}

protected final void initPFDRINCB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINCB2 = false;
} else {
PFDRINCB2 = true;
}
}
}

protected final void initPFDRINCB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINCB3 = false;
} else {
PFDRINCB3 = true;
}
}
}

protected final void initPFDRINCB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINCB4 = false;
} else {
PFDRINCB4 = true;
}
}
}

protected final void initPFDRINCB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINCB5 = false;
} else {
PFDRINCB5 = true;
}
}
}

protected final void initPFDRINCB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRINCB6 = false;
} else {
PFDRINCB6 = true;
}
}
}

protected final void initPFDRVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVB2 = false;
} else {
PFDRVB2 = true;
}
}
}

protected final void initPFDRVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVB3 = false;
} else {
PFDRVB3 = true;
}
}
}

protected final void initPFDRVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVB4 = false;
} else {
PFDRVB4 = true;
}
}
}

protected final void initPFDRVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVB5 = false;
} else {
PFDRVB5 = true;
}
}
}

protected final void initPFDRVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVB6 = false;
} else {
PFDRVB6 = true;
}
}
}

protected final void initPFDRVI2(String s) {
if (!s.trim().isEmpty()) {
PFDRVI2 = Integer.parseInt(s);
} else {
PFDRVI2 = Integer.MIN_VALUE;
}
}

protected final void initPFDRVI3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVI3 = false;
} else {
PFDRVI3 = true;
}
}
}

protected final void initPFDRVI4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVI4 = false;
} else {
PFDRVI4 = true;
}
}
}

protected final void initPFDRVI5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVI5 = false;
} else {
PFDRVI5 = true;
}
}
}

protected final void initPFDRVI6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFDRVI6 = false;
} else {
PFDRVI6 = true;
}
}
}

protected final void initPFEND1(String s) {
if (!s.trim().isEmpty()) {
PFEND1 = Short.parseShort(s);
} else {
PFEND1 = Short.MIN_VALUE;
}
}

protected final void initPFEND2(String s) {
if (!s.trim().isEmpty()) {
PFEND2 = Short.parseShort(s);
} else {
PFEND2 = Short.MIN_VALUE;
}
}

protected final void initPFEND3(String s) {
if (!s.trim().isEmpty()) {
PFEND3 = Short.parseShort(s);
} else {
PFEND3 = Short.MIN_VALUE;
}
}

protected final void initPFEND4(String s) {
if (!s.trim().isEmpty()) {
PFEND4 = Short.parseShort(s);
} else {
PFEND4 = Short.MIN_VALUE;
}
}

protected final void initPFEND5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFEND5 = false;
} else {
PFEND5 = true;
}
}
}

protected final void initPFEND6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFEND6 = false;
} else {
PFEND6 = true;
}
}
}

protected final void initPFFAAG3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAAG3 = false;
} else {
PFFAAG3 = true;
}
}
}

protected final void initPFFAAG4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAAG4 = false;
} else {
PFFAAG4 = true;
}
}
}

protected final void initPFFAAG5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAAG5 = false;
} else {
PFFAAG5 = true;
}
}
}

protected final void initPFFAAG6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAAG6 = false;
} else {
PFFAAG6 = true;
}
}
}

protected final void initPFFAN10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN10 = false;
} else {
PFFAN10 = true;
}
}
}

protected final void initPFFAN12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN12 = false;
} else {
PFFAN12 = true;
}
}
}

protected final void initPFFAN13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN13 = false;
} else {
PFFAN13 = true;
}
}
}

protected final void initPFFAN14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN14 = false;
} else {
PFFAN14 = true;
}
}
}

protected final void initPFFAN15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN15 = false;
} else {
PFFAN15 = true;
}
}
}

protected final void initPFFAN17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN17 = false;
} else {
PFFAN17 = true;
}
}
}

protected final void initPFFAN18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN18 = false;
} else {
PFFAN18 = true;
}
}
}

protected final void initPFFAN19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN19 = false;
} else {
PFFAN19 = true;
}
}
}

protected final void initPFFAN20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN20 = false;
} else {
PFFAN20 = true;
}
}
}

protected final void initPFFAN21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN21 = false;
} else {
PFFAN21 = true;
}
}
}

protected final void initPFFAN22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN22 = false;
} else {
PFFAN22 = true;
}
}
}

protected final void initPFFAN23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN23 = false;
} else {
PFFAN23 = true;
}
}
}

protected final void initPFFAN24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN24 = false;
} else {
PFFAN24 = true;
}
}
}

protected final void initPFFAN25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN25 = false;
} else {
PFFAN25 = true;
}
}
}

protected final void initPFFAN26(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN26 = false;
} else {
PFFAN26 = true;
}
}
}

protected final void initPFFAN27(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN27 = false;
} else {
PFFAN27 = true;
}
}
}

protected final void initPFFAN28(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN28 = false;
} else {
PFFAN28 = true;
}
}
}

protected final void initPFFAN29(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN29 = false;
} else {
PFFAN29 = true;
}
}
}

protected final void initPFFAN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN3 = false;
} else {
PFFAN3 = true;
}
}
}

protected final void initPFFAN30(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN30 = false;
} else {
PFFAN30 = true;
}
}
}

protected final void initPFFAN4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN4 = false;
} else {
PFFAN4 = true;
}
}
}

protected final void initPFFAN5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN5 = false;
} else {
PFFAN5 = true;
}
}
}

protected final void initPFFAN7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN7 = false;
} else {
PFFAN7 = true;
}
}
}

protected final void initPFFAN8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN8 = false;
} else {
PFFAN8 = true;
}
}
}

protected final void initPFFAN9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAN9 = false;
} else {
PFFAN9 = true;
}
}
}

protected final void initPFFAWH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH10 = false;
} else {
PFFAWH10 = true;
}
}
}

protected final void initPFFAWH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH11 = false;
} else {
PFFAWH11 = true;
}
}
}

protected final void initPFFAWH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH12 = false;
} else {
PFFAWH12 = true;
}
}
}

protected final void initPFFAWH13(String s) {
if (!s.trim().isEmpty()) {
PFFAWH13 = Byte.parseByte(s);
} else {
PFFAWH13 = Byte.MIN_VALUE;
}
}

protected final void initPFFAWH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH14 = false;
} else {
PFFAWH14 = true;
}
}
}

protected final void initPFFAWH15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH15 = false;
} else {
PFFAWH15 = true;
}
}
}

protected final void initPFFAWH17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH17 = false;
} else {
PFFAWH17 = true;
}
}
}

protected final void initPFFAWH18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH18 = false;
} else {
PFFAWH18 = true;
}
}
}

protected final void initPFFAWH19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH19 = false;
} else {
PFFAWH19 = true;
}
}
}

protected final void initPFFAWH2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH2 = false;
} else {
PFFAWH2 = true;
}
}
}

protected final void initPFFAWH20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH20 = false;
} else {
PFFAWH20 = true;
}
}
}

protected final void initPFFAWH21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH21 = false;
} else {
PFFAWH21 = true;
}
}
}

protected final void initPFFAWH22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH22 = false;
} else {
PFFAWH22 = true;
}
}
}

protected final void initPFFAWH23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH23 = false;
} else {
PFFAWH23 = true;
}
}
}

protected final void initPFFAWH24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH24 = false;
} else {
PFFAWH24 = true;
}
}
}

protected final void initPFFAWH25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH25 = false;
} else {
PFFAWH25 = true;
}
}
}

protected final void initPFFAWH26(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH26 = false;
} else {
PFFAWH26 = true;
}
}
}

protected final void initPFFAWH27(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH27 = false;
} else {
PFFAWH27 = true;
}
}
}

protected final void initPFFAWH28(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH28 = false;
} else {
PFFAWH28 = true;
}
}
}

protected final void initPFFAWH29(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH29 = false;
} else {
PFFAWH29 = true;
}
}
}

protected final void initPFFAWH3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH3 = false;
} else {
PFFAWH3 = true;
}
}
}

protected final void initPFFAWH30(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH30 = false;
} else {
PFFAWH30 = true;
}
}
}

protected final void initPFFAWH31(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH31 = false;
} else {
PFFAWH31 = true;
}
}
}

protected final void initPFFAWH32(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH32 = false;
} else {
PFFAWH32 = true;
}
}
}

protected final void initPFFAWH33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH33 = false;
} else {
PFFAWH33 = true;
}
}
}

protected final void initPFFAWH34(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH34 = false;
} else {
PFFAWH34 = true;
}
}
}

protected final void initPFFAWH35(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH35 = false;
} else {
PFFAWH35 = true;
}
}
}

protected final void initPFFAWH36(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH36 = false;
} else {
PFFAWH36 = true;
}
}
}

protected final void initPFFAWH4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH4 = false;
} else {
PFFAWH4 = true;
}
}
}

protected final void initPFFAWH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH5 = false;
} else {
PFFAWH5 = true;
}
}
}

protected final void initPFFAWH7(String s) {
if (!s.trim().isEmpty()) {
PFFAWH7 = Byte.parseByte(s);
} else {
PFFAWH7 = Byte.MIN_VALUE;
}
}

protected final void initPFFAWH8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH8 = false;
} else {
PFFAWH8 = true;
}
}
}

protected final void initPFFAWH9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFFAWH9 = false;
} else {
PFFAWH9 = true;
}
}
}

protected final void initPFINCA6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFINCA6_IFLAG = false;
} else {
PFINCA6_IFLAG = true;
}
}
}

protected final void initPFLMUS5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMUS5 = false;
} else {
PFLMUS5 = true;
}
}
}

protected final void initPFLMUS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMUS6 = false;
} else {
PFLMUS6 = true;
}
}
}

protected final void initPFLMV5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMV5 = false;
} else {
PFLMV5 = true;
}
}
}

protected final void initPFLMV5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMV5_I = false;
} else {
PFLMV5_I = true;
}
}
}

protected final void initPFLMV5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFLMV5_IFLAG = false;
} else {
PFLMV5_IFLAG = true;
}
}
}

protected final void initPFLMV6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMV6_I = false;
} else {
PFLMV6_I = true;
}
}
}

protected final void initPFLMV6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFLMV6_IFLAG = false;
} else {
PFLMV6_IFLAG = true;
}
}
}

protected final void initPFLMVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMVB4 = false;
} else {
PFLMVB4 = true;
}
}
}

protected final void initPFLMVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMVB5 = false;
} else {
PFLMVB5 = true;
}
}
}

protected final void initPFLMVB5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMVB5_I = false;
} else {
PFLMVB5_I = true;
}
}
}

protected final void initPFLMVB5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFLMVB5_IFLAG = false;
} else {
PFLMVB5_IFLAG = true;
}
}
}

protected final void initPFLMVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMVB6 = false;
} else {
PFLMVB6 = true;
}
}
}

protected final void initPFLMVB6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLMVB6_I = false;
} else {
PFLMVB6_I = true;
}
}
}

protected final void initPFLMVB6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFLMVB6_IFLAG = false;
} else {
PFLMVB6_IFLAG = true;
}
}
}

protected final void initPFLUMALL5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLUMALL5 = false;
} else {
PFLUMALL5 = true;
}
}
}

protected final void initPFLUMALL5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLUMALL5_I = false;
} else {
PFLUMALL5_I = true;
}
}
}

protected final void initPFLUMALL5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFLUMALL5_IFLAG = false;
} else {
PFLUMALL5_IFLAG = true;
}
}
}

protected final void initPFLUMALL6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLUMALL6 = false;
} else {
PFLUMALL6 = true;
}
}
}

protected final void initPFLUMALL6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFLUMALL6_I = false;
} else {
PFLUMALL6_I = true;
}
}
}

protected final void initPFLUMALL6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFLUMALL6_IFLAG = false;
} else {
PFLUMALL6_IFLAG = true;
}
}
}

protected final void initPFPENVB1(String s) {
if (!s.trim().isEmpty()) {
PFPENVB1 = Byte.parseByte(s);
} else {
PFPENVB1 = Byte.MIN_VALUE;
}
}

protected final void initPFPENVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB2 = false;
} else {
PFPENVB2 = true;
}
}
}

protected final void initPFPENVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB3 = false;
} else {
PFPENVB3 = true;
}
}
}

protected final void initPFPENVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB4 = false;
} else {
PFPENVB4 = true;
}
}
}

protected final void initPFPENVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB5 = false;
} else {
PFPENVB5 = true;
}
}
}

protected final void initPFPENVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB6 = false;
} else {
PFPENVB6 = true;
}
}
}

protected final void initPFPENVI1(String s) {
if (!s.trim().isEmpty()) {
PFPENVI1 = Integer.parseInt(s);
} else {
PFPENVI1 = Integer.MIN_VALUE;
}
}

protected final void initPFPENVI2(String s) {
if (!s.trim().isEmpty()) {
PFPENVI2 = Short.parseShort(s);
} else {
PFPENVI2 = Short.MIN_VALUE;
}
}

protected final void initPFPENVI3(String s) {
if (!s.trim().isEmpty()) {
PFPENVI3 = Short.parseShort(s);
} else {
PFPENVI3 = Short.MIN_VALUE;
}
}

protected final void initPFPENVI4(String s) {
if (!s.trim().isEmpty()) {
PFPENVI4 = Short.parseShort(s);
} else {
PFPENVI4 = Short.MIN_VALUE;
}
}

protected final void initPFPENVI5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVI5 = false;
} else {
PFPENVI5 = true;
}
}
}

protected final void initPFPENVI6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVI6 = false;
} else {
PFPENVI6 = true;
}
}
}

protected final void initPFREM5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFREM5 = false;
} else {
PFREM5 = true;
}
}
}

protected final void initPFREM5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFREM5_I = false;
} else {
PFREM5_I = true;
}
}
}

protected final void initPFREM5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFREM5_IFLAG = false;
} else {
PFREM5_IFLAG = true;
}
}
}

protected final void initPFREM6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFREM6 = false;
} else {
PFREM6 = true;
}
}
}

protected final void initPFREM6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFREM6_I = false;
} else {
PFREM6_I = true;
}
}
}

protected final void initPFREM6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
PFREM6_IFLAG = false;
} else {
PFREM6_IFLAG = true;
}
}
}

protected final void initPFSIPTY1(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY1 = Byte.parseByte(s);
} else {
PFSIPTY1 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY10(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY10 = Byte.parseByte(s);
} else {
PFSIPTY10 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY11 = false;
} else {
PFSIPTY11 = true;
}
}
}

protected final void initPFSIPTY12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY12 = false;
} else {
PFSIPTY12 = true;
}
}
}

protected final void initPFSIPTY13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY13 = false;
} else {
PFSIPTY13 = true;
}
}
}

protected final void initPFSIPTY14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY14 = false;
} else {
PFSIPTY14 = true;
}
}
}

protected final void initPFSIPTY15(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY15 = Byte.parseByte(s);
} else {
PFSIPTY15 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY16 = false;
} else {
PFSIPTY16 = true;
}
}
}

protected final void initPFSIPTY17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY17 = false;
} else {
PFSIPTY17 = true;
}
}
}

protected final void initPFSIPTY18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY18 = false;
} else {
PFSIPTY18 = true;
}
}
}

protected final void initPFSIPTY19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY19 = false;
} else {
PFSIPTY19 = true;
}
}
}

protected final void initPFSIPTY2(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY2 = Byte.parseByte(s);
} else {
PFSIPTY2 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY20 = false;
} else {
PFSIPTY20 = true;
}
}
}

protected final void initPFSIPTY21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY21 = false;
} else {
PFSIPTY21 = true;
}
}
}

protected final void initPFSIPTY22(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY22 = Byte.parseByte(s);
} else {
PFSIPTY22 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY23 = false;
} else {
PFSIPTY23 = true;
}
}
}

protected final void initPFSIPTY24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY24 = false;
} else {
PFSIPTY24 = true;
}
}
}

protected final void initPFSIPTY25(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY25 = false;
} else {
PFSIPTY25 = true;
}
}
}

protected final void initPFSIPTY26(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY26 = false;
} else {
PFSIPTY26 = true;
}
}
}

protected final void initPFSIPTY27(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY27 = false;
} else {
PFSIPTY27 = true;
}
}
}

protected final void initPFSIPTY28(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY28 = false;
} else {
PFSIPTY28 = true;
}
}
}

protected final void initPFSIPTY29(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY29 = false;
} else {
PFSIPTY29 = true;
}
}
}

protected final void initPFSIPTY3(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY3 = Byte.parseByte(s);
} else {
PFSIPTY3 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY30(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY30 = false;
} else {
PFSIPTY30 = true;
}
}
}

protected final void initPFSIPTY31(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY31 = false;
} else {
PFSIPTY31 = true;
}
}
}

protected final void initPFSIPTY32(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY32 = false;
} else {
PFSIPTY32 = true;
}
}
}

protected final void initPFSIPTY33(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY33 = false;
} else {
PFSIPTY33 = true;
}
}
}

protected final void initPFSIPTY34(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY34 = false;
} else {
PFSIPTY34 = true;
}
}
}

protected final void initPFSIPTY35(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY35 = false;
} else {
PFSIPTY35 = true;
}
}
}

protected final void initPFSIPTY36(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY36 = false;
} else {
PFSIPTY36 = true;
}
}
}

protected final void initPFSIPTY37(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY37 = false;
} else {
PFSIPTY37 = true;
}
}
}

protected final void initPFSIPTY38(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY38 = false;
} else {
PFSIPTY38 = true;
}
}
}

protected final void initPFSIPTY39(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY39 = false;
} else {
PFSIPTY39 = true;
}
}
}

protected final void initPFSIPTY4(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY4 = Byte.parseByte(s);
} else {
PFSIPTY4 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY40(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY40 = false;
} else {
PFSIPTY40 = true;
}
}
}

protected final void initPFSIPTY41(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY41 = false;
} else {
PFSIPTY41 = true;
}
}
}

protected final void initPFSIPTY42(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY42 = false;
} else {
PFSIPTY42 = true;
}
}
}

protected final void initPFSIPTY5(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY5 = Byte.parseByte(s);
} else {
PFSIPTY5 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY6(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY6 = Byte.parseByte(s);
} else {
PFSIPTY6 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFSIPTY7 = false;
} else {
PFSIPTY7 = true;
}
}
}

protected final void initPFSIPTY8(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY8 = Byte.parseByte(s);
} else {
PFSIPTY8 = Byte.MIN_VALUE;
}
}

protected final void initPFSIPTY9(String s) {
if (!s.trim().isEmpty()) {
PFSIPTY9 = Byte.parseByte(s);
} else {
PFSIPTY9 = Byte.MIN_VALUE;
}
}

protected final void initPIRREG(String s) {
if (!s.trim().isEmpty()) {
PIRREG = Short.parseShort(s);
} else {
PIRREG = Short.MIN_VALUE;
}
}

protected final void initPIRREG2(String s) {
if (!s.trim().isEmpty()) {
PIRREG2 = Short.parseShort(s);
} else {
PIRREG2 = Short.MIN_VALUE;
}
}

protected final void initPMORTC(String s) {
if (!s.trim().isEmpty()) {
PMORTC = Byte.parseByte(s);
} else {
PMORTC = Byte.MIN_VALUE;
}
}

protected final void initPNEWMEM(String s) {
if (!s.trim().isEmpty()) {
PNEWMEM = Byte.parseByte(s);
} else {
PNEWMEM = Byte.MIN_VALUE;
}
}

protected final void initPOADD5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POADD5 = false;
} else {
POADD5 = true;
}
}
}

protected final void initPOADD6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POADD6 = false;
} else {
POADD6 = true;
}
}
}

protected final void initPOANEH2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANEH2 = false;
} else {
POANEH2 = true;
}
}
}

protected final void initPOANEXM1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANEXM1 = false;
} else {
POANEXM1 = true;
}
}
}

protected final void initPOANEXM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANEXM2 = false;
} else {
POANEXM2 = true;
}
}
}

protected final void initPOANEXY1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANEXY1 = false;
} else {
POANEXY1 = true;
}
}
}

protected final void initPOANEXY2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANEXY2 = false;
} else {
POANEXY2 = true;
}
}
}

protected final void initPOANGA2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANGA2 = false;
} else {
POANGA2 = true;
}
}
}

protected final void initPOANIF2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANIF2 = false;
} else {
POANIF2 = true;
}
}
}

protected final void initPOANJT2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANJT2 = false;
} else {
POANJT2 = true;
}
}
}

protected final void initPOANLM1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANLM1 = false;
} else {
POANLM1 = true;
}
}
}

protected final void initPOANLM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANLM2 = false;
} else {
POANLM2 = true;
}
}
}

protected final void initPOANN2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANN2 = false;
} else {
POANN2 = true;
}
}
}

protected final void initPOANN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANN3 = false;
} else {
POANN3 = true;
}
}
}

protected final void initPOANN4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANN4 = false;
} else {
POANN4 = true;
}
}
}

protected final void initPOANN6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANN6 = false;
} else {
POANN6 = true;
}
}
}

protected final void initPOANN7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANN7 = false;
} else {
POANN7 = true;
}
}
}

protected final void initPOANN8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANN8 = false;
} else {
POANN8 = true;
}
}
}

protected final void initPOANVB(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANVB = false;
} else {
POANVB = true;
}
}
}

protected final void initPOANVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANVB2 = false;
} else {
POANVB2 = true;
}
}
}

protected final void initPOANVI1(String s) {
if (!s.trim().isEmpty()) {
POANVI1 = Short.parseShort(s);
} else {
POANVI1 = Short.MIN_VALUE;
}
}

protected final void initPOANVI2(String s) {
if (!s.trim().isEmpty()) {
POANVI2 = Short.parseShort(s);
} else {
POANVI2 = Short.MIN_VALUE;
}
}

protected final void initPOCNDRS1(String s) {
if (!s.trim().isEmpty()) {
POCNDRS1 = Byte.parseByte(s);
} else {
POCNDRS1 = Byte.MIN_VALUE;
}
}

protected final void initPOCNDRS10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS10 = false;
} else {
POCNDRS10 = true;
}
}
}

protected final void initPOCNDRS11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS11 = false;
} else {
POCNDRS11 = true;
}
}
}

protected final void initPOCNDRS12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS12 = false;
} else {
POCNDRS12 = true;
}
}
}

protected final void initPOCNDRS2(String s) {
if (!s.trim().isEmpty()) {
POCNDRS2 = Byte.parseByte(s);
} else {
POCNDRS2 = Byte.MIN_VALUE;
}
}

protected final void initPOCNDRS3(String s) {
if (!s.trim().isEmpty()) {
POCNDRS3 = Byte.parseByte(s);
} else {
POCNDRS3 = Byte.MIN_VALUE;
}
}

protected final void initPOCNDRS4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS4 = false;
} else {
POCNDRS4 = true;
}
}
}

protected final void initPOCNDRS5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS5 = false;
} else {
POCNDRS5 = true;
}
}
}

protected final void initPOCNDRS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS6 = false;
} else {
POCNDRS6 = true;
}
}
}

protected final void initPOCNDRS7(String s) {
if (!s.trim().isEmpty()) {
POCNDRS7 = Byte.parseByte(s);
} else {
POCNDRS7 = Byte.MIN_VALUE;
}
}

protected final void initPOCNDRS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS8 = false;
} else {
POCNDRS8 = true;
}
}
}

protected final void initPOCNDRS9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNDRS9 = false;
} else {
POCNDRS9 = true;
}
}
}

protected final void initPOCNHOW1(String s) {
if (!s.trim().isEmpty()) {
POCNHOW1 = Byte.parseByte(s);
} else {
POCNHOW1 = Byte.MIN_VALUE;
}
}

protected final void initPOCNHOW2(String s) {
if (!s.trim().isEmpty()) {
POCNHOW2 = Byte.parseByte(s);
} else {
POCNHOW2 = Byte.MIN_VALUE;
}
}

protected final void initPOCNLRS1(String s) {
if (!s.trim().isEmpty()) {
POCNLRS1 = Byte.parseByte(s);
} else {
POCNLRS1 = Byte.MIN_VALUE;
}
}

protected final void initPOCNLRS2(String s) {
if (!s.trim().isEmpty()) {
POCNLRS2 = Byte.parseByte(s);
} else {
POCNLRS2 = Byte.MIN_VALUE;
}
}

protected final void initPOCNLRS3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNLRS3 = false;
} else {
POCNLRS3 = true;
}
}
}

protected final void initPOCNLRS4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNLRS4 = false;
} else {
POCNLRS4 = true;
}
}
}

protected final void initPOCNLRS5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNLRS5 = false;
} else {
POCNLRS5 = true;
}
}
}

protected final void initPOCNLRS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNLRS6 = false;
} else {
POCNLRS6 = true;
}
}
}

protected final void initPOCNLRS7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNLRS7 = false;
} else {
POCNLRS7 = true;
}
}
}

protected final void initPOCNLRS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POCNLRS8 = false;
} else {
POCNLRS8 = true;
}
}
}

protected final void initPOCNPLN1(String s) {
if (!s.trim().isEmpty()) {
POCNPLN1 = Byte.parseByte(s);
} else {
POCNPLN1 = Byte.MIN_VALUE;
}
}

protected final void initPOCNPLN2(String s) {
if (!s.trim().isEmpty()) {
POCNPLN2 = Byte.parseByte(s);
} else {
POCNPLN2 = Byte.MIN_VALUE;
}
}

protected final void initPOCNVOL1(String s) {
if (!s.trim().isEmpty()) {
POCNVOL1 = Byte.parseByte(s);
} else {
POCNVOL1 = Byte.MIN_VALUE;
}
}

protected final void initPOCNVOL2(String s) {
if (!s.trim().isEmpty()) {
POCNVOL2 = Byte.parseByte(s);
} else {
POCNVOL2 = Byte.MIN_VALUE;
}
}

protected final void initPOCONCH1(String s) {
if (!s.trim().isEmpty()) {
POCONCH1 = Byte.parseByte(s);
} else {
POCONCH1 = Byte.MIN_VALUE;
}
}

protected final void initPOCONCH2(String s) {
if (!s.trim().isEmpty()) {
POCONCH2 = Byte.parseByte(s);
} else {
POCONCH2 = Byte.MIN_VALUE;
}
}

protected final void initPOFAN10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAN10 = false;
} else {
POFAN10 = true;
}
}
}

protected final void initPOFAN11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAN11 = false;
} else {
POFAN11 = true;
}
}
}

protected final void initPOFAN12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAN12 = false;
} else {
POFAN12 = true;
}
}
}

protected final void initPOFAN9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAN9 = false;
} else {
POFAN9 = true;
}
}
}

protected final void initPOFAWH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH10 = false;
} else {
POFAWH10 = true;
}
}
}

protected final void initPOFAWH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH11 = false;
} else {
POFAWH11 = true;
}
}
}

protected final void initPOFAWH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH12 = false;
} else {
POFAWH12 = true;
}
}
}

protected final void initPOFAWH3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH3 = false;
} else {
POFAWH3 = true;
}
}
}

protected final void initPOFAWH4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH4 = false;
} else {
POFAWH4 = true;
}
}
}

protected final void initPOFAWH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH5 = false;
} else {
POFAWH5 = true;
}
}
}

protected final void initPOFAWH7(String s) {
if (!s.trim().isEmpty()) {
POFAWH7 = Byte.parseByte(s);
} else {
POFAWH7 = Byte.MIN_VALUE;
}
}

protected final void initPOFAWH8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH8 = false;
} else {
POFAWH8 = true;
}
}
}

protected final void initPOFAWH9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POFAWH9 = false;
} else {
POFAWH9 = true;
}
}
}

protected final void initPOLMUS10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POLMUS10 = false;
} else {
POLMUS10 = true;
}
}
}

protected final void initPOLMUS11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POLMUS11 = false;
} else {
POLMUS11 = true;
}
}
}

protected final void initPOLMUS12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POLMUS12 = false;
} else {
POLMUS12 = true;
}
}
}

protected final void initPOLMUS9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POLMUS9 = false;
} else {
POLMUS9 = true;
}
}
}

protected final void initPOLMVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POLMVB2 = false;
} else {
POLMVB2 = true;
}
}
}

protected final void initPOPENVB(String s) {
if (!s.trim().isEmpty()) {
POPENVB = Byte.parseByte(s);
} else {
POPENVB = Byte.MIN_VALUE;
}
}

protected final void initPOPENVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POPENVB2 = false;
} else {
POPENVB2 = true;
}
}
}

protected final void initPOPENVI(String s) {
if (!s.trim().isEmpty()) {
POPENVI = Integer.parseInt(s);
} else {
POPENVI = Integer.MIN_VALUE;
}
}

protected final void initPOPENVI2(String s) {
if (!s.trim().isEmpty()) {
POPENVI2 = Integer.parseInt(s);
} else {
POPENVI2 = Integer.MIN_VALUE;
}
}

protected final void initPOPYCH(String s) {
if (!s.trim().isEmpty()) {
POPYCH = Byte.parseByte(s);
} else {
POPYCH = Byte.MIN_VALUE;
}
}

protected final void initPPANEXM1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANEXM1 = false;
} else {
PPANEXM1 = true;
}
}
}

protected final void initPPANEXM2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANEXM2 = false;
} else {
PPANEXM2 = true;
}
}
}

protected final void initPPANEXM3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANEXM3 = false;
} else {
PPANEXM3 = true;
}
}
}

protected final void initPPANEXY1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANEXY1 = false;
} else {
PPANEXY1 = true;
}
}
}

protected final void initPPANEXY2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANEXY2 = false;
} else {
PPANEXY2 = true;
}
}
}

protected final void initPPANEXY3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANEXY3 = false;
} else {
PPANEXY3 = true;
}
}
}

protected final void initPPANLM1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANLM1 = false;
} else {
PPANLM1 = true;
}
}
}

protected final void initPPANLM2(String s) {
if (!s.trim().isEmpty()) {
PPANLM2 = Byte.parseByte(s);
} else {
PPANLM2 = Byte.MIN_VALUE;
}
}

protected final void initPPANLM3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANLM3 = false;
} else {
PPANLM3 = true;
}
}
}

protected final void initPPANN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANN3 = false;
} else {
PPANN3 = true;
}
}
}

protected final void initPPANN4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANN4 = false;
} else {
PPANN4 = true;
}
}
}

protected final void initPPANN6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANN6 = false;
} else {
PPANN6 = true;
}
}
}

protected final void initPPANN7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANN7 = false;
} else {
PPANN7 = true;
}
}
}

protected final void initPPANN8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANN8 = false;
} else {
PPANN8 = true;
}
}
}

protected final void initPPANVB1(String s) {
if (!s.trim().isEmpty()) {
PPANVB1 = Byte.parseByte(s);
} else {
PPANVB1 = Byte.MIN_VALUE;
}
}

protected final void initPPANVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANVB2 = false;
} else {
PPANVB2 = true;
}
}
}

protected final void initPPANVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANVB3 = false;
} else {
PPANVB3 = true;
}
}
}

protected final void initPPANVI1(String s) {
if (!s.trim().isEmpty()) {
PPANVI1 = Integer.parseInt(s);
} else {
PPANVI1 = Integer.MIN_VALUE;
}
}

protected final void initPPANVI2(String s) {
if (!s.trim().isEmpty()) {
PPANVI2 = Short.parseShort(s);
} else {
PPANVI2 = Short.MIN_VALUE;
}
}

protected final void initPPANVI3(String s) {
if (!s.trim().isEmpty()) {
PPANVI3 = Short.parseShort(s);
} else {
PPANVI3 = Short.MIN_VALUE;
}
}

protected final void initPPCNDRS12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS12 = false;
} else {
PPCNDRS12 = true;
}
}
}

protected final void initPPCNDRS13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS13 = false;
} else {
PPCNDRS13 = true;
}
}
}

protected final void initPPCNDRS14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS14 = false;
} else {
PPCNDRS14 = true;
}
}
}

protected final void initPPCNDRS15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS15 = false;
} else {
PPCNDRS15 = true;
}
}
}

protected final void initPPCNDRS16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS16 = false;
} else {
PPCNDRS16 = true;
}
}
}

protected final void initPPCNDRS17(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS17 = Byte.parseByte(s);
} else {
PPCNDRS17 = Byte.MIN_VALUE;
}
}

protected final void initPPCNDRS18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS18 = false;
} else {
PPCNDRS18 = true;
}
}
}

protected final void initPPCNDRS20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS20 = false;
} else {
PPCNDRS20 = true;
}
}
}

protected final void initPPCNDRS21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS21 = false;
} else {
PPCNDRS21 = true;
}
}
}

protected final void initPPCNDRS22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS22 = false;
} else {
PPCNDRS22 = true;
}
}
}

protected final void initPPCNDRS23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS23 = false;
} else {
PPCNDRS23 = true;
}
}
}

protected final void initPPCNDRS24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS24 = false;
} else {
PPCNDRS24 = true;
}
}
}

protected final void initPPCNDRS3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS3 = false;
} else {
PPCNDRS3 = true;
}
}
}

protected final void initPPCNDRS4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS4 = false;
} else {
PPCNDRS4 = true;
}
}
}

protected final void initPPCNDRS5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS5 = false;
} else {
PPCNDRS5 = true;
}
}
}

protected final void initPPCNDRS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS6 = false;
} else {
PPCNDRS6 = true;
}
}
}

protected final void initPPCNDRS7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS7 = false;
} else {
PPCNDRS7 = true;
}
}
}

protected final void initPPCNDRS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNDRS8 = false;
} else {
PPCNDRS8 = true;
}
}
}

protected final void initPPCNDRS9(String s) {
if (!s.trim().isEmpty()) {
PPCNDRS9 = Byte.parseByte(s);
} else {
PPCNDRS9 = Byte.MIN_VALUE;
}
}

protected final void initPPCNHO___W3(String s) {
if (!s.trim().isEmpty()) {
PPCNHO___W3 = Byte.parseByte(s);
} else {
PPCNHO___W3 = Byte.MIN_VALUE;
}
}

protected final void initPPCNLRS10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS10 = false;
} else {
PPCNLRS10 = true;
}
}
}

protected final void initPPCNLRS11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS11 = false;
} else {
PPCNLRS11 = true;
}
}
}

protected final void initPPCNLRS12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS12 = false;
} else {
PPCNLRS12 = true;
}
}
}

protected final void initPPCNLRS4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS4 = false;
} else {
PPCNLRS4 = true;
}
}
}

protected final void initPPCNLRS6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS6 = false;
} else {
PPCNLRS6 = true;
}
}
}

protected final void initPPCNLRS7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS7 = false;
} else {
PPCNLRS7 = true;
}
}
}

protected final void initPPCNLRS8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPCNLRS8 = false;
} else {
PPCNLRS8 = true;
}
}
}

protected final void initPPCNLRS9(String s) {
if (!s.trim().isEmpty()) {
PPCNLRS9 = Byte.parseByte(s);
} else {
PPCNLRS9 = Byte.MIN_VALUE;
}
}

protected final void initPPCNPLN1(String s) {
if (!s.trim().isEmpty()) {
PPCNPLN1 = Byte.parseByte(s);
} else {
PPCNPLN1 = Byte.MIN_VALUE;
}
}

protected final void initPPCNPLN2(String s) {
if (!s.trim().isEmpty()) {
PPCNPLN2 = Byte.parseByte(s);
} else {
PPCNPLN2 = Byte.MIN_VALUE;
}
}

protected final void initPPCNPLN3(String s) {
if (!s.trim().isEmpty()) {
PPCNPLN3 = Byte.parseByte(s);
} else {
PPCNPLN3 = Byte.MIN_VALUE;
}
}

protected final void initPPCONCH(String s) {
if (!s.trim().isEmpty()) {
PPCONCH = Byte.parseByte(s);
} else {
PPCONCH = Byte.MIN_VALUE;
}
}

protected final void initPPDRINC3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPDRINC3 = false;
} else {
PPDRINC3 = true;
}
}
}

protected final void initPPDRINCB(String s) {
if (!s.trim().isEmpty()) {
PPDRINCB = Byte.parseByte(s);
} else {
PPDRINCB = Byte.MIN_VALUE;
}
}

protected final void initPPDRINCB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPDRINCB3 = false;
} else {
PPDRINCB3 = true;
}
}
}

protected final void initPPDRVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPDRVB3 = false;
} else {
PPDRVB3 = true;
}
}
}

protected final void initPPDRVI3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPDRVI3 = false;
} else {
PPDRVI3 = true;
}
}
}

protected final void initPPFAAG2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAAG2 = false;
} else {
PPFAAG2 = true;
}
}
}

protected final void initPPFAAG3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAAG3 = false;
} else {
PPFAAG3 = true;
}
}
}

protected final void initPPFAN10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN10 = false;
} else {
PPFAN10 = true;
}
}
}

protected final void initPPFAN12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN12 = false;
} else {
PPFAN12 = true;
}
}
}

protected final void initPPFAN13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN13 = false;
} else {
PPFAN13 = true;
}
}
}

protected final void initPPFAN14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN14 = false;
} else {
PPFAN14 = true;
}
}
}

protected final void initPPFAN15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN15 = false;
} else {
PPFAN15 = true;
}
}
}

protected final void initPPFAN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN3 = false;
} else {
PPFAN3 = true;
}
}
}

protected final void initPPFAN4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN4 = false;
} else {
PPFAN4 = true;
}
}
}

protected final void initPPFAN5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN5 = false;
} else {
PPFAN5 = true;
}
}
}

protected final void initPPFAN7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN7 = false;
} else {
PPFAN7 = true;
}
}
}

protected final void initPPFAN8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN8 = false;
} else {
PPFAN8 = true;
}
}
}

protected final void initPPFAN9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAN9 = false;
} else {
PPFAN9 = true;
}
}
}

protected final void initPPFAWH10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH10 = false;
} else {
PPFAWH10 = true;
}
}
}

protected final void initPPFAWH11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH11 = false;
} else {
PPFAWH11 = true;
}
}
}

protected final void initPPFAWH12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH12 = false;
} else {
PPFAWH12 = true;
}
}
}

protected final void initPPFAWH13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH13 = false;
} else {
PPFAWH13 = true;
}
}
}

protected final void initPPFAWH14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH14 = false;
} else {
PPFAWH14 = true;
}
}
}

protected final void initPPFAWH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH16 = false;
} else {
PPFAWH16 = true;
}
}
}

protected final void initPPFAWH17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH17 = false;
} else {
PPFAWH17 = true;
}
}
}

protected final void initPPFAWH18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH18 = false;
} else {
PPFAWH18 = true;
}
}
}

protected final void initPPFAWH19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH19 = false;
} else {
PPFAWH19 = true;
}
}
}

protected final void initPPFAWH20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH20 = false;
} else {
PPFAWH20 = true;
}
}
}

protected final void initPPFAWH21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH21 = false;
} else {
PPFAWH21 = true;
}
}
}

protected final void initPPFAWH4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH4 = false;
} else {
PPFAWH4 = true;
}
}
}

protected final void initPPFAWH5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH5 = false;
} else {
PPFAWH5 = true;
}
}
}

protected final void initPPFAWH7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH7 = false;
} else {
PPFAWH7 = true;
}
}
}

protected final void initPPFAWH8(String s) {
if (!s.trim().isEmpty()) {
PPFAWH8 = Byte.parseByte(s);
} else {
PPFAWH8 = Byte.MIN_VALUE;
}
}

protected final void initPPFAWH9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH9 = false;
} else {
PPFAWH9 = true;
}
}
}

protected final void initPPIRNO1(String s) {
if (!s.trim().isEmpty()) {
PPIRNO1 = Byte.parseByte(s);
} else {
PPIRNO1 = Byte.MIN_VALUE;
}
}

protected final void initPPIRNO2(String s) {
if (!s.trim().isEmpty()) {
PPIRNO2 = Byte.parseByte(s);
} else {
PPIRNO2 = Byte.MIN_VALUE;
}
}

protected final void initPPIRNO3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPIRNO3 = false;
} else {
PPIRNO3 = true;
}
}
}

protected final void initPPIRRA1(String s) {
if (!s.trim().isEmpty()) {
PPIRRA1 = Integer.parseInt(s);
} else {
PPIRRA1 = Integer.MIN_VALUE;
}
}

protected final void initPPIRRA2(String s) {
if (!s.trim().isEmpty()) {
PPIRRA2 = Integer.parseInt(s);
} else {
PPIRRA2 = Integer.MIN_VALUE;
}
}

protected final void initPPIRRA3(String s) {
if (!s.trim().isEmpty()) {
PPIRRA3 = Short.parseShort(s);
} else {
PPIRRA3 = Short.MIN_VALUE;
}
}

protected final void initPPIRRF1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPIRRF1 = false;
} else {
PPIRRF1 = true;
}
}
}

protected final void initPPIRRF2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPIRRF2 = false;
} else {
PPIRRF2 = true;
}
}
}

protected final void initPPIRRF3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPIRRF3 = false;
} else {
PPIRRF3 = true;
}
}
}

protected final void initPPIRRH1(String s) {
if (!s.trim().isEmpty()) {
PPIRRH1 = Byte.parseByte(s);
} else {
PPIRRH1 = Byte.MIN_VALUE;
}
}

protected final void initPPIRRH2(String s) {
if (!s.trim().isEmpty()) {
PPIRRH2 = Byte.parseByte(s);
} else {
PPIRRH2 = Byte.MIN_VALUE;
}
}

protected final void initPPIRRH3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPIRRH3 = false;
} else {
PPIRRH3 = true;
}
}
}

protected final void initPPIRRY1(String s) {
if (!s.trim().isEmpty()) {
PPIRRY1 = Short.parseShort(s);
} else {
PPIRRY1 = Short.MIN_VALUE;
}
}

protected final void initPPIRRY2(String s) {
if (!s.trim().isEmpty()) {
PPIRRY2 = Short.parseShort(s);
} else {
PPIRRY2 = Short.MIN_VALUE;
}
}

protected final void initPPIRRY3(String s) {
if (!s.trim().isEmpty()) {
PPIRRY3 = Short.parseShort(s);
} else {
PPIRRY3 = Short.MIN_VALUE;
}
}

protected final void initPPLASY1(String s) {
if (!s.trim().isEmpty()) {
PPLASY1 = Short.parseShort(s);
} else {
PPLASY1 = Short.MIN_VALUE;
}
}

protected final void initPPLASY2(String s) {
if (!s.trim().isEmpty()) {
PPLASY2 = Short.parseShort(s);
} else {
PPLASY2 = Short.MIN_VALUE;
}
}

protected final void initPPLASY3(String s) {
if (!s.trim().isEmpty()) {
PPLASY3 = Short.parseShort(s);
} else {
PPLASY3 = Short.MIN_VALUE;
}
}

protected final void initPPNINS1(String s) {
if (!s.trim().isEmpty()) {
PPNINS1 = Byte.parseByte(s);
} else {
PPNINS1 = Byte.MIN_VALUE;
}
}

protected final void initPPNINS2(String s) {
if (!s.trim().isEmpty()) {
PPNINS2 = Byte.parseByte(s);
} else {
PPNINS2 = Byte.MIN_VALUE;
}
}

protected final void initPPNINS3(String s) {
if (!s.trim().isEmpty()) {
PPNINS3 = Byte.parseByte(s);
} else {
PPNINS3 = Byte.MIN_VALUE;
}
}

protected final void initPPRGAM(String s) {
if (!s.trim().isEmpty()) {
PPRGAM = Integer.parseInt(s);
} else {
PPRGAM = Integer.MIN_VALUE;
}
}

protected final void initPPRGFG3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPRGFG3 = false;
} else {
PPRGFG3 = true;
}
}
}

protected final void initPPRGFR3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPRGFR3 = false;
} else {
PPRGFR3 = true;
}
}
}

protected final void initPPYSTP15(String s) {
if (!s.trim().isEmpty()) {
PPYSTP15 = Byte.parseByte(s);
} else {
PPYSTP15 = Byte.MIN_VALUE;
}
}

protected final void initPPYSTP16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP16 = false;
} else {
PPYSTP16 = true;
}
}
}

protected final void initPPYSTP17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP17 = false;
} else {
PPYSTP17 = true;
}
}
}

protected final void initPPYSTP18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP18 = false;
} else {
PPYSTP18 = true;
}
}
}

protected final void initPPYSTP20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP20 = false;
} else {
PPYSTP20 = true;
}
}
}

protected final void initPPYSTP21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP21 = false;
} else {
PPYSTP21 = true;
}
}
}

protected final void initPPYSTP3(String s) {
if (!s.trim().isEmpty()) {
PPYSTP3 = Byte.parseByte(s);
} else {
PPYSTP3 = Byte.MIN_VALUE;
}
}

protected final void initPPYSTP4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP4 = false;
} else {
PPYSTP4 = true;
}
}
}

protected final void initPPYSTP5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP5 = false;
} else {
PPYSTP5 = true;
}
}
}

protected final void initPPYSTP6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP6 = false;
} else {
PPYSTP6 = true;
}
}
}

protected final void initPPYSTP7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPYSTP7 = false;
} else {
PPYSTP7 = true;
}
}
}

protected final void initPRCRELIG(String s) {
if (!s.trim().isEmpty()) {
PRCRELIG = Byte.parseByte(s);
} else {
PRCRELIG = Byte.MIN_VALUE;
}
}

protected final void initPROXPERS(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PROXPERS = false;
} else {
PROXPERS = true;
}
}
}

protected final void initPSCHY_F(String s) {
if (!s.trim().isEmpty()) {
PSCHY_F = Byte.parseByte(s);
} else {
PSCHY_F = Byte.MIN_VALUE;
}
}

protected final void initPSCHY_S(String s) {
if (!s.trim().isEmpty()) {
PSCHY_S = Byte.parseByte(s);
} else {
PSCHY_S = Byte.MIN_VALUE;
}
}

protected final void initPSCHY_T(String s) {
if (!s.trim().isEmpty()) {
PSCHY_T = Byte.parseByte(s);
} else {
PSCHY_T = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE1(String s) {
if (!s.trim().isEmpty()) {
PSTYPE1 = Byte.parseByte(s);
} else {
PSTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE10(String s) {
if (!s.trim().isEmpty()) {
PSTYPE10 = Byte.parseByte(s);
} else {
PSTYPE10 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE11(String s) {
if (!s.trim().isEmpty()) {
PSTYPE11 = Byte.parseByte(s);
} else {
PSTYPE11 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE12 = false;
} else {
PSTYPE12 = true;
}
}
}

protected final void initPSTYPE13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE13 = false;
} else {
PSTYPE13 = true;
}
}
}

protected final void initPSTYPE14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE14 = false;
} else {
PSTYPE14 = true;
}
}
}

protected final void initPSTYPE15(String s) {
if (!s.trim().isEmpty()) {
PSTYPE15 = Byte.parseByte(s);
} else {
PSTYPE15 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE16(String s) {
if (!s.trim().isEmpty()) {
PSTYPE16 = Byte.parseByte(s);
} else {
PSTYPE16 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE17 = false;
} else {
PSTYPE17 = true;
}
}
}

protected final void initPSTYPE18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE18 = false;
} else {
PSTYPE18 = true;
}
}
}

protected final void initPSTYPE19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE19 = false;
} else {
PSTYPE19 = true;
}
}
}

protected final void initPSTYPE2(String s) {
if (!s.trim().isEmpty()) {
PSTYPE2 = Byte.parseByte(s);
} else {
PSTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE20 = false;
} else {
PSTYPE20 = true;
}
}
}

protected final void initPSTYPE21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE21 = false;
} else {
PSTYPE21 = true;
}
}
}

protected final void initPSTYPE3(String s) {
if (!s.trim().isEmpty()) {
PSTYPE3 = Byte.parseByte(s);
} else {
PSTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE4(String s) {
if (!s.trim().isEmpty()) {
PSTYPE4 = Byte.parseByte(s);
} else {
PSTYPE4 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE5(String s) {
if (!s.trim().isEmpty()) {
PSTYPE5 = Byte.parseByte(s);
} else {
PSTYPE5 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE6(String s) {
if (!s.trim().isEmpty()) {
PSTYPE6 = Byte.parseByte(s);
} else {
PSTYPE6 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PSTYPE7 = false;
} else {
PSTYPE7 = true;
}
}
}

protected final void initPSTYPE8(String s) {
if (!s.trim().isEmpty()) {
PSTYPE8 = Byte.parseByte(s);
} else {
PSTYPE8 = Byte.MIN_VALUE;
}
}

protected final void initPSTYPE9(String s) {
if (!s.trim().isEmpty()) {
PSTYPE9 = Byte.parseByte(s);
} else {
PSTYPE9 = Byte.MIN_VALUE;
}
}

protected final void initREGLRPY3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
REGLRPY3 = false;
} else {
REGLRPY3 = true;
}
}
}

protected final void initREGLRPY3_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
REGLRPY3_I = false;
} else {
REGLRPY3_I = true;
}
}
}

protected final void initREGLRPY3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
REGLRPY3_IFLAG = false;
} else {
REGLRPY3_IFLAG = true;
}
}
}

protected final void initREGLRPY4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
REGLRPY4 = false;
} else {
REGLRPY4 = true;
}
}
}

protected final void initREGLRPY4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
REGLRPY4_I = false;
} else {
REGLRPY4_I = true;
}
}
}

protected final void initREGLRPY4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
REGLRPY4_IFLAG = false;
} else {
REGLRPY4_IFLAG = true;
}
}
}

protected final void initREGLRPY5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
REGLRPY5 = false;
} else {
REGLRPY5 = true;
}
}
}

protected final void initREGLRPY5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
REGLRPY5_I = false;
} else {
REGLRPY5_I = true;
}
}
}

protected final void initREGLRPY5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
REGLRPY5_IFLAG = false;
} else {
REGLRPY5_IFLAG = true;
}
}
}

protected final void initRELIGE(String s) {
if (!s.trim().isEmpty()) {
RELIGE = Byte.parseByte(s);
} else {
RELIGE = Byte.MIN_VALUE;
}
}

protected final void initRELIGS(String s) {
if (!s.trim().isEmpty()) {
RELIGS = Byte.parseByte(s);
} else {
RELIGS = Byte.MIN_VALUE;
}
}

protected final void initRELIGW(String s) {
if (!s.trim().isEmpty()) {
RELIGW = Byte.parseByte(s);
} else {
RELIGW = Byte.MIN_VALUE;
}
}

protected final void initRPCRET1(String s) {
if (!s.trim().isEmpty()) {
RPCRET1 = Byte.parseByte(s);
} else {
RPCRET1 = Byte.MIN_VALUE;
}
}

protected final void initRPCRET2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
RPCRET2 = false;
} else {
RPCRET2 = true;
}
}
}

protected final void initRPCRET3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
RPCRET3 = false;
} else {
RPCRET3 = true;
}
}
}

protected final void initRPDBCAL_F(String s) {
if (!s.trim().isEmpty()) {
RPDBCAL_F = Byte.parseByte(s);
} else {
RPDBCAL_F = Byte.MIN_VALUE;
}
}

protected final void initSCAC4(String s) {
if (!s.trim().isEmpty()) {
SCAC4 = Byte.parseByte(s);
} else {
SCAC4 = Byte.MIN_VALUE;
}
}

protected final void initSCAC5(String s) {
if (!s.trim().isEmpty()) {
SCAC5 = Byte.parseByte(s);
} else {
SCAC5 = Byte.MIN_VALUE;
}
}

protected final void initSEGRSBAND(String s) {
if (!s.trim().isEmpty()) {
SEGRSBAND = Byte.parseByte(s);
} else {
SEGRSBAND = Byte.MIN_VALUE;
}
}

protected final void initSENETBAND(String s) {
if (!s.trim().isEmpty()) {
SENETBAND = Byte.parseByte(s);
} else {
SENETBAND = Byte.MIN_VALUE;
}
}

protected final void initSENO(String s) {
if (!s.trim().isEmpty()) {
SENO = Byte.parseByte(s);
} else {
SENO = Byte.MIN_VALUE;
}
}

protected final void initSOC2000(String s) {
if (!s.trim().isEmpty()) {
SOC2000 = Byte.parseByte(s);
} else {
SOC2000 = Byte.MIN_VALUE;
}
}

protected final void initSPASAF_IORIG(String s) {
if (!s.trim().isEmpty()) {
SPASAF_IORIG = Double.parseDouble(s);
} else {
SPASAF_IORIG = Double.NaN;
}
}

protected final void initSPECAMT10(String s) {
if (!s.trim().isEmpty()) {
SPECAMT10 = Double.parseDouble(s);
} else {
SPECAMT10 = Double.NaN;
}
}

protected final void initSPECIAL01(String s) {
if (!s.trim().isEmpty()) {
SPECIAL01 = Byte.parseByte(s);
} else {
SPECIAL01 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL02(String s) {
if (!s.trim().isEmpty()) {
SPECIAL02 = Byte.parseByte(s);
} else {
SPECIAL02 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL03(String s) {
if (!s.trim().isEmpty()) {
SPECIAL03 = Byte.parseByte(s);
} else {
SPECIAL03 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL04(String s) {
if (!s.trim().isEmpty()) {
SPECIAL04 = Byte.parseByte(s);
} else {
SPECIAL04 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL05(String s) {
if (!s.trim().isEmpty()) {
SPECIAL05 = Byte.parseByte(s);
} else {
SPECIAL05 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL06(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL06 = false;
} else {
SPECIAL06 = true;
}
}
}

protected final void initSPECIAL07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL07 = false;
} else {
SPECIAL07 = true;
}
}
}

protected final void initSPECIAL08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL08 = false;
} else {
SPECIAL08 = true;
}
}
}

protected final void initSPECIAL09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL09 = false;
} else {
SPECIAL09 = true;
}
}
}

protected final void initSPECIAL10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL10 = false;
} else {
SPECIAL10 = true;
}
}
}

protected final void initSPECINCL1(String s) {
if (!s.trim().isEmpty()) {
SPECINCL1 = Byte.parseByte(s);
} else {
SPECINCL1 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL10(String s) {
if (!s.trim().isEmpty()) {
SPECINCL10 = Byte.parseByte(s);
} else {
SPECINCL10 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL2(String s) {
if (!s.trim().isEmpty()) {
SPECINCL2 = Byte.parseByte(s);
} else {
SPECINCL2 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL3(String s) {
if (!s.trim().isEmpty()) {
SPECINCL3 = Byte.parseByte(s);
} else {
SPECINCL3 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL4(String s) {
if (!s.trim().isEmpty()) {
SPECINCL4 = Byte.parseByte(s);
} else {
SPECINCL4 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL5(String s) {
if (!s.trim().isEmpty()) {
SPECINCL5 = Byte.parseByte(s);
} else {
SPECINCL5 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL6(String s) {
if (!s.trim().isEmpty()) {
SPECINCL6 = Byte.parseByte(s);
} else {
SPECINCL6 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL7(String s) {
if (!s.trim().isEmpty()) {
SPECINCL7 = Byte.parseByte(s);
} else {
SPECINCL7 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL8(String s) {
if (!s.trim().isEmpty()) {
SPECINCL8 = Byte.parseByte(s);
} else {
SPECINCL8 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL9(String s) {
if (!s.trim().isEmpty()) {
SPECINCL9 = Byte.parseByte(s);
} else {
SPECINCL9 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD1(String s) {
if (!s.trim().isEmpty()) {
SPECPD1 = Byte.parseByte(s);
} else {
SPECPD1 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD10(String s) {
if (!s.trim().isEmpty()) {
SPECPD10 = Byte.parseByte(s);
} else {
SPECPD10 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD2(String s) {
if (!s.trim().isEmpty()) {
SPECPD2 = Short.parseShort(s);
} else {
SPECPD2 = Short.MIN_VALUE;
}
}

protected final void initSPECPD3(String s) {
if (!s.trim().isEmpty()) {
SPECPD3 = Byte.parseByte(s);
} else {
SPECPD3 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD4(String s) {
if (!s.trim().isEmpty()) {
SPECPD4 = Byte.parseByte(s);
} else {
SPECPD4 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD5(String s) {
if (!s.trim().isEmpty()) {
SPECPD5 = Byte.parseByte(s);
} else {
SPECPD5 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD6(String s) {
if (!s.trim().isEmpty()) {
SPECPD6 = Byte.parseByte(s);
} else {
SPECPD6 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD7(String s) {
if (!s.trim().isEmpty()) {
SPECPD7 = Byte.parseByte(s);
} else {
SPECPD7 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD8(String s) {
if (!s.trim().isEmpty()) {
SPECPD8 = Byte.parseByte(s);
} else {
SPECPD8 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD9(String s) {
if (!s.trim().isEmpty()) {
SPECPD9 = Byte.parseByte(s);
} else {
SPECPD9 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN1(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN1 = Byte.parseByte(s);
} else {
SPECWHEN1 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN10(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN10 = Byte.parseByte(s);
} else {
SPECWHEN10 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN2(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN2 = Byte.parseByte(s);
} else {
SPECWHEN2 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN3(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN3 = Byte.parseByte(s);
} else {
SPECWHEN3 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN4(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN4 = Byte.parseByte(s);
} else {
SPECWHEN4 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN5(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN5 = Byte.parseByte(s);
} else {
SPECWHEN5 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN6(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN6 = Byte.parseByte(s);
} else {
SPECWHEN6 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN7(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN7 = Byte.parseByte(s);
} else {
SPECWHEN7 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN8(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN8 = Byte.parseByte(s);
} else {
SPECWHEN8 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN9(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN9 = Byte.parseByte(s);
} else {
SPECWHEN9 = Byte.MIN_VALUE;
}
}

protected final void initSPENDM(String s) {
if (!s.trim().isEmpty()) {
SPENDM = Byte.parseByte(s);
} else {
SPENDM = Byte.MIN_VALUE;
}
}

protected final void initSTATUS(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
STATUS = false;
} else {
STATUS = true;
}
}
}

protected final void initTACC3(String s) {
if (!s.trim().isEmpty()) {
TACC3 = Byte.parseByte(s);
} else {
TACC3 = Byte.MIN_VALUE;
}
}

protected final void initTADDVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TADDVB3 = false;
} else {
TADDVB3 = true;
}
}
}

protected final void initTADDVL(String s) {
if (!s.trim().isEmpty()) {
TADDVL = Integer.parseInt(s);
} else {
TADDVL = Integer.MIN_VALUE;
}
}

protected final void initTADDVL3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TADDVL3 = false;
} else {
TADDVL3 = true;
}
}
}

protected final void initTBCAP3(String s) {
if (!s.trim().isEmpty()) {
TBCAP3 = Byte.parseByte(s);
} else {
TBCAP3 = Byte.MIN_VALUE;
}
}

protected final void initTBCAPY3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBCAPY3 = false;
} else {
TBCAPY3 = true;
}
}
}

protected final void initTBCKNO3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBCKNO3 = false;
} else {
TBCKNO3 = true;
}
}
}

protected final void initTBEN13(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN13 = false;
} else {
TBEN13 = true;
}
}
}

protected final void initTBEN14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN14 = false;
} else {
TBEN14 = true;
}
}
}

protected final void initTBEN15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN15 = false;
} else {
TBEN15 = true;
}
}
}

protected final void initTBEN16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN16 = false;
} else {
TBEN16 = true;
}
}
}

protected final void initTBEN17(String s) {
if (!s.trim().isEmpty()) {
TBEN17 = Byte.parseByte(s);
} else {
TBEN17 = Byte.MIN_VALUE;
}
}

protected final void initTBEN18(String s) {
if (!s.trim().isEmpty()) {
TBEN18 = Byte.parseByte(s);
} else {
TBEN18 = Byte.MIN_VALUE;
}
}

protected final void initTBEN19(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN19 = false;
} else {
TBEN19 = true;
}
}
}

protected final void initTBEN20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN20 = false;
} else {
TBEN20 = true;
}
}
}

protected final void initTBEN21(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN21 = false;
} else {
TBEN21 = true;
}
}
}

protected final void initTBEN22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN22 = false;
} else {
TBEN22 = true;
}
}
}

protected final void initTBEN23(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN23 = false;
} else {
TBEN23 = true;
}
}
}

protected final void initTBEN24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN24 = false;
} else {
TBEN24 = true;
}
}
}

protected final void initTBEN6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN6 = false;
} else {
TBEN6 = true;
}
}
}

protected final void initTBEN7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN7 = false;
} else {
TBEN7 = true;
}
}
}

protected final void initTBEN8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TBEN8 = false;
} else {
TBEN8 = true;
}
}
}

protected final void initTBINC3(String s) {
if (!s.trim().isEmpty()) {
TBINC3 = Byte.parseByte(s);
} else {
TBINC3 = Byte.MIN_VALUE;
}
}

protected final void initTBREC3(String s) {
if (!s.trim().isEmpty()) {
TBREC3 = Short.parseShort(s);
} else {
TBREC3 = Short.MIN_VALUE;
}
}

protected final void initTBRECB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -8) {
TBRECB3 = false;
} else {
TBRECB3 = true;
}
}
}

protected final void initTBVALB3(String s) {
if (!s.trim().isEmpty()) {
TBVALB3 = Byte.parseByte(s);
} else {
TBVALB3 = Byte.MIN_VALUE;
}
}

protected final void initTDUP3(String s) {
if (!s.trim().isEmpty()) {
TDUP3 = Byte.parseByte(s);
} else {
TDUP3 = Byte.MIN_VALUE;
}
}

protected final void initTDUPA3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TDUPA3 = false;
} else {
TDUPA3 = true;
}
}
}

protected final void initTJNT5(String s) {
if (!s.trim().isEmpty()) {
TJNT5 = Byte.parseByte(s);
} else {
TJNT5 = Byte.MIN_VALUE;
}
}

protected final void initTJNT6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TJNT6 = false;
} else {
TJNT6 = true;
}
}
}

protected final void initTRAINEE(String s) {
if (!s.trim().isEmpty()) {
TRAINEE = Byte.parseByte(s);
} else {
TRAINEE = Byte.MIN_VALUE;
}
}

protected final void initTSNO3(String s) {
if (!s.trim().isEmpty()) {
TSNO3 = Byte.parseByte(s);
} else {
TSNO3 = Byte.MIN_VALUE;
}
}

protected final void initTVAL3(String s) {
if (!s.trim().isEmpty()) {
TVAL3 = Integer.parseInt(s);
} else {
TVAL3 = Integer.MIN_VALUE;
}
}

protected final void initTVALB3(String s) {
if (!s.trim().isEmpty()) {
TVALB3 = Byte.parseByte(s);
} else {
TVALB3 = Byte.MIN_VALUE;
}
}

protected final void initTWHO10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO10 = false;
} else {
TWHO10 = true;
}
}
}

protected final void initTWHO11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO11 = false;
} else {
TWHO11 = true;
}
}
}

protected final void initTWHO12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO12 = false;
} else {
TWHO12 = true;
}
}
}

protected final void initTWHO13(String s) {
if (!s.trim().isEmpty()) {
TWHO13 = Byte.parseByte(s);
} else {
TWHO13 = Byte.MIN_VALUE;
}
}

protected final void initTWHO14(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO14 = false;
} else {
TWHO14 = true;
}
}
}

protected final void initTWHO15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO15 = false;
} else {
TWHO15 = true;
}
}
}

protected final void initTWHO16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO16 = false;
} else {
TWHO16 = true;
}
}
}

protected final void initTWHO17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO17 = false;
} else {
TWHO17 = true;
}
}
}

protected final void initTWHO18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO18 = false;
} else {
TWHO18 = true;
}
}
}

protected final void initTWHO3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO3 = false;
} else {
TWHO3 = true;
}
}
}

protected final void initTWHO4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO4 = false;
} else {
TWHO4 = true;
}
}
}

protected final void initTWHO5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO5 = false;
} else {
TWHO5 = true;
}
}
}

protected final void initTWHO6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO6 = false;
} else {
TWHO6 = true;
}
}
}

protected final void initTWHO9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
TWHO9 = false;
} else {
TWHO9 = true;
}
}
}

protected final void initULAND10(String s) {
if (!s.trim().isEmpty()) {
ULAND10 = Byte.parseByte(s);
} else {
ULAND10 = Byte.MIN_VALUE;
}
}

protected final void initULAND11(String s) {
if (!s.trim().isEmpty()) {
ULAND11 = Byte.parseByte(s);
} else {
ULAND11 = Byte.MIN_VALUE;
}
}

protected final void initULAND12(String s) {
if (!s.trim().isEmpty()) {
ULAND12 = Byte.parseByte(s);
} else {
ULAND12 = Byte.MIN_VALUE;
}
}

protected final void initULAND16(String s) {
if (!s.trim().isEmpty()) {
ULAND16 = Byte.parseByte(s);
} else {
ULAND16 = Byte.MIN_VALUE;
}
}

protected final void initULAND17(String s) {
if (!s.trim().isEmpty()) {
ULAND17 = Byte.parseByte(s);
} else {
ULAND17 = Byte.MIN_VALUE;
}
}

protected final void initULAND18(String s) {
if (!s.trim().isEmpty()) {
ULAND18 = Byte.parseByte(s);
} else {
ULAND18 = Byte.MIN_VALUE;
}
}

protected final void initUPROP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP1_IFLAG = false;
} else {
UPROP1_IFLAG = true;
}
}
}

protected final void initUPROP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP2_IFLAG = false;
} else {
UPROP2_IFLAG = true;
}
}
}

protected final void initUPROP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP3_IFLAG = false;
} else {
UPROP3_IFLAG = true;
}
}
}

protected final void initUPROP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP4_IFLAG = false;
} else {
UPROP4_IFLAG = true;
}
}
}

protected final void initUPROP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP5_IFLAG = false;
} else {
UPROP5_IFLAG = true;
}
}
}

protected final void initUPROP6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP6_IFLAG = false;
} else {
UPROP6_IFLAG = true;
}
}
}

protected final void initUPRSH13(String s) {
if (!s.trim().isEmpty()) {
UPRSH13 = Byte.parseByte(s);
} else {
UPRSH13 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH14(String s) {
if (!s.trim().isEmpty()) {
UPRSH14 = Byte.parseByte(s);
} else {
UPRSH14 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH15(String s) {
if (!s.trim().isEmpty()) {
UPRSH15 = Byte.parseByte(s);
} else {
UPRSH15 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH16(String s) {
if (!s.trim().isEmpty()) {
UPRSH16 = Byte.parseByte(s);
} else {
UPRSH16 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH17(String s) {
if (!s.trim().isEmpty()) {
UPRSH17 = Byte.parseByte(s);
} else {
UPRSH17 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH18 = false;
} else {
UPRSH18 = true;
}
}
}

protected final void initUPRSH19(String s) {
if (!s.trim().isEmpty()) {
UPRSH19 = Byte.parseByte(s);
} else {
UPRSH19 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH20(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH20 = false;
} else {
UPRSH20 = true;
}
}
}

protected final void initUPRSH21(String s) {
if (!s.trim().isEmpty()) {
UPRSH21 = Byte.parseByte(s);
} else {
UPRSH21 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH22(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH22 = false;
} else {
UPRSH22 = true;
}
}
}

protected final void initUPRSH23(String s) {
if (!s.trim().isEmpty()) {
UPRSH23 = Byte.parseByte(s);
} else {
UPRSH23 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH24(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH24 = false;
} else {
UPRSH24 = true;
}
}
}

protected final void initUPRSH25(String s) {
if (!s.trim().isEmpty()) {
UPRSH25 = Byte.parseByte(s);
} else {
UPRSH25 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH26(String s) {
if (!s.trim().isEmpty()) {
UPRSH26 = Byte.parseByte(s);
} else {
UPRSH26 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH27(String s) {
if (!s.trim().isEmpty()) {
UPRSH27 = Byte.parseByte(s);
} else {
UPRSH27 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH28(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH28 = false;
} else {
UPRSH28 = true;
}
}
}

protected final void initUPRSH29(String s) {
if (!s.trim().isEmpty()) {
UPRSH29 = Byte.parseByte(s);
} else {
UPRSH29 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH30(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH30 = false;
} else {
UPRSH30 = true;
}
}
}

protected final void initUPRSH31(String s) {
if (!s.trim().isEmpty()) {
UPRSH31 = Byte.parseByte(s);
} else {
UPRSH31 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH32(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH32 = false;
} else {
UPRSH32 = true;
}
}
}

protected final void initUPRSH33(String s) {
if (!s.trim().isEmpty()) {
UPRSH33 = Byte.parseByte(s);
} else {
UPRSH33 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH34(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH34 = false;
} else {
UPRSH34 = true;
}
}
}

protected final void initUPRSH35(String s) {
if (!s.trim().isEmpty()) {
UPRSH35 = Byte.parseByte(s);
} else {
UPRSH35 = Byte.MIN_VALUE;
}
}

protected final void initUPRSH36(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRSH36 = false;
} else {
UPRSH36 = true;
}
}
}

protected final void initUPRSH6(String s) {
if (!s.trim().isEmpty()) {
UPRSH6 = Byte.parseByte(s);
} else {
UPRSH6 = Byte.MIN_VALUE;
}
}

protected final void initUPRTYP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
UPRTYP = false;
} else {
UPRTYP = true;
}
}
}

protected final void initW1W3WGT(String s) {
if (!s.trim().isEmpty()) {
W1W3WGT = Double.parseDouble(s);
} else {
W1W3WGT = Double.NaN;
}
}

protected final void initW2W3WGT(String s) {
if (!s.trim().isEmpty()) {
W2W3WGT = Double.parseDouble(s);
} else {
W2W3WGT = Double.NaN;
}
}

protected final void initW3XSWGT(String s) {
if (!s.trim().isEmpty()) {
W3XSWGT = Double.parseDouble(s);
} else {
W3XSWGT = Double.NaN;
}
}

protected final void initWHOREATT(String s) {
if (!s.trim().isEmpty()) {
WHOREATT = Byte.parseByte(s);
} else {
WHOREATT = Byte.MIN_VALUE;
}
}

protected final void initWHORECAR(String s) {
if (!s.trim().isEmpty()) {
WHORECAR = Byte.parseByte(s);
} else {
WHORECAR = Byte.MIN_VALUE;
}
}

protected final void initWHOREMOB(String s) {
if (!s.trim().isEmpty()) {
WHOREMOB = Byte.parseByte(s);
} else {
WHOREMOB = Byte.MIN_VALUE;
}
}

protected final void initWTCPD(String s) {
if (!s.trim().isEmpty()) {
WTCPD = Byte.parseByte(s);
} else {
WTCPD = Byte.MIN_VALUE;
}
}

protected final void initXBCON(String s) {
if (!s.trim().isEmpty()) {
XBCON = Byte.parseByte(s);
} else {
XBCON = Byte.MIN_VALUE;
}
}

protected final void initXBCONREM(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XBCONREM = false;
} else {
XBCONREM = true;
}
}
}

protected final void initXBCONSC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XBCONSC = false;
} else {
XBCONSC = true;
}
}
}

protected final void initXBCRT(String s) {
if (!s.trim().isEmpty()) {
XBCRT = Byte.parseByte(s);
} else {
XBCRT = Byte.MIN_VALUE;
}
}

protected final void initXBOK(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XBOK = false;
} else {
XBOK = true;
}
}
}

protected final void initXDCON(String s) {
if (!s.trim().isEmpty()) {
XDCON = Byte.parseByte(s);
} else {
XDCON = Byte.MIN_VALUE;
}
}

protected final void initXDCONREM(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XDCONREM = false;
} else {
XDCONREM = true;
}
}
}

protected final void initXDCONSC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XDCONSC = false;
} else {
XDCONSC = true;
}
}
}

protected final void initXDOK(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XDOK = false;
} else {
XDOK = true;
}
}
}

protected final void initXDREF(String s) {
if (!s.trim().isEmpty()) {
XDREF = Byte.parseByte(s);
} else {
XDREF = Byte.MIN_VALUE;
}
}

protected final void initXICON(String s) {
if (!s.trim().isEmpty()) {
XICON = Byte.parseByte(s);
} else {
XICON = Byte.MIN_VALUE;
}
}

protected final void initXICONREM(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XICONREM = false;
} else {
XICONREM = true;
}
}
}

protected final void initXICONSC(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
XICONSC = false;
} else {
XICONSC = true;
}
}
}

public double getACCFRAC() {
return ACCFRAC;
}

public double getAGEASAF1() {
return AGEASAF1;
}

public double getAGMSAF2T() {
return AGMSAF2T;
}

public double getAGMSAFT() {
return AGMSAFT;
}

public double getAGMSAFT1() {
return AGMSAFT1;
}

public String getBACCEND1() {
return BACCEND1;
}

public String getBACCEND2() {
return BACCEND2;
}

public String getBACCEND3() {
return BACCEND3;
}

public boolean getBCARRY2() {
return BCARRY2;
}

public byte getBENTYPE01() {
return BENTYPE01;
}

public byte getBENTYPE02() {
return BENTYPE02;
}

public byte getBENTYPE03() {
return BENTYPE03;
}

public byte getBENTYPE04() {
return BENTYPE04;
}

public byte getBENTYPE05() {
return BENTYPE05;
}

public byte getBENTYPE06() {
return BENTYPE06;
}

public boolean getBENTYPE07() {
return BENTYPE07;
}

public boolean getBENTYPE08() {
return BENTYPE08;
}

public boolean getBENTYPE09() {
return BENTYPE09;
}

public boolean getBENTYPE10() {
return BENTYPE10;
}

public boolean getBENTYPE11() {
return BENTYPE11;
}

public boolean getBENTYPE12() {
return BENTYPE12;
}

public byte getBFUND11() {
return BFUND11;
}

public boolean getBFUND12() {
return BFUND12;
}

public boolean getBFUND13() {
return BFUND13;
}

public boolean getBFUND14() {
return BFUND14;
}

public boolean getBFUND15() {
return BFUND15;
}

public boolean getBFUND16() {
return BFUND16;
}

public byte getBFUND18() {
return BFUND18;
}

public boolean getBFUND19() {
return BFUND19;
}

public boolean getBFUND20() {
return BFUND20;
}

public boolean getBFUND21() {
return BFUND21;
}

public boolean getBFUND22() {
return BFUND22;
}

public boolean getBFUND23() {
return BFUND23;
}

public boolean getBFUND24() {
return BFUND24;
}

public byte getBFUND3() {
return BFUND3;
}

public boolean getBFUND4() {
return BFUND4;
}

public boolean getBFUND5() {
return BFUND5;
}

public boolean getBFUND6() {
return BFUND6;
}

public boolean getBFUND7() {
return BFUND7;
}

public boolean getBFUND8() {
return BFUND8;
}

public boolean getBSEPPD09() {
return BSEPPD09;
}

public boolean getBSEPPD10() {
return BSEPPD10;
}

public boolean getBSEPPD11() {
return BSEPPD11;
}

public boolean getBSEPPD12() {
return BSEPPD12;
}

public boolean getBSEPPD13() {
return BSEPPD13;
}

public boolean getBSEPPD14() {
return BSEPPD14;
}

public boolean getBSEPPD15() {
return BSEPPD15;
}

public boolean getBSEPPD16() {
return BSEPPD16;
}

public boolean getBSEPPD17() {
return BSEPPD17;
}

public boolean getBSEPPD18() {
return BSEPPD18;
}

public boolean getBSEPPD19() {
return BSEPPD19;
}

public boolean getBSEPPD20() {
return BSEPPD20;
}

public byte getCAEXTRA() {
return CAEXTRA;
}

public byte getCAOLDER() {
return CAOLDER;
}

public byte getCAOTHER1() {
return CAOTHER1;
}

public boolean getCAOTHER2() {
return CAOTHER2;
}

public boolean getCAOTHER3() {
return CAOTHER3;
}

public boolean getCAOTHER4() {
return CAOTHER4;
}

public boolean getCAOTHER5() {
return CAOTHER5;
}

public byte getCATYPE() {
return CATYPE;
}

public byte getCCAC4() {
return CCAC4;
}

public byte getCCAC5() {
return CCAC5;
}

public byte getCOMBPD() {
return COMBPD;
}

public byte getCOMMIT1() {
return COMMIT1;
}

public byte getCOMMIT2() {
return COMMIT2;
}

public byte getCOMMIT3() {
return COMMIT3;
}

public byte getCOMMIT4() {
return COMMIT4;
}

public boolean getCOMMIT5() {
return COMMIT5;
}

public boolean getCOURSE20() {
return COURSE20;
}

public byte getCREDTYPE1() {
return CREDTYPE1;
}

public byte getCREDTYPE2() {
return CREDTYPE2;
}

public byte getCTCPD() {
return CTCPD;
}

public byte getCTOGSEP() {
return CTOGSEP;
}

public boolean getCTPAY() {
return CTPAY;
}

public boolean getCTPAYS() {
return CTPAYS;
}

public boolean getCTPAYW() {
return CTPAYW;
}

public byte getDBURDH() {
return DBURDH;
}

public byte getDBURDW4() {
return DBURDW4;
}

public byte getDBURDW5() {
return DBURDW5;
}

public byte getDBURDW6() {
return DBURDW6;
}

public boolean getDBURDW7() {
return DBURDW7;
}

public byte getDBURD___W3() {
return DBURD___W3;
}

public byte getDC12BEH4() {
return DC12BEH4;
}

public byte getDC12BEH5() {
return DC12BEH5;
}

public short getDC12OWE4() {
return DC12OWE4;
}

public short getDC12OWE5() {
return DC12OWE5;
}

public int getDCAMC4() {
return DCAMC4;
}

public short getDCAMC5() {
return DCAMC5;
}

public short getDCAMD4() {
return DCAMD4;
}

public short getDCAMD5() {
return DCAMD5;
}

public int getDCAMOS4() {
return DCAMOS4;
}

public short getDCAMOS5() {
return DCAMOS5;
}

public short getDCAMP1_I() {
return DCAMP1_I;
}

public boolean getDCAMP1_IFLAG() {
return DCAMP1_IFLAG;
}

public short getDCAMP2_I() {
return DCAMP2_I;
}

public byte getDCAMP2_IFLAG() {
return DCAMP2_IFLAG;
}

public short getDCAMP3_I() {
return DCAMP3_I;
}

public byte getDCAMP3_IFLAG() {
return DCAMP3_IFLAG;
}

public short getDCAMP4() {
return DCAMP4;
}

public short getDCAMP4_I() {
return DCAMP4_I;
}

public byte getDCAMP4_IFLAG() {
return DCAMP4_IFLAG;
}

public short getDCAMP5() {
return DCAMP5;
}

public short getDCAMP5_I() {
return DCAMP5_I;
}

public byte getDCAMP5_IFLAG() {
return DCAMP5_IFLAG;
}

public byte getDCANU_I() {
return DCANU_I;
}

public byte getDCANU_IFLAG() {
return DCANU_IFLAG;
}

public byte getDCANY_I() {
return DCANY_I;
}

public byte getDCANY_IFLAG() {
return DCANY_IFLAG;
}

public byte getDCCOS1_I() {
return DCCOS1_I;
}

public boolean getDCCOS1_IFLAG() {
return DCCOS1_IFLAG;
}

public byte getDCCOS2_I() {
return DCCOS2_I;
}

public byte getDCCOS2_IFLAG() {
return DCCOS2_IFLAG;
}

public byte getDCCOS3_I() {
return DCCOS3_I;
}

public byte getDCCOS3_IFLAG() {
return DCCOS3_IFLAG;
}

public byte getDCCOS4() {
return DCCOS4;
}

public byte getDCCOS4_I() {
return DCCOS4_I;
}

public byte getDCCOS4_IFLAG() {
return DCCOS4_IFLAG;
}

public byte getDCCOS5() {
return DCCOS5;
}

public byte getDCCOS5_I() {
return DCCOS5_I;
}

public byte getDCCOS5_IFLAG() {
return DCCOS5_IFLAG;
}

public byte getDCCSP1_I() {
return DCCSP1_I;
}

public boolean getDCCSP1_IFLAG() {
return DCCSP1_IFLAG;
}

public byte getDCCSP2_I() {
return DCCSP2_I;
}

public byte getDCCSP2_IFLAG() {
return DCCSP2_IFLAG;
}

public byte getDCCSP3_I() {
return DCCSP3_I;
}

public byte getDCCSP3_IFLAG() {
return DCCSP3_IFLAG;
}

public byte getDCCSP4() {
return DCCSP4;
}

public byte getDCCSP4_I() {
return DCCSP4_I;
}

public boolean getDCCSP4_IFLAG() {
return DCCSP4_IFLAG;
}

public byte getDCCSP5() {
return DCCSP5;
}

public byte getDCCSP5_I() {
return DCCSP5_I;
}

public boolean getDCCSP5_IFLAG() {
return DCCSP5_IFLAG;
}

public byte getDCESB4() {
return DCESB4;
}

public byte getDCESB5() {
return DCESB5;
}

public byte getDCINZ4() {
return DCINZ4;
}

public byte getDCINZ5() {
return DCINZ5;
}

public byte getDCNAM1_I() {
return DCNAM1_I;
}

public boolean getDCNAM1_IFLAG() {
return DCNAM1_IFLAG;
}

public byte getDCNAM2_I() {
return DCNAM2_I;
}

public byte getDCNAM2_IFLAG() {
return DCNAM2_IFLAG;
}

public byte getDCNAM3_I() {
return DCNAM3_I;
}

public byte getDCNAM3_IFLAG() {
return DCNAM3_IFLAG;
}

public byte getDCNAM4() {
return DCNAM4;
}

public byte getDCNAM4_I() {
return DCNAM4_I;
}

public byte getDCNAM4_IFLAG() {
return DCNAM4_IFLAG;
}

public byte getDCNAM5() {
return DCNAM5;
}

public byte getDCNAM5_I() {
return DCNAM5_I;
}

public byte getDCNAM5_IFLAG() {
return DCNAM5_IFLAG;
}

public byte getDCNUM1_I() {
return DCNUM1_I;
}

public boolean getDCNUM1_IFLAG() {
return DCNUM1_IFLAG;
}

public byte getDCNUM2_I() {
return DCNUM2_I;
}

public boolean getDCNUM2_IFLAG() {
return DCNUM2_IFLAG;
}

public boolean getDCONM10() {
return DCONM10;
}

public byte getDCONM7() {
return DCONM7;
}

public boolean getDCONM8() {
return DCONM8;
}

public byte getDCONM9() {
return DCONM9;
}

public boolean getDCOSHV4_I() {
return DCOSHV4_I;
}

public boolean getDCOSHV4_IFLAG() {
return DCOSHV4_IFLAG;
}

public boolean getDCOSHV5_I() {
return DCOSHV5_I;
}

public boolean getDCOSHV5_IFLAG() {
return DCOSHV5_IFLAG;
}

public boolean getDCPER4() {
return DCPER4;
}

public boolean getDCPER5() {
return DCPER5;
}

public byte getDCREC1_I() {
return DCREC1_I;
}

public boolean getDCREC1_IFLAG() {
return DCREC1_IFLAG;
}

public byte getDCREC2_I() {
return DCREC2_I;
}

public byte getDCREC2_IFLAG() {
return DCREC2_IFLAG;
}

public byte getDCREC3_I() {
return DCREC3_I;
}

public byte getDCREC3_IFLAG() {
return DCREC3_IFLAG;
}

public byte getDCREC4() {
return DCREC4;
}

public byte getDCREC4_I() {
return DCREC4_I;
}

public byte getDCREC4_IFLAG() {
return DCREC4_IFLAG;
}

public byte getDCREC5() {
return DCREC5;
}

public byte getDCREC5_I() {
return DCREC5_I;
}

public byte getDCREC5_IFLAG() {
return DCREC5_IFLAG;
}

public boolean getDCRSP1_I() {
return DCRSP1_I;
}

public boolean getDCRSP1_IFLAG() {
return DCRSP1_IFLAG;
}

public byte getDCRSP2_I() {
return DCRSP2_I;
}

public byte getDCRSP2_IFLAG() {
return DCRSP2_IFLAG;
}

public byte getDCRSP3_I() {
return DCRSP3_I;
}

public byte getDCRSP3_IFLAG() {
return DCRSP3_IFLAG;
}

public boolean getDCRSP4() {
return DCRSP4;
}

public byte getDCRSP4_I() {
return DCRSP4_I;
}

public byte getDCRSP4_IFLAG() {
return DCRSP4_IFLAG;
}

public boolean getDCRSP5() {
return DCRSP5;
}

public byte getDCRSP5_I() {
return DCRSP5_I;
}

public boolean getDCRSP5_IFLAG() {
return DCRSP5_IFLAG;
}

public boolean getDHBANY08_I() {
return DHBANY08_I;
}

public boolean getDHBANY08_IFLAG() {
return DHBANY08_IFLAG;
}

public boolean getDHBANY09_I() {
return DHBANY09_I;
}

public boolean getDHBANY09_IFLAG() {
return DHBANY09_IFLAG;
}

public boolean getDHBANY10_I() {
return DHBANY10_I;
}

public boolean getDHBANY10_IFLAG() {
return DHBANY10_IFLAG;
}

public boolean getDHBANY11_I() {
return DHBANY11_I;
}

public boolean getDHBANY11_IFLAG() {
return DHBANY11_IFLAG;
}

public boolean getDHPANY4() {
return DHPANY4;
}

public boolean getDHPANY5() {
return DHPANY5;
}

public boolean getDHPANY6() {
return DHPANY6;
}

public boolean getDHPANY7() {
return DHPANY7;
}

public byte getDHPBEH3() {
return DHPBEH3;
}

public byte getDHPBEH3_I() {
return DHPBEH3_I;
}

public byte getDHPBEH3_IFLAG() {
return DHPBEH3_IFLAG;
}

public byte getDHPBEH4() {
return DHPBEH4;
}

public byte getDHPBEH4_I() {
return DHPBEH4_I;
}

public boolean getDHPBEH4_IFLAG() {
return DHPBEH4_IFLAG;
}

public byte getDHPBEH5() {
return DHPBEH5;
}

public byte getDHPBEH5_I() {
return DHPBEH5_I;
}

public boolean getDHPBEH5_IFLAG() {
return DHPBEH5_IFLAG;
}

public byte getDHPEST3() {
return DHPEST3;
}

public byte getDHPEST4() {
return DHPEST4;
}

public boolean getDHPEST5() {
return DHPEST5;
}

public short getDHPINS3() {
return DHPINS3;
}

public short getDHPINS3_I() {
return DHPINS3_I;
}

public byte getDHPINS3_IFLAG() {
return DHPINS3_IFLAG;
}

public short getDHPINS4() {
return DHPINS4;
}

public double getDHPINS4_I() {
return DHPINS4_I;
}

public byte getDHPINS4_IFLAG() {
return DHPINS4_IFLAG;
}

public short getDHPINS5() {
return DHPINS5;
}

public short getDHPINS5_I() {
return DHPINS5_I;
}

public byte getDHPINS5_IFLAG() {
return DHPINS5_IFLAG;
}

public byte getDHPINT3() {
return DHPINT3;
}

public byte getDHPINT4() {
return DHPINT4;
}

public byte getDHPINT5() {
return DHPINT5;
}

public byte getDHPOFT3() {
return DHPOFT3;
}

public byte getDHPOFT3_I() {
return DHPOFT3_I;
}

public byte getDHPOFT3_IFLAG() {
return DHPOFT3_IFLAG;
}

public byte getDHPOFT4() {
return DHPOFT4;
}

public byte getDHPOFT4_I() {
return DHPOFT4_I;
}

public boolean getDHPOFT4_IFLAG() {
return DHPOFT4_IFLAG;
}

public byte getDHPOFT5() {
return DHPOFT5;
}

public byte getDHPOFT5_I() {
return DHPOFT5_I;
}

public boolean getDHPOFT5_IFLAG() {
return DHPOFT5_IFLAG;
}

public short getDHPOWE3() {
return DHPOWE3;
}

public short getDHPOWE3_I() {
return DHPOWE3_I;
}

public byte getDHPOWE3_IFLAG() {
return DHPOWE3_IFLAG;
}

public short getDHPOWE4() {
return DHPOWE4;
}

public short getDHPOWE4_I() {
return DHPOWE4_I;
}

public byte getDHPOWE4_IFLAG() {
return DHPOWE4_IFLAG;
}

public short getDHPOWE5() {
return DHPOWE5;
}

public short getDHPOWE5_I() {
return DHPOWE5_I;
}

public boolean getDHPOWE5_IFLAG() {
return DHPOWE5_IFLAG;
}

public byte getDHPWEST3() {
return DHPWEST3;
}

public byte getDHPWEST4() {
return DHPWEST4;
}

public byte getDHPWEST5() {
return DHPWEST5;
}

public byte getDHPWHNM3() {
return DHPWHNM3;
}

public byte getDHPWHNM3_I() {
return DHPWHNM3_I;
}

public byte getDHPWHNM3_IFLAG() {
return DHPWHNM3_IFLAG;
}

public byte getDHPWHNM4() {
return DHPWHNM4;
}

public byte getDHPWHNM4_I() {
return DHPWHNM4_I;
}

public byte getDHPWHNM4_IFLAG() {
return DHPWHNM4_IFLAG;
}

public byte getDHPWHNM5() {
return DHPWHNM5;
}

public byte getDHPWHNM5_I() {
return DHPWHNM5_I;
}

public byte getDHPWHNM5_IFLAG() {
return DHPWHNM5_IFLAG;
}

public short getDHPWHNY3() {
return DHPWHNY3;
}

public short getDHPWHNY3_I() {
return DHPWHNY3_I;
}

public byte getDHPWHNY3_IFLAG() {
return DHPWHNY3_IFLAG;
}

public short getDHPWHNY4() {
return DHPWHNY4;
}

public short getDHPWHNY4_I() {
return DHPWHNY4_I;
}

public byte getDHPWHNY4_IFLAG() {
return DHPWHNY4_IFLAG;
}

public short getDHPWHNY5() {
return DHPWHNY5;
}

public short getDHPWHNY5_I() {
return DHPWHNY5_I;
}

public byte getDHPWHNY5_IFLAG() {
return DHPWHNY5_IFLAG;
}

public byte getDLWHY11() {
return DLWHY11;
}

public boolean getDLWHY12() {
return DLWHY12;
}

public boolean getDLWHY13() {
return DLWHY13;
}

public boolean getDLWHY14() {
return DLWHY14;
}

public byte getDLWHY17() {
return DLWHY17;
}

public boolean getDLWHY18() {
return DLWHY18;
}

public boolean getDLWHY19() {
return DLWHY19;
}

public boolean getDLWHY20() {
return DLWHY20;
}

public boolean getDLWHY21() {
return DLWHY21;
}

public boolean getDLWHY24() {
return DLWHY24;
}

public boolean getDLWHY25() {
return DLWHY25;
}

public boolean getDLWHY26() {
return DLWHY26;
}

public boolean getDLWHY27() {
return DLWHY27;
}

public boolean getDLWHY28() {
return DLWHY28;
}

public byte getDLWHY29() {
return DLWHY29;
}

public boolean getDLWHY30() {
return DLWHY30;
}

public boolean getDLWHY31() {
return DLWHY31;
}

public boolean getDLWHY32() {
return DLWHY32;
}

public boolean getDLWHY33() {
return DLWHY33;
}

public boolean getDLWHY34() {
return DLWHY34;
}

public boolean getDLWHY35() {
return DLWHY35;
}

public byte getDMOBEH3() {
return DMOBEH3;
}

public byte getDMOBEH3_I() {
return DMOBEH3_I;
}

public byte getDMOBEH3_IFLAG() {
return DMOBEH3_IFLAG;
}

public byte getDMOBEH4() {
return DMOBEH4;
}

public byte getDMOBEH4_I() {
return DMOBEH4_I;
}

public boolean getDMOBEH4_IFLAG() {
return DMOBEH4_IFLAG;
}

public byte getDMOBEH5() {
return DMOBEH5;
}

public byte getDMOBEH5_I() {
return DMOBEH5_I;
}

public boolean getDMOBEH5_IFLAG() {
return DMOBEH5_IFLAG;
}

public byte getDMOEST3() {
return DMOEST3;
}

public byte getDMOEST4() {
return DMOEST4;
}

public byte getDMOEST5() {
return DMOEST5;
}

public short getDMOINS3() {
return DMOINS3;
}

public byte getDMOINS3_I() {
return DMOINS3_I;
}

public boolean getDMOINS3_IFLAG() {
return DMOINS3_IFLAG;
}

public short getDMOINS4() {
return DMOINS4;
}

public byte getDMOINS4_I() {
return DMOINS4_I;
}

public byte getDMOINS4_IFLAG() {
return DMOINS4_IFLAG;
}

public byte getDMOINS5() {
return DMOINS5;
}

public byte getDMOINS5_I() {
return DMOINS5_I;
}

public boolean getDMOINS5_IFLAG() {
return DMOINS5_IFLAG;
}

public byte getDMOINT3() {
return DMOINT3;
}

public byte getDMOINT4() {
return DMOINT4;
}

public byte getDMOINT5() {
return DMOINT5;
}

public byte getDMOOFT3() {
return DMOOFT3;
}

public byte getDMOOFT3_I() {
return DMOOFT3_I;
}

public byte getDMOOFT3_IFLAG() {
return DMOOFT3_IFLAG;
}

public byte getDMOOFT4() {
return DMOOFT4;
}

public byte getDMOOFT4_I() {
return DMOOFT4_I;
}

public boolean getDMOOFT4_IFLAG() {
return DMOOFT4_IFLAG;
}

public byte getDMOOFT5() {
return DMOOFT5;
}

public boolean getDMOOFT5_I() {
return DMOOFT5_I;
}

public boolean getDMOOFT5_IFLAG() {
return DMOOFT5_IFLAG;
}

public short getDMOOWE3() {
return DMOOWE3;
}

public short getDMOOWE3_I() {
return DMOOWE3_I;
}

public byte getDMOOWE3_IFLAG() {
return DMOOWE3_IFLAG;
}

public short getDMOOWE4() {
return DMOOWE4;
}

public short getDMOOWE4_I() {
return DMOOWE4_I;
}

public boolean getDMOOWE4_IFLAG() {
return DMOOWE4_IFLAG;
}

public short getDMOOWE5() {
return DMOOWE5;
}

public short getDMOOWE5_I() {
return DMOOWE5_I;
}

public boolean getDMOOWE5_IFLAG() {
return DMOOWE5_IFLAG;
}

public byte getDMOWEST3() {
return DMOWEST3;
}

public byte getDMOWEST4() {
return DMOWEST4;
}

public byte getDMOWEST5() {
return DMOWEST5;
}

public byte getDMOWHNM3() {
return DMOWHNM3;
}

public byte getDMOWHNM3_I() {
return DMOWHNM3_I;
}

public byte getDMOWHNM3_IFLAG() {
return DMOWHNM3_IFLAG;
}

public byte getDMOWHNM4() {
return DMOWHNM4;
}

public byte getDMOWHNM4_I() {
return DMOWHNM4_I;
}

public boolean getDMOWHNM4_IFLAG() {
return DMOWHNM4_IFLAG;
}

public byte getDMOWHNM5() {
return DMOWHNM5;
}

public byte getDMOWHNM5_I() {
return DMOWHNM5_I;
}

public boolean getDMOWHNM5_IFLAG() {
return DMOWHNM5_IFLAG;
}

public short getDMOWHNY3() {
return DMOWHNY3;
}

public short getDMOWHNY3_I() {
return DMOWHNY3_I;
}

public byte getDMOWHNY3_IFLAG() {
return DMOWHNY3_IFLAG;
}

public short getDMOWHNY4() {
return DMOWHNY4;
}

public short getDMOWHNY4_I() {
return DMOWHNY4_I;
}

public boolean getDMOWHNY4_IFLAG() {
return DMOWHNY4_IFLAG;
}

public short getDMOWHNY5() {
return DMOWHNY5;
}

public short getDMOWHNY5_I() {
return DMOWHNY5_I;
}

public boolean getDMOWHNY5_IFLAG() {
return DMOWHNY5_IFLAG;
}

public byte getDS12BEH4() {
return DS12BEH4;
}

public byte getDS12BEH5() {
return DS12BEH5;
}

public boolean getDS12OWE4() {
return DS12OWE4;
}

public boolean getDS12OWE5() {
return DS12OWE5;
}

public short getDSAMC1_I() {
return DSAMC1_I;
}

public boolean getDSAMC1_IFLAG() {
return DSAMC1_IFLAG;
}

public short getDSAMC2_I() {
return DSAMC2_I;
}

public byte getDSAMC2_IFLAG() {
return DSAMC2_IFLAG;
}

public short getDSAMC3_I() {
return DSAMC3_I;
}

public boolean getDSAMC3_IFLAG() {
return DSAMC3_IFLAG;
}

public short getDSAMC4() {
return DSAMC4;
}

public short getDSAMC4_I() {
return DSAMC4_I;
}

public byte getDSAMC4_IFLAG() {
return DSAMC4_IFLAG;
}

public short getDSAMC5() {
return DSAMC5;
}

public short getDSAMC5_I() {
return DSAMC5_I;
}

public boolean getDSAMC5_IFLAG() {
return DSAMC5_IFLAG;
}

public short getDSAMD1_I() {
return DSAMD1_I;
}

public boolean getDSAMD1_IFLAG() {
return DSAMD1_IFLAG;
}

public short getDSAMD2_I() {
return DSAMD2_I;
}

public byte getDSAMD2_IFLAG() {
return DSAMD2_IFLAG;
}

public short getDSAMD3_I() {
return DSAMD3_I;
}

public boolean getDSAMD3_IFLAG() {
return DSAMD3_IFLAG;
}

public short getDSAMD4() {
return DSAMD4;
}

public short getDSAMD4_I() {
return DSAMD4_I;
}

public boolean getDSAMD4_IFLAG() {
return DSAMD4_IFLAG;
}

public byte getDSAMD5() {
return DSAMD5;
}

public short getDSAMD5_I() {
return DSAMD5_I;
}

public boolean getDSAMD5_IFLAG() {
return DSAMD5_IFLAG;
}

public short getDSAMOS4() {
return DSAMOS4;
}

public short getDSAMOS5() {
return DSAMOS5;
}

public short getDSAMP1_I() {
return DSAMP1_I;
}

public boolean getDSAMP1_IFLAG() {
return DSAMP1_IFLAG;
}

public short getDSAMP2_I() {
return DSAMP2_I;
}

public byte getDSAMP2_IFLAG() {
return DSAMP2_IFLAG;
}

public short getDSAMP3_I() {
return DSAMP3_I;
}

public boolean getDSAMP3_IFLAG() {
return DSAMP3_IFLAG;
}

public short getDSAMP4() {
return DSAMP4;
}

public short getDSAMP4_I() {
return DSAMP4_I;
}

public byte getDSAMP4_IFLAG() {
return DSAMP4_IFLAG;
}

public short getDSAMP5() {
return DSAMP5;
}

public short getDSAMP5_I() {
return DSAMP5_I;
}

public boolean getDSAMP5_IFLAG() {
return DSAMP5_IFLAG;
}

public byte getDSANU1_I() {
return DSANU1_I;
}

public byte getDSANU1_IFLAG() {
return DSANU1_IFLAG;
}

public boolean getDSANU2_I() {
return DSANU2_I;
}

public boolean getDSANU2_IFLAG() {
return DSANU2_IFLAG;
}

public byte getDSANY1_I() {
return DSANY1_I;
}

public byte getDSANY1_IFLAG() {
return DSANY1_IFLAG;
}

public boolean getDSANY2_I() {
return DSANY2_I;
}

public boolean getDSANY2_IFLAG() {
return DSANY2_IFLAG;
}

public byte getDSCOS1_I() {
return DSCOS1_I;
}

public boolean getDSCOS1_IFLAG() {
return DSCOS1_IFLAG;
}

public byte getDSCOS2_I() {
return DSCOS2_I;
}

public byte getDSCOS2_IFLAG() {
return DSCOS2_IFLAG;
}

public byte getDSCOS3_I() {
return DSCOS3_I;
}

public byte getDSCOS3_IFLAG() {
return DSCOS3_IFLAG;
}

public byte getDSCOS4() {
return DSCOS4;
}

public byte getDSCOS4_I() {
return DSCOS4_I;
}

public byte getDSCOS4_IFLAG() {
return DSCOS4_IFLAG;
}

public byte getDSCOS5() {
return DSCOS5;
}

public byte getDSCOS5_I() {
return DSCOS5_I;
}

public byte getDSCOS5_IFLAG() {
return DSCOS5_IFLAG;
}

public byte getDSCSP1_I() {
return DSCSP1_I;
}

public boolean getDSCSP1_IFLAG() {
return DSCSP1_IFLAG;
}

public byte getDSCSP2_I() {
return DSCSP2_I;
}

public boolean getDSCSP2_IFLAG() {
return DSCSP2_IFLAG;
}

public byte getDSCSP3_I() {
return DSCSP3_I;
}

public boolean getDSCSP3_IFLAG() {
return DSCSP3_IFLAG;
}

public byte getDSCSP4() {
return DSCSP4;
}

public boolean getDSCSP4_I() {
return DSCSP4_I;
}

public boolean getDSCSP4_IFLAG() {
return DSCSP4_IFLAG;
}

public byte getDSCSP5() {
return DSCSP5;
}

public byte getDSCSP5_I() {
return DSCSP5_I;
}

public boolean getDSCSP5_IFLAG() {
return DSCSP5_IFLAG;
}

public byte getDSESB4() {
return DSESB4;
}

public boolean getDSESB5() {
return DSESB5;
}

public boolean getDSLEST5_IFLAG() {
return DSLEST5_IFLAG;
}

public byte getDSNAM1_I() {
return DSNAM1_I;
}

public boolean getDSNAM1_IFLAG() {
return DSNAM1_IFLAG;
}

public byte getDSNAM2_I() {
return DSNAM2_I;
}

public byte getDSNAM2_IFLAG() {
return DSNAM2_IFLAG;
}

public byte getDSNAM3_I() {
return DSNAM3_I;
}

public byte getDSNAM3_IFLAG() {
return DSNAM3_IFLAG;
}

public byte getDSNAM4() {
return DSNAM4;
}

public boolean getDSNAM4_I() {
return DSNAM4_I;
}

public byte getDSNAM4_IFLAG() {
return DSNAM4_IFLAG;
}

public byte getDSNAM5() {
return DSNAM5;
}

public boolean getDSNAM5_I() {
return DSNAM5_I;
}

public boolean getDSNAM5_IFLAG() {
return DSNAM5_IFLAG;
}

public byte getDSNUM() {
return DSNUM;
}

public byte getDSNUM2_I() {
return DSNUM2_I;
}

public boolean getDSNUM2_IFLAG() {
return DSNUM2_IFLAG;
}

public byte getDSNUM_I() {
return DSNUM_I;
}

public byte getDSNUM_IFLAG() {
return DSNUM_IFLAG;
}

public boolean getDSONM10() {
return DSONM10;
}

public boolean getDSONM7() {
return DSONM7;
}

public boolean getDSONM8() {
return DSONM8;
}

public boolean getDSONM9() {
return DSONM9;
}

public boolean getDSPER4() {
return DSPER4;
}

public boolean getDSPER5() {
return DSPER5;
}

public boolean getDSREC4() {
return DSREC4;
}

public boolean getDSREC5() {
return DSREC5;
}

public boolean getDSRSP1() {
return DSRSP1;
}

public boolean getDSRSP1_I() {
return DSRSP1_I;
}

public boolean getDSRSP1_IFLAG() {
return DSRSP1_IFLAG;
}

public byte getDSRSP2() {
return DSRSP2;
}

public boolean getDSRSP2_I() {
return DSRSP2_I;
}

public byte getDSRSP2_IFLAG() {
return DSRSP2_IFLAG;
}

public boolean getDSRSP3() {
return DSRSP3;
}

public boolean getDSRSP3_I() {
return DSRSP3_I;
}

public boolean getDSRSP3_IFLAG() {
return DSRSP3_IFLAG;
}

public boolean getDSRSP4() {
return DSRSP4;
}

public boolean getDSRSP4_I() {
return DSRSP4_I;
}

public boolean getDSRSP4_IFLAG() {
return DSRSP4_IFLAG;
}

public boolean getDSRSP5() {
return DSRSP5;
}

public boolean getDSRSP5_I() {
return DSRSP5_I;
}

public boolean getDSRSP5_IFLAG() {
return DSRSP5_IFLAG;
}

public int getDTLOWE1() {
return DTLOWE1;
}

public int getDTLOWE1_I() {
return DTLOWE1_I;
}

public boolean getDTLOWE1_IFLAG() {
return DTLOWE1_IFLAG;
}

public short getDTLOWE2() {
return DTLOWE2;
}

public short getDTLOWE2_I() {
return DTLOWE2_I;
}

public boolean getDTLOWE2_IFLAG() {
return DTLOWE2_IFLAG;
}

public short getDTLOWE3() {
return DTLOWE3;
}

public short getDTLOWE3_I() {
return DTLOWE3_I;
}

public boolean getDTLOWE3_IFLAG() {
return DTLOWE3_IFLAG;
}

public boolean getDTLOWE4_I() {
return DTLOWE4_I;
}

public boolean getDTLOWE4_IFLAG() {
return DTLOWE4_IFLAG;
}

public boolean getDTLOWE5_I() {
return DTLOWE5_I;
}

public boolean getDTLOWE5_IFLAG() {
return DTLOWE5_IFLAG;
}

public byte getDTLOWEB1() {
return DTLOWEB1;
}

public byte getDTLOWEB1_I() {
return DTLOWEB1_I;
}

public boolean getDTLOWEB1_IFLAG() {
return DTLOWEB1_IFLAG;
}

public byte getDTLOWEB2() {
return DTLOWEB2;
}

public byte getDTLOWEB2_I() {
return DTLOWEB2_I;
}

public boolean getDTLOWEB2_IFLAG() {
return DTLOWEB2_IFLAG;
}

public boolean getDTLOWEB3() {
return DTLOWEB3;
}

public byte getDTLOWEB3_I() {
return DTLOWEB3_I;
}

public boolean getDTLOWEB3_IFLAG() {
return DTLOWEB3_IFLAG;
}

public boolean getDTLOWEB4_I() {
return DTLOWEB4_I;
}

public boolean getDTLOWEB4_IFLAG() {
return DTLOWEB4_IFLAG;
}

public boolean getDTLOWEB5_I() {
return DTLOWEB5_I;
}

public boolean getDTLOWEB5_IFLAG() {
return DTLOWEB5_IFLAG;
}

public byte getDTLTYPE1() {
return DTLTYPE1;
}

public byte getDTLTYPE1_I() {
return DTLTYPE1_I;
}

public boolean getDTLTYPE1_IFLAG() {
return DTLTYPE1_IFLAG;
}

public byte getDTLTYPE2() {
return DTLTYPE2;
}

public byte getDTLTYPE2_I() {
return DTLTYPE2_I;
}

public boolean getDTLTYPE2_IFLAG() {
return DTLTYPE2_IFLAG;
}

public byte getDTLTYPE3() {
return DTLTYPE3;
}

public byte getDTLTYPE3_I() {
return DTLTYPE3_I;
}

public boolean getDTLTYPE3_IFLAG() {
return DTLTYPE3_IFLAG;
}

public boolean getDTLTYPE4_I() {
return DTLTYPE4_I;
}

public boolean getDTLTYPE4_IFLAG() {
return DTLTYPE4_IFLAG;
}

public boolean getDTLTYPE5_I() {
return DTLTYPE5_I;
}

public boolean getDTLTYPE5_IFLAG() {
return DTLTYPE5_IFLAG;
}

public short getDTTOWE1() {
return DTTOWE1;
}

public short getDTTOWE2() {
return DTTOWE2;
}

public boolean getDTTOWE3() {
return DTTOWE3;
}

public byte getDTTOWEB1() {
return DTTOWEB1;
}

public boolean getDTTOWEB10() {
return DTTOWEB10;
}

public boolean getDTTOWEB11() {
return DTTOWEB11;
}

public boolean getDTTOWEB12() {
return DTTOWEB12;
}

public boolean getDTTOWEB13() {
return DTTOWEB13;
}

public boolean getDTTOWEB14() {
return DTTOWEB14;
}

public boolean getDTTOWEB15() {
return DTTOWEB15;
}

public boolean getDTTOWEB2() {
return DTTOWEB2;
}

public boolean getDTTOWEB3() {
return DTTOWEB3;
}

public boolean getDTTOWEB4() {
return DTTOWEB4;
}

public boolean getDTTOWEB5() {
return DTTOWEB5;
}

public boolean getDTTOWEB6() {
return DTTOWEB6;
}

public boolean getDTTOWEB7() {
return DTTOWEB7;
}

public boolean getDTTOWEB8() {
return DTTOWEB8;
}

public boolean getDTTOWEB9() {
return DTTOWEB9;
}

public byte getDVAGE18() {
return DVAGE18;
}

public byte getDVAGEW3BAND() {
return DVAGEW3BAND;
}

public byte getDVBENU1() {
return DVBENU1;
}

public int getDVCOINV() {
return DVCOINV;
}

public short getDVCTCANNUAL() {
return DVCTCANNUAL;
}

public short getDVDHPOWE3() {
return DVDHPOWE3;
}

public short getDVDHPOWE4() {
return DVDHPOWE4;
}

public short getDVDHPOWE5() {
return DVDHPOWE5;
}

public short getDVDMOOWE3() {
return DVDMOOWE3;
}

public short getDVDMOOWE4() {
return DVDMOOWE4;
}

public short getDVDMOOWE5() {
return DVDMOOWE5;
}

public int getDVGRSPAY_I() {
return DVGRSPAY_I;
}

public boolean getDVGRSPAY_IFLAG() {
return DVGRSPAY_IFLAG;
}

public boolean getDVHASBOND() {
return DVHASBOND;
}

public byte getDVHASCC() {
return DVHASCC;
}

public boolean getDVHASDBR_ORIG() {
return DVHASDBR_ORIG;
}

public boolean getDVHASEMPSH() {
return DVHASEMPSH;
}

public boolean getDVHASGILT() {
return DVHASGILT;
}

public boolean getDVHASISA() {
return DVHASISA;
}

public boolean getDVHASLINS() {
return DVHASLINS;
}

public boolean getDVHASNHP() {
return DVHASNHP;
}

public boolean getDVHASNOFA() {
return DVHASNOFA;
}

public boolean getDVHASNSP() {
return DVHASNSP;
}

public boolean getDVHASOINV() {
return DVHASOINV;
}

public boolean getDVHASOTHSH() {
return DVHASOTHSH;
}

public byte getDVHASSC() {
return DVHASSC;
}

public boolean getDVHASUTRUST() {
return DVHASUTRUST;
}

public int getDVNETPAY_I() {
return DVNETPAY_I;
}

public boolean getDVNETPAY_IFLAG() {
return DVNETPAY_IFLAG;
}

public short getDVNWHP_SUM() {
return DVNWHP_SUM;
}

public short getDVOIGGTANNUAL() {
return DVOIGGTANNUAL;
}

public int getDVOIGOEANNUAL_I() {
return DVOIGOEANNUAL_I;
}

public int getDVOIGOSANNUAL_I() {
return DVOIGOSANNUAL_I;
}

public int getDVOIGPPANNUAL_I() {
return DVOIGPPANNUAL_I;
}

public short getDVOIGRRANNUAL() {
return DVOIGRRANNUAL;
}

public byte getDVPUBLPRIV() {
return DVPUBLPRIV;
}

public int getDVRENTAMTANNUAL() {
return DVRENTAMTANNUAL;
}

public byte getDVRENTBNDANNUAL_I() {
return DVRENTBNDANNUAL_I;
}

public boolean getDVRENTBNDANNUAL_IFLAG() {
return DVRENTBNDANNUAL_IFLAG;
}

public byte getDVSAME_I() {
return DVSAME_I;
}

public boolean getDVSAME_IFLAG() {
return DVSAME_IFLAG;
}

public byte getDVSEGRSPAYBAND_I() {
return DVSEGRSPAYBAND_I;
}

public boolean getDVSEGRSPAYBAND_IFLAG() {
return DVSEGRSPAYBAND_IFLAG;
}

public byte getDVSENETPAYBAND_I() {
return DVSENETPAYBAND_I;
}

public boolean getDVSENETPAYBAND_IFLAG() {
return DVSENETPAYBAND_IFLAG;
}

public boolean getDVSEPANNUAL09() {
return DVSEPANNUAL09;
}

public boolean getDVSEPANNUAL10() {
return DVSEPANNUAL10;
}

public boolean getDVSEPANNUAL11() {
return DVSEPANNUAL11;
}

public boolean getDVSEPANNUAL12() {
return DVSEPANNUAL12;
}

public boolean getDVSEPANNUAL13() {
return DVSEPANNUAL13;
}

public boolean getDVSEPANNUAL14() {
return DVSEPANNUAL14;
}

public boolean getDVSEPANNUAL15() {
return DVSEPANNUAL15;
}

public boolean getDVSEPANNUAL16() {
return DVSEPANNUAL16;
}

public boolean getDVSEPANNUAL17() {
return DVSEPANNUAL17;
}

public boolean getDVSEPANNUAL18() {
return DVSEPANNUAL18;
}

public boolean getDVSEPANNUAL19() {
return DVSEPANNUAL19;
}

public boolean getDVSEPANNUAL20() {
return DVSEPANNUAL20;
}

public double getDVSHODVAL() {
return DVSHODVAL;
}

public double getDVSPECANNUAL01() {
return DVSPECANNUAL01;
}

public double getDVSPECANNUAL02() {
return DVSPECANNUAL02;
}

public double getDVSPECANNUAL03() {
return DVSPECANNUAL03;
}

public double getDVSPECANNUAL04() {
return DVSPECANNUAL04;
}

public short getDVSPECANNUAL05() {
return DVSPECANNUAL05;
}

public short getDVSPECANNUAL06() {
return DVSPECANNUAL06;
}

public short getDVSPECANNUAL07() {
return DVSPECANNUAL07;
}

public short getDVSPECANNUAL08() {
return DVSPECANNUAL08;
}

public short getDVSPECANNUAL09() {
return DVSPECANNUAL09;
}

public short getDVSPECANNUAL10() {
return DVSPECANNUAL10;
}

public boolean getDVSTAT() {
return DVSTAT;
}

public short getDVTOGTCANNUAL() {
return DVTOGTCANNUAL;
}

public double getDVTOTALLBENANNUAL() {
return DVTOTALLBENANNUAL;
}

public double getDVTOTBENANNUAL() {
return DVTOTBENANNUAL;
}

public double getDVTOTTAXANNUAL() {
return DVTOTTAXANNUAL;
}

public byte getDVWAVE() {
return DVWAVE;
}

public double getDVWTCANNUAL() {
return DVWTCANNUAL;
}

public byte getECACT() {
return ECACT;
}

public boolean getEDAGE() {
return EDAGE;
}

public boolean getEMPSTAT1() {
return EMPSTAT1;
}

public byte getEMPSTAT2() {
return EMPSTAT2;
}

public boolean getETYPE() {
return ETYPE;
}

public byte getFINVTY01_IFLAG() {
return FINVTY01_IFLAG;
}

public byte getFINVTY02_IFLAG() {
return FINVTY02_IFLAG;
}

public byte getFINVTY03_IFLAG() {
return FINVTY03_IFLAG;
}

public byte getFINVTY04_IFLAG() {
return FINVTY04_IFLAG;
}

public byte getFINVTY05_IFLAG() {
return FINVTY05_IFLAG;
}

public byte getFINVTY06_IFLAG() {
return FINVTY06_IFLAG;
}

public byte getFINVTY07_IFLAG() {
return FINVTY07_IFLAG;
}

public byte getFINVTY08_IFLAG() {
return FINVTY08_IFLAG;
}

public byte getFINVTY09_IFLAG() {
return FINVTY09_IFLAG;
}

public byte getFINVTY10_IFLAG() {
return FINVTY10_IFLAG;
}

public boolean getFINVTY11_IFLAG() {
return FINVTY11_IFLAG;
}

public short getFLNOS5() {
return FLNOS5;
}

public byte getFLOORN() {
return FLOORN;
}

public int getFNSVAL1() {
return FNSVAL1;
}

public int getFSHADA() {
return FSHADA;
}

public byte getFSHADAB() {
return FSHADAB;
}

public byte getFSHADD() {
return FSHADD;
}

public boolean getFSTYPIN5() {
return FSTYPIN5;
}

public boolean getFSTYPSH5() {
return FSTYPSH5;
}

public double getHPLFT3() {
return HPLFT3;
}

public double getHPLFT4() {
return HPLFT4;
}

public double getHPLFT5() {
return HPLFT5;
}

public byte getHPMN3() {
return HPMN3;
}

public byte getHPMN4() {
return HPMN4;
}

public byte getHPMN5() {
return HPMN5;
}

public double getHPOS3() {
return HPOS3;
}

public double getHPOS4() {
return HPOS4;
}

public double getHPOS5() {
return HPOS5;
}

public byte getHPYR3() {
return HPYR3;
}

public byte getHPYR4() {
return HPYR4;
}

public byte getHPYR5() {
return HPYR5;
}

public byte getH_FLAG1() {
return H_FLAG1;
}

public boolean getIGDS12() {
return IGDS12;
}

public boolean getIGDS13() {
return IGDS13;
}

public boolean getIGDS14() {
return IGDS14;
}

public boolean getIGDS16() {
return IGDS16;
}

public boolean getIGDS17() {
return IGDS17;
}

public boolean getIGDS18() {
return IGDS18;
}

public boolean getIGDS19() {
return IGDS19;
}

public boolean getIGDS20() {
return IGDS20;
}

public boolean getIGDS21() {
return IGDS21;
}

public boolean getIGDS6() {
return IGDS6;
}

public boolean getIGDS7() {
return IGDS7;
}

public boolean getIHSE13() {
return IHSE13;
}

public boolean getIHSE14() {
return IHSE14;
}

public boolean getIHSE15() {
return IHSE15;
}

public boolean getIHSE16() {
return IHSE16;
}

public boolean getIHSE17() {
return IHSE17;
}

public boolean getIHSE18() {
return IHSE18;
}

public boolean getIHSE4() {
return IHSE4;
}

public boolean getIHSE5() {
return IHSE5;
}

public boolean getIHSE6() {
return IHSE6;
}

public boolean getILNUSE06() {
return ILNUSE06;
}

public boolean getILNUSE07() {
return ILNUSE07;
}

public boolean getILNUSE08() {
return ILNUSE08;
}

public boolean getILNUSE09() {
return ILNUSE09;
}

public boolean getILNUSE10() {
return ILNUSE10;
}

public byte getILUMTY2_I() {
return ILUMTY2_I;
}

public boolean getILUMTY2_IFLAG() {
return ILUMTY2_IFLAG;
}

public byte getILUMTY3_I() {
return ILUMTY3_I;
}

public boolean getILUMTY3_IFLAG() {
return ILUMTY3_IFLAG;
}

public boolean getILUMTY4() {
return ILUMTY4;
}

public boolean getILUMTY4_I() {
return ILUMTY4_I;
}

public boolean getILUMTY4_IFLAG() {
return ILUMTY4_IFLAG;
}

public boolean getILUMTY5() {
return ILUMTY5;
}

public boolean getILUMTY5_I() {
return ILUMTY5_I;
}

public boolean getILUMTY5_IFLAG() {
return ILUMTY5_IFLAG;
}

public boolean getILUMTY6() {
return ILUMTY6;
}

public boolean getILUMTY6_I() {
return ILUMTY6_I;
}

public boolean getILUMTY6_IFLAG() {
return ILUMTY6_IFLAG;
}

public boolean getILUMTY7() {
return ILUMTY7;
}

public boolean getILUMTY7_I() {
return ILUMTY7_I;
}

public boolean getILUMTY7_IFLAG() {
return ILUMTY7_IFLAG;
}

public byte getINSPOL() {
return INSPOL;
}

public byte getINTRO() {
return INTRO;
}

public int getIVAL1() {
return IVAL1;
}

public int getIVAL2_I() {
return IVAL2_I;
}

public int getIVAL3_I() {
return IVAL3_I;
}

public boolean getIWAT10() {
return IWAT10;
}

public boolean getIWAT11() {
return IWAT11;
}

public boolean getIWAT12() {
return IWAT12;
}

public boolean getIWAT14() {
return IWAT14;
}

public boolean getIWAT15() {
return IWAT15;
}

public boolean getIWAT16() {
return IWAT16;
}

public boolean getIWAT17() {
return IWAT17;
}

public boolean getIWAT18() {
return IWAT18;
}

public byte getIWAT8() {
return IWAT8;
}

public byte getIWAT9() {
return IWAT9;
}

public byte getIWHO() {
return IWHO;
}

public String getLEA() {
return LEA;
}

public byte getLIVWTH() {
return LIVWTH;
}

public byte getLVTDAY() {
return LVTDAY;
}

public double getMOLFT3() {
return MOLFT3;
}

public double getMOLFT4() {
return MOLFT4;
}

public double getMOLFT5() {
return MOLFT5;
}

public byte getMOMN3() {
return MOMN3;
}

public byte getMOMN4() {
return MOMN4;
}

public byte getMOMN5() {
return MOMN5;
}

public double getMOOS3() {
return MOOS3;
}

public double getMOOS4() {
return MOOS4;
}

public double getMOOS5() {
return MOOS5;
}

public byte getMOYR3() {
return MOYR3;
}

public byte getMOYR4() {
return MOYR4;
}

public byte getMOYR5() {
return MOYR5;
}

public boolean getNSLBNK4() {
return NSLBNK4;
}

public boolean getNSLBNK5() {
return NSLBNK5;
}

public boolean getNSLC4() {
return NSLC4;
}

public boolean getNSLC5() {
return NSLC5;
}

public double getNSSEC() {
return NSSEC;
}

public byte getNWHP() {
return NWHP;
}

public byte getNWHPNO() {
return NWHPNO;
}

public short getNWHPVAL1() {
return NWHPVAL1;
}

public short getNWHPVAL2() {
return NWHPVAL2;
}

public short getNWHPVAL3() {
return NWHPVAL3;
}

public short getOIGGT() {
return OIGGT;
}

public short getOIGRR() {
return OIGRR;
}

public boolean getOIMPRS7() {
return OIMPRS7;
}

public boolean getOIMPRS8() {
return OIMPRS8;
}

public boolean getOIMPRS9() {
return OIMPRS9;
}

public boolean getONOSAVE7() {
return ONOSAVE7;
}

public boolean getONOSAVE8() {
return ONOSAVE8;
}

public boolean getONOSAVE9() {
return ONOSAVE9;
}

public byte getOPENSAV() {
return OPENSAV;
}

public boolean getORUNDO09() {
return ORUNDO09;
}

public boolean getORUNDO10() {
return ORUNDO10;
}

public boolean getORUNDO11() {
return ORUNDO11;
}

public byte getOSAFERE2() {
return OSAFERE2;
}

public byte getOSAFERET() {
return OSAFERET;
}

public byte getOSAVA() {
return OSAVA;
}

public byte getOSAVB() {
return OSAVB;
}

public byte getOSAVC() {
return OSAVC;
}

public boolean getOSLBNK4() {
return OSLBNK4;
}

public boolean getOSLBNK5() {
return OSLBNK5;
}

public byte getOWHYSAV01() {
return OWHYSAV01;
}

public byte getOWHYSAV02() {
return OWHYSAV02;
}

public byte getOWHYSAV03() {
return OWHYSAV03;
}

public byte getOWHYSAV04() {
return OWHYSAV04;
}

public byte getOWHYSAV05() {
return OWHYSAV05;
}

public byte getOWHYSAV06() {
return OWHYSAV06;
}

public byte getOWHYSAV07() {
return OWHYSAV07;
}

public byte getOWHYSAV08() {
return OWHYSAV08;
}

public byte getOWHYSAV09() {
return OWHYSAV09;
}

public byte getOWHYSAV10() {
return OWHYSAV10;
}

public boolean getOWHYSAV11() {
return OWHYSAV11;
}

public boolean getOWRSRS08() {
return OWRSRS08;
}

public boolean getOWRSRS09() {
return OWRSRS09;
}

public boolean getOWRSRS10() {
return OWRSRS10;
}

public byte getPADDFUT() {
return PADDFUT;
}

public boolean getPADDFUT2() {
return PADDFUT2;
}

public short getPAVCAM1() {
return PAVCAM1;
}

public short getPAVCAM2() {
return PAVCAM2;
}

public byte getPAVCFG1() {
return PAVCFG1;
}

public boolean getPAVCFG2() {
return PAVCFG2;
}

public double getPAVCFR1() {
return PAVCFR1;
}

public byte getPAVCFR2() {
return PAVCFR2;
}

public byte getPAVCH1() {
return PAVCH1;
}

public byte getPAVCH2() {
return PAVCH2;
}

public byte getPAVCIN1() {
return PAVCIN1;
}

public byte getPAVCIN2() {
return PAVCIN2;
}

public byte getPAVCPR1() {
return PAVCPR1;
}

public boolean getPAVCPR2() {
return PAVCPR2;
}

public boolean getPDCVAL3() {
return PDCVAL3;
}

public byte getPEMFIN() {
return PEMFIN;
}

public byte getPESAME_I() {
return PESAME_I;
}

public boolean getPESAME_IFLAG() {
return PESAME_IFLAG;
}

public boolean getPEVERC_PEVERNC__SFLAG() {
return PEVERC_PEVERNC__SFLAG;
}

public byte getPEWYNO01() {
return PEWYNO01;
}

public byte getPEWYNO02() {
return PEWYNO02;
}

public byte getPEWYNO03() {
return PEWYNO03;
}

public byte getPEWYNO04() {
return PEWYNO04;
}

public byte getPEWYNO05() {
return PEWYNO05;
}

public boolean getPEWYNO06() {
return PEWYNO06;
}

public boolean getPEWYNO07() {
return PEWYNO07;
}

public boolean getPEWYNO08() {
return PEWYNO08;
}

public boolean getPEWYNO09() {
return PEWYNO09;
}

public boolean getPEWYNO10() {
return PEWYNO10;
}

public boolean getPEWYNO11() {
return PEWYNO11;
}

public boolean getPFANEH3() {
return PFANEH3;
}

public boolean getPFANEH5() {
return PFANEH5;
}

public boolean getPFANEH6() {
return PFANEH6;
}

public boolean getPFANEXM1() {
return PFANEXM1;
}

public boolean getPFANEXM2() {
return PFANEXM2;
}

public boolean getPFANEXM3() {
return PFANEXM3;
}

public boolean getPFANEXM4() {
return PFANEXM4;
}

public boolean getPFANEXM5() {
return PFANEXM5;
}

public boolean getPFANEXM6() {
return PFANEXM6;
}

public boolean getPFANEXY1() {
return PFANEXY1;
}

public boolean getPFANEXY2() {
return PFANEXY2;
}

public boolean getPFANEXY3() {
return PFANEXY3;
}

public boolean getPFANEXY4() {
return PFANEXY4;
}

public boolean getPFANEXY5() {
return PFANEXY5;
}

public boolean getPFANEXY6() {
return PFANEXY6;
}

public byte getPFANGA3() {
return PFANGA3;
}

public boolean getPFANGA5() {
return PFANGA5;
}

public boolean getPFANGA6() {
return PFANGA6;
}

public boolean getPFANIF3() {
return PFANIF3;
}

public boolean getPFANIF5() {
return PFANIF5;
}

public boolean getPFANIF6() {
return PFANIF6;
}

public byte getPFANJT3() {
return PFANJT3;
}

public boolean getPFANJT5() {
return PFANJT5;
}

public boolean getPFANJT6() {
return PFANJT6;
}

public boolean getPFANLM1() {
return PFANLM1;
}

public boolean getPFANLM2() {
return PFANLM2;
}

public boolean getPFANLM3() {
return PFANLM3;
}

public boolean getPFANLM4() {
return PFANLM4;
}

public boolean getPFANLM5() {
return PFANLM5;
}

public boolean getPFANLM6() {
return PFANLM6;
}

public boolean getPFANN10() {
return PFANN10;
}

public byte getPFANN11() {
return PFANN11;
}

public boolean getPFANN12() {
return PFANN12;
}

public boolean getPFANN13() {
return PFANN13;
}

public boolean getPFANN14() {
return PFANN14;
}

public boolean getPFANN15() {
return PFANN15;
}

public boolean getPFANN17() {
return PFANN17;
}

public boolean getPFANN18() {
return PFANN18;
}

public boolean getPFANN19() {
return PFANN19;
}

public boolean getPFANN2() {
return PFANN2;
}

public boolean getPFANN20() {
return PFANN20;
}

public boolean getPFANN21() {
return PFANN21;
}

public boolean getPFANN22() {
return PFANN22;
}

public boolean getPFANN23() {
return PFANN23;
}

public boolean getPFANN24() {
return PFANN24;
}

public boolean getPFANN25() {
return PFANN25;
}

public boolean getPFANN26() {
return PFANN26;
}

public boolean getPFANN27() {
return PFANN27;
}

public boolean getPFANN28() {
return PFANN28;
}

public boolean getPFANN29() {
return PFANN29;
}

public boolean getPFANN3() {
return PFANN3;
}

public boolean getPFANN30() {
return PFANN30;
}

public boolean getPFANN4() {
return PFANN4;
}

public boolean getPFANN5() {
return PFANN5;
}

public boolean getPFANN7() {
return PFANN7;
}

public boolean getPFANN8() {
return PFANN8;
}

public boolean getPFANN9() {
return PFANN9;
}

public boolean getPFANVB1() {
return PFANVB1;
}

public boolean getPFANVB2() {
return PFANVB2;
}

public boolean getPFANVB3() {
return PFANVB3;
}

public boolean getPFANVB4() {
return PFANVB4;
}

public boolean getPFANVB5() {
return PFANVB5;
}

public boolean getPFANVB6() {
return PFANVB6;
}

public short getPFANVI1() {
return PFANVI1;
}

public short getPFANVI2() {
return PFANVI2;
}

public short getPFANVI3() {
return PFANVI3;
}

public boolean getPFANVI4() {
return PFANVI4;
}

public boolean getPFANVI5() {
return PFANVI5;
}

public boolean getPFANVI6() {
return PFANVI6;
}

public short getPFBEG1() {
return PFBEG1;
}

public short getPFBEG2() {
return PFBEG2;
}

public short getPFBEG3() {
return PFBEG3;
}

public short getPFBEG4() {
return PFBEG4;
}

public boolean getPFBEG5() {
return PFBEG5;
}

public boolean getPFBEG6() {
return PFBEG6;
}

public boolean getPFCASH5() {
return PFCASH5;
}

public boolean getPFCASH5_I() {
return PFCASH5_I;
}

public boolean getPFCASH5_IFLAG() {
return PFCASH5_IFLAG;
}

public boolean getPFCASH6() {
return PFCASH6;
}

public boolean getPFCASH6_I() {
return PFCASH6_I;
}

public boolean getPFCASH6_IFLAG() {
return PFCASH6_IFLAG;
}

public int getPFDDV4() {
return PFDDV4;
}

public boolean getPFDDV5() {
return PFDDV5;
}

public boolean getPFDDV6() {
return PFDDV6;
}

public boolean getPFDDVB4() {
return PFDDVB4;
}

public boolean getPFDDVB5() {
return PFDDVB5;
}

public boolean getPFDDVB6() {
return PFDDVB6;
}

public boolean getPFDRAW4() {
return PFDRAW4;
}

public boolean getPFDRAW5() {
return PFDRAW5;
}

public boolean getPFDRAW6() {
return PFDRAW6;
}

public boolean getPFDRA___W3() {
return PFDRA___W3;
}

public short getPFDRINC2() {
return PFDRINC2;
}

public boolean getPFDRINC3() {
return PFDRINC3;
}

public boolean getPFDRINC4() {
return PFDRINC4;
}

public boolean getPFDRINC5() {
return PFDRINC5;
}

public boolean getPFDRINC6() {
return PFDRINC6;
}

public boolean getPFDRINCB1() {
return PFDRINCB1;
}

public boolean getPFDRINCB2() {
return PFDRINCB2;
}

public boolean getPFDRINCB3() {
return PFDRINCB3;
}

public boolean getPFDRINCB4() {
return PFDRINCB4;
}

public boolean getPFDRINCB5() {
return PFDRINCB5;
}

public boolean getPFDRINCB6() {
return PFDRINCB6;
}

public boolean getPFDRVB2() {
return PFDRVB2;
}

public boolean getPFDRVB3() {
return PFDRVB3;
}

public boolean getPFDRVB4() {
return PFDRVB4;
}

public boolean getPFDRVB5() {
return PFDRVB5;
}

public boolean getPFDRVB6() {
return PFDRVB6;
}

public int getPFDRVI2() {
return PFDRVI2;
}

public boolean getPFDRVI3() {
return PFDRVI3;
}

public boolean getPFDRVI4() {
return PFDRVI4;
}

public boolean getPFDRVI5() {
return PFDRVI5;
}

public boolean getPFDRVI6() {
return PFDRVI6;
}

public short getPFEND1() {
return PFEND1;
}

public short getPFEND2() {
return PFEND2;
}

public short getPFEND3() {
return PFEND3;
}

public short getPFEND4() {
return PFEND4;
}

public boolean getPFEND5() {
return PFEND5;
}

public boolean getPFEND6() {
return PFEND6;
}

public boolean getPFFAAG3() {
return PFFAAG3;
}

public boolean getPFFAAG4() {
return PFFAAG4;
}

public boolean getPFFAAG5() {
return PFFAAG5;
}

public boolean getPFFAAG6() {
return PFFAAG6;
}

public boolean getPFFAN10() {
return PFFAN10;
}

public boolean getPFFAN12() {
return PFFAN12;
}

public boolean getPFFAN13() {
return PFFAN13;
}

public boolean getPFFAN14() {
return PFFAN14;
}

public boolean getPFFAN15() {
return PFFAN15;
}

public boolean getPFFAN17() {
return PFFAN17;
}

public boolean getPFFAN18() {
return PFFAN18;
}

public boolean getPFFAN19() {
return PFFAN19;
}

public boolean getPFFAN20() {
return PFFAN20;
}

public boolean getPFFAN21() {
return PFFAN21;
}

public boolean getPFFAN22() {
return PFFAN22;
}

public boolean getPFFAN23() {
return PFFAN23;
}

public boolean getPFFAN24() {
return PFFAN24;
}

public boolean getPFFAN25() {
return PFFAN25;
}

public boolean getPFFAN26() {
return PFFAN26;
}

public boolean getPFFAN27() {
return PFFAN27;
}

public boolean getPFFAN28() {
return PFFAN28;
}

public boolean getPFFAN29() {
return PFFAN29;
}

public boolean getPFFAN3() {
return PFFAN3;
}

public boolean getPFFAN30() {
return PFFAN30;
}

public boolean getPFFAN4() {
return PFFAN4;
}

public boolean getPFFAN5() {
return PFFAN5;
}

public boolean getPFFAN7() {
return PFFAN7;
}

public boolean getPFFAN8() {
return PFFAN8;
}

public boolean getPFFAN9() {
return PFFAN9;
}

public boolean getPFFAWH10() {
return PFFAWH10;
}

public boolean getPFFAWH11() {
return PFFAWH11;
}

public boolean getPFFAWH12() {
return PFFAWH12;
}

public byte getPFFAWH13() {
return PFFAWH13;
}

public boolean getPFFAWH14() {
return PFFAWH14;
}

public boolean getPFFAWH15() {
return PFFAWH15;
}

public boolean getPFFAWH17() {
return PFFAWH17;
}

public boolean getPFFAWH18() {
return PFFAWH18;
}

public boolean getPFFAWH19() {
return PFFAWH19;
}

public boolean getPFFAWH2() {
return PFFAWH2;
}

public boolean getPFFAWH20() {
return PFFAWH20;
}

public boolean getPFFAWH21() {
return PFFAWH21;
}

public boolean getPFFAWH22() {
return PFFAWH22;
}

public boolean getPFFAWH23() {
return PFFAWH23;
}

public boolean getPFFAWH24() {
return PFFAWH24;
}

public boolean getPFFAWH25() {
return PFFAWH25;
}

public boolean getPFFAWH26() {
return PFFAWH26;
}

public boolean getPFFAWH27() {
return PFFAWH27;
}

public boolean getPFFAWH28() {
return PFFAWH28;
}

public boolean getPFFAWH29() {
return PFFAWH29;
}

public boolean getPFFAWH3() {
return PFFAWH3;
}

public boolean getPFFAWH30() {
return PFFAWH30;
}

public boolean getPFFAWH31() {
return PFFAWH31;
}

public boolean getPFFAWH32() {
return PFFAWH32;
}

public boolean getPFFAWH33() {
return PFFAWH33;
}

public boolean getPFFAWH34() {
return PFFAWH34;
}

public boolean getPFFAWH35() {
return PFFAWH35;
}

public boolean getPFFAWH36() {
return PFFAWH36;
}

public boolean getPFFAWH4() {
return PFFAWH4;
}

public boolean getPFFAWH5() {
return PFFAWH5;
}

public byte getPFFAWH7() {
return PFFAWH7;
}

public boolean getPFFAWH8() {
return PFFAWH8;
}

public boolean getPFFAWH9() {
return PFFAWH9;
}

public boolean getPFINCA6_IFLAG() {
return PFINCA6_IFLAG;
}

public boolean getPFLMUS5() {
return PFLMUS5;
}

public boolean getPFLMUS6() {
return PFLMUS6;
}

public boolean getPFLMV5() {
return PFLMV5;
}

public boolean getPFLMV5_I() {
return PFLMV5_I;
}

public boolean getPFLMV5_IFLAG() {
return PFLMV5_IFLAG;
}

public boolean getPFLMV6_I() {
return PFLMV6_I;
}

public boolean getPFLMV6_IFLAG() {
return PFLMV6_IFLAG;
}

public boolean getPFLMVB4() {
return PFLMVB4;
}

public boolean getPFLMVB5() {
return PFLMVB5;
}

public boolean getPFLMVB5_I() {
return PFLMVB5_I;
}

public boolean getPFLMVB5_IFLAG() {
return PFLMVB5_IFLAG;
}

public boolean getPFLMVB6() {
return PFLMVB6;
}

public boolean getPFLMVB6_I() {
return PFLMVB6_I;
}

public boolean getPFLMVB6_IFLAG() {
return PFLMVB6_IFLAG;
}

public boolean getPFLUMALL5() {
return PFLUMALL5;
}

public boolean getPFLUMALL5_I() {
return PFLUMALL5_I;
}

public boolean getPFLUMALL5_IFLAG() {
return PFLUMALL5_IFLAG;
}

public boolean getPFLUMALL6() {
return PFLUMALL6;
}

public boolean getPFLUMALL6_I() {
return PFLUMALL6_I;
}

public boolean getPFLUMALL6_IFLAG() {
return PFLUMALL6_IFLAG;
}

public byte getPFPENVB1() {
return PFPENVB1;
}

public boolean getPFPENVB2() {
return PFPENVB2;
}

public boolean getPFPENVB3() {
return PFPENVB3;
}

public boolean getPFPENVB4() {
return PFPENVB4;
}

public boolean getPFPENVB5() {
return PFPENVB5;
}

public boolean getPFPENVB6() {
return PFPENVB6;
}

public int getPFPENVI1() {
return PFPENVI1;
}

public short getPFPENVI2() {
return PFPENVI2;
}

public short getPFPENVI3() {
return PFPENVI3;
}

public short getPFPENVI4() {
return PFPENVI4;
}

public boolean getPFPENVI5() {
return PFPENVI5;
}

public boolean getPFPENVI6() {
return PFPENVI6;
}

public boolean getPFREM5() {
return PFREM5;
}

public boolean getPFREM5_I() {
return PFREM5_I;
}

public boolean getPFREM5_IFLAG() {
return PFREM5_IFLAG;
}

public boolean getPFREM6() {
return PFREM6;
}

public boolean getPFREM6_I() {
return PFREM6_I;
}

public boolean getPFREM6_IFLAG() {
return PFREM6_IFLAG;
}

public byte getPFSIPTY1() {
return PFSIPTY1;
}

public byte getPFSIPTY10() {
return PFSIPTY10;
}

public boolean getPFSIPTY11() {
return PFSIPTY11;
}

public boolean getPFSIPTY12() {
return PFSIPTY12;
}

public boolean getPFSIPTY13() {
return PFSIPTY13;
}

public boolean getPFSIPTY14() {
return PFSIPTY14;
}

public byte getPFSIPTY15() {
return PFSIPTY15;
}

public boolean getPFSIPTY16() {
return PFSIPTY16;
}

public boolean getPFSIPTY17() {
return PFSIPTY17;
}

public boolean getPFSIPTY18() {
return PFSIPTY18;
}

public boolean getPFSIPTY19() {
return PFSIPTY19;
}

public byte getPFSIPTY2() {
return PFSIPTY2;
}

public boolean getPFSIPTY20() {
return PFSIPTY20;
}

public boolean getPFSIPTY21() {
return PFSIPTY21;
}

public byte getPFSIPTY22() {
return PFSIPTY22;
}

public boolean getPFSIPTY23() {
return PFSIPTY23;
}

public boolean getPFSIPTY24() {
return PFSIPTY24;
}

public boolean getPFSIPTY25() {
return PFSIPTY25;
}

public boolean getPFSIPTY26() {
return PFSIPTY26;
}

public boolean getPFSIPTY27() {
return PFSIPTY27;
}

public boolean getPFSIPTY28() {
return PFSIPTY28;
}

public boolean getPFSIPTY29() {
return PFSIPTY29;
}

public byte getPFSIPTY3() {
return PFSIPTY3;
}

public boolean getPFSIPTY30() {
return PFSIPTY30;
}

public boolean getPFSIPTY31() {
return PFSIPTY31;
}

public boolean getPFSIPTY32() {
return PFSIPTY32;
}

public boolean getPFSIPTY33() {
return PFSIPTY33;
}

public boolean getPFSIPTY34() {
return PFSIPTY34;
}

public boolean getPFSIPTY35() {
return PFSIPTY35;
}

public boolean getPFSIPTY36() {
return PFSIPTY36;
}

public boolean getPFSIPTY37() {
return PFSIPTY37;
}

public boolean getPFSIPTY38() {
return PFSIPTY38;
}

public boolean getPFSIPTY39() {
return PFSIPTY39;
}

public byte getPFSIPTY4() {
return PFSIPTY4;
}

public boolean getPFSIPTY40() {
return PFSIPTY40;
}

public boolean getPFSIPTY41() {
return PFSIPTY41;
}

public boolean getPFSIPTY42() {
return PFSIPTY42;
}

public byte getPFSIPTY5() {
return PFSIPTY5;
}

public byte getPFSIPTY6() {
return PFSIPTY6;
}

public boolean getPFSIPTY7() {
return PFSIPTY7;
}

public byte getPFSIPTY8() {
return PFSIPTY8;
}

public byte getPFSIPTY9() {
return PFSIPTY9;
}

public short getPIRREG() {
return PIRREG;
}

public short getPIRREG2() {
return PIRREG2;
}

public byte getPMORTC() {
return PMORTC;
}

public byte getPNEWMEM() {
return PNEWMEM;
}

public boolean getPOADD5() {
return POADD5;
}

public boolean getPOADD6() {
return POADD6;
}

public boolean getPOANEH2() {
return POANEH2;
}

public boolean getPOANEXM1() {
return POANEXM1;
}

public boolean getPOANEXM2() {
return POANEXM2;
}

public boolean getPOANEXY1() {
return POANEXY1;
}

public boolean getPOANEXY2() {
return POANEXY2;
}

public boolean getPOANGA2() {
return POANGA2;
}

public boolean getPOANIF2() {
return POANIF2;
}

public boolean getPOANJT2() {
return POANJT2;
}

public boolean getPOANLM1() {
return POANLM1;
}

public boolean getPOANLM2() {
return POANLM2;
}

public boolean getPOANN2() {
return POANN2;
}

public boolean getPOANN3() {
return POANN3;
}

public boolean getPOANN4() {
return POANN4;
}

public boolean getPOANN6() {
return POANN6;
}

public boolean getPOANN7() {
return POANN7;
}

public boolean getPOANN8() {
return POANN8;
}

public boolean getPOANVB() {
return POANVB;
}

public boolean getPOANVB2() {
return POANVB2;
}

public short getPOANVI1() {
return POANVI1;
}

public short getPOANVI2() {
return POANVI2;
}

public byte getPOCNDRS1() {
return POCNDRS1;
}

public boolean getPOCNDRS10() {
return POCNDRS10;
}

public boolean getPOCNDRS11() {
return POCNDRS11;
}

public boolean getPOCNDRS12() {
return POCNDRS12;
}

public byte getPOCNDRS2() {
return POCNDRS2;
}

public byte getPOCNDRS3() {
return POCNDRS3;
}

public boolean getPOCNDRS4() {
return POCNDRS4;
}

public boolean getPOCNDRS5() {
return POCNDRS5;
}

public boolean getPOCNDRS6() {
return POCNDRS6;
}

public byte getPOCNDRS7() {
return POCNDRS7;
}

public boolean getPOCNDRS8() {
return POCNDRS8;
}

public boolean getPOCNDRS9() {
return POCNDRS9;
}

public byte getPOCNHOW1() {
return POCNHOW1;
}

public byte getPOCNHOW2() {
return POCNHOW2;
}

public byte getPOCNLRS1() {
return POCNLRS1;
}

public byte getPOCNLRS2() {
return POCNLRS2;
}

public boolean getPOCNLRS3() {
return POCNLRS3;
}

public boolean getPOCNLRS4() {
return POCNLRS4;
}

public boolean getPOCNLRS5() {
return POCNLRS5;
}

public boolean getPOCNLRS6() {
return POCNLRS6;
}

public boolean getPOCNLRS7() {
return POCNLRS7;
}

public boolean getPOCNLRS8() {
return POCNLRS8;
}

public byte getPOCNPLN1() {
return POCNPLN1;
}

public byte getPOCNPLN2() {
return POCNPLN2;
}

public byte getPOCNVOL1() {
return POCNVOL1;
}

public byte getPOCNVOL2() {
return POCNVOL2;
}

public byte getPOCONCH1() {
return POCONCH1;
}

public byte getPOCONCH2() {
return POCONCH2;
}

public boolean getPOFAN10() {
return POFAN10;
}

public boolean getPOFAN11() {
return POFAN11;
}

public boolean getPOFAN12() {
return POFAN12;
}

public boolean getPOFAN9() {
return POFAN9;
}

public boolean getPOFAWH10() {
return POFAWH10;
}

public boolean getPOFAWH11() {
return POFAWH11;
}

public boolean getPOFAWH12() {
return POFAWH12;
}

public boolean getPOFAWH3() {
return POFAWH3;
}

public boolean getPOFAWH4() {
return POFAWH4;
}

public boolean getPOFAWH5() {
return POFAWH5;
}

public byte getPOFAWH7() {
return POFAWH7;
}

public boolean getPOFAWH8() {
return POFAWH8;
}

public boolean getPOFAWH9() {
return POFAWH9;
}

public boolean getPOLMUS10() {
return POLMUS10;
}

public boolean getPOLMUS11() {
return POLMUS11;
}

public boolean getPOLMUS12() {
return POLMUS12;
}

public boolean getPOLMUS9() {
return POLMUS9;
}

public boolean getPOLMVB2() {
return POLMVB2;
}

public byte getPOPENVB() {
return POPENVB;
}

public boolean getPOPENVB2() {
return POPENVB2;
}

public int getPOPENVI() {
return POPENVI;
}

public int getPOPENVI2() {
return POPENVI2;
}

public byte getPOPYCH() {
return POPYCH;
}

public boolean getPPANEXM1() {
return PPANEXM1;
}

public boolean getPPANEXM2() {
return PPANEXM2;
}

public boolean getPPANEXM3() {
return PPANEXM3;
}

public boolean getPPANEXY1() {
return PPANEXY1;
}

public boolean getPPANEXY2() {
return PPANEXY2;
}

public boolean getPPANEXY3() {
return PPANEXY3;
}

public boolean getPPANLM1() {
return PPANLM1;
}

public byte getPPANLM2() {
return PPANLM2;
}

public boolean getPPANLM3() {
return PPANLM3;
}

public boolean getPPANN3() {
return PPANN3;
}

public boolean getPPANN4() {
return PPANN4;
}

public boolean getPPANN6() {
return PPANN6;
}

public boolean getPPANN7() {
return PPANN7;
}

public boolean getPPANN8() {
return PPANN8;
}

public byte getPPANVB1() {
return PPANVB1;
}

public boolean getPPANVB2() {
return PPANVB2;
}

public boolean getPPANVB3() {
return PPANVB3;
}

public int getPPANVI1() {
return PPANVI1;
}

public short getPPANVI2() {
return PPANVI2;
}

public short getPPANVI3() {
return PPANVI3;
}

public boolean getPPCNDRS12() {
return PPCNDRS12;
}

public boolean getPPCNDRS13() {
return PPCNDRS13;
}

public boolean getPPCNDRS14() {
return PPCNDRS14;
}

public boolean getPPCNDRS15() {
return PPCNDRS15;
}

public boolean getPPCNDRS16() {
return PPCNDRS16;
}

public byte getPPCNDRS17() {
return PPCNDRS17;
}

public boolean getPPCNDRS18() {
return PPCNDRS18;
}

public boolean getPPCNDRS20() {
return PPCNDRS20;
}

public boolean getPPCNDRS21() {
return PPCNDRS21;
}

public boolean getPPCNDRS22() {
return PPCNDRS22;
}

public boolean getPPCNDRS23() {
return PPCNDRS23;
}

public boolean getPPCNDRS24() {
return PPCNDRS24;
}

public boolean getPPCNDRS3() {
return PPCNDRS3;
}

public boolean getPPCNDRS4() {
return PPCNDRS4;
}

public boolean getPPCNDRS5() {
return PPCNDRS5;
}

public boolean getPPCNDRS6() {
return PPCNDRS6;
}

public boolean getPPCNDRS7() {
return PPCNDRS7;
}

public boolean getPPCNDRS8() {
return PPCNDRS8;
}

public byte getPPCNDRS9() {
return PPCNDRS9;
}

public byte getPPCNHO___W3() {
return PPCNHO___W3;
}

public boolean getPPCNLRS10() {
return PPCNLRS10;
}

public boolean getPPCNLRS11() {
return PPCNLRS11;
}

public boolean getPPCNLRS12() {
return PPCNLRS12;
}

public boolean getPPCNLRS4() {
return PPCNLRS4;
}

public boolean getPPCNLRS6() {
return PPCNLRS6;
}

public boolean getPPCNLRS7() {
return PPCNLRS7;
}

public boolean getPPCNLRS8() {
return PPCNLRS8;
}

public byte getPPCNLRS9() {
return PPCNLRS9;
}

public byte getPPCNPLN1() {
return PPCNPLN1;
}

public byte getPPCNPLN2() {
return PPCNPLN2;
}

public byte getPPCNPLN3() {
return PPCNPLN3;
}

public byte getPPCONCH() {
return PPCONCH;
}

public boolean getPPDRINC3() {
return PPDRINC3;
}

public byte getPPDRINCB() {
return PPDRINCB;
}

public boolean getPPDRINCB3() {
return PPDRINCB3;
}

public boolean getPPDRVB3() {
return PPDRVB3;
}

public boolean getPPDRVI3() {
return PPDRVI3;
}

public boolean getPPFAAG2() {
return PPFAAG2;
}

public boolean getPPFAAG3() {
return PPFAAG3;
}

public boolean getPPFAN10() {
return PPFAN10;
}

public boolean getPPFAN12() {
return PPFAN12;
}

public boolean getPPFAN13() {
return PPFAN13;
}

public boolean getPPFAN14() {
return PPFAN14;
}

public boolean getPPFAN15() {
return PPFAN15;
}

public boolean getPPFAN3() {
return PPFAN3;
}

public boolean getPPFAN4() {
return PPFAN4;
}

public boolean getPPFAN5() {
return PPFAN5;
}

public boolean getPPFAN7() {
return PPFAN7;
}

public boolean getPPFAN8() {
return PPFAN8;
}

public boolean getPPFAN9() {
return PPFAN9;
}

public boolean getPPFAWH10() {
return PPFAWH10;
}

public boolean getPPFAWH11() {
return PPFAWH11;
}

public boolean getPPFAWH12() {
return PPFAWH12;
}

public boolean getPPFAWH13() {
return PPFAWH13;
}

public boolean getPPFAWH14() {
return PPFAWH14;
}

public boolean getPPFAWH16() {
return PPFAWH16;
}

public boolean getPPFAWH17() {
return PPFAWH17;
}

public boolean getPPFAWH18() {
return PPFAWH18;
}

public boolean getPPFAWH19() {
return PPFAWH19;
}

public boolean getPPFAWH20() {
return PPFAWH20;
}

public boolean getPPFAWH21() {
return PPFAWH21;
}

public boolean getPPFAWH4() {
return PPFAWH4;
}

public boolean getPPFAWH5() {
return PPFAWH5;
}

public boolean getPPFAWH7() {
return PPFAWH7;
}

public byte getPPFAWH8() {
return PPFAWH8;
}

public boolean getPPFAWH9() {
return PPFAWH9;
}

public byte getPPIRNO1() {
return PPIRNO1;
}

public byte getPPIRNO2() {
return PPIRNO2;
}

public boolean getPPIRNO3() {
return PPIRNO3;
}

public int getPPIRRA1() {
return PPIRRA1;
}

public int getPPIRRA2() {
return PPIRRA2;
}

public short getPPIRRA3() {
return PPIRRA3;
}

public boolean getPPIRRF1() {
return PPIRRF1;
}

public boolean getPPIRRF2() {
return PPIRRF2;
}

public boolean getPPIRRF3() {
return PPIRRF3;
}

public byte getPPIRRH1() {
return PPIRRH1;
}

public byte getPPIRRH2() {
return PPIRRH2;
}

public boolean getPPIRRH3() {
return PPIRRH3;
}

public short getPPIRRY1() {
return PPIRRY1;
}

public short getPPIRRY2() {
return PPIRRY2;
}

public short getPPIRRY3() {
return PPIRRY3;
}

public short getPPLASY1() {
return PPLASY1;
}

public short getPPLASY2() {
return PPLASY2;
}

public short getPPLASY3() {
return PPLASY3;
}

public byte getPPNINS1() {
return PPNINS1;
}

public byte getPPNINS2() {
return PPNINS2;
}

public byte getPPNINS3() {
return PPNINS3;
}

public int getPPRGAM() {
return PPRGAM;
}

public boolean getPPRGFG3() {
return PPRGFG3;
}

public boolean getPPRGFR3() {
return PPRGFR3;
}

public byte getPPYSTP15() {
return PPYSTP15;
}

public boolean getPPYSTP16() {
return PPYSTP16;
}

public boolean getPPYSTP17() {
return PPYSTP17;
}

public boolean getPPYSTP18() {
return PPYSTP18;
}

public boolean getPPYSTP20() {
return PPYSTP20;
}

public boolean getPPYSTP21() {
return PPYSTP21;
}

public byte getPPYSTP3() {
return PPYSTP3;
}

public boolean getPPYSTP4() {
return PPYSTP4;
}

public boolean getPPYSTP5() {
return PPYSTP5;
}

public boolean getPPYSTP6() {
return PPYSTP6;
}

public boolean getPPYSTP7() {
return PPYSTP7;
}

public byte getPRCRELIG() {
return PRCRELIG;
}

public boolean getPROXPERS() {
return PROXPERS;
}

public byte getPSCHY_F() {
return PSCHY_F;
}

public byte getPSCHY_S() {
return PSCHY_S;
}

public byte getPSCHY_T() {
return PSCHY_T;
}

public byte getPSTYPE1() {
return PSTYPE1;
}

public byte getPSTYPE10() {
return PSTYPE10;
}

public byte getPSTYPE11() {
return PSTYPE11;
}

public boolean getPSTYPE12() {
return PSTYPE12;
}

public boolean getPSTYPE13() {
return PSTYPE13;
}

public boolean getPSTYPE14() {
return PSTYPE14;
}

public byte getPSTYPE15() {
return PSTYPE15;
}

public byte getPSTYPE16() {
return PSTYPE16;
}

public boolean getPSTYPE17() {
return PSTYPE17;
}

public boolean getPSTYPE18() {
return PSTYPE18;
}

public boolean getPSTYPE19() {
return PSTYPE19;
}

public byte getPSTYPE2() {
return PSTYPE2;
}

public boolean getPSTYPE20() {
return PSTYPE20;
}

public boolean getPSTYPE21() {
return PSTYPE21;
}

public byte getPSTYPE3() {
return PSTYPE3;
}

public byte getPSTYPE4() {
return PSTYPE4;
}

public byte getPSTYPE5() {
return PSTYPE5;
}

public byte getPSTYPE6() {
return PSTYPE6;
}

public boolean getPSTYPE7() {
return PSTYPE7;
}

public byte getPSTYPE8() {
return PSTYPE8;
}

public byte getPSTYPE9() {
return PSTYPE9;
}

public boolean getREGLRPY3() {
return REGLRPY3;
}

public boolean getREGLRPY3_I() {
return REGLRPY3_I;
}

public boolean getREGLRPY3_IFLAG() {
return REGLRPY3_IFLAG;
}

public boolean getREGLRPY4() {
return REGLRPY4;
}

public boolean getREGLRPY4_I() {
return REGLRPY4_I;
}

public boolean getREGLRPY4_IFLAG() {
return REGLRPY4_IFLAG;
}

public boolean getREGLRPY5() {
return REGLRPY5;
}

public boolean getREGLRPY5_I() {
return REGLRPY5_I;
}

public boolean getREGLRPY5_IFLAG() {
return REGLRPY5_IFLAG;
}

public byte getRELIGE() {
return RELIGE;
}

public byte getRELIGS() {
return RELIGS;
}

public byte getRELIGW() {
return RELIGW;
}

public byte getRPCRET1() {
return RPCRET1;
}

public boolean getRPCRET2() {
return RPCRET2;
}

public boolean getRPCRET3() {
return RPCRET3;
}

public byte getRPDBCAL_F() {
return RPDBCAL_F;
}

public byte getSCAC4() {
return SCAC4;
}

public byte getSCAC5() {
return SCAC5;
}

public byte getSEGRSBAND() {
return SEGRSBAND;
}

public byte getSENETBAND() {
return SENETBAND;
}

public byte getSENO() {
return SENO;
}

public byte getSOC2000() {
return SOC2000;
}

public double getSPASAF_IORIG() {
return SPASAF_IORIG;
}

public double getSPECAMT10() {
return SPECAMT10;
}

public byte getSPECIAL01() {
return SPECIAL01;
}

public byte getSPECIAL02() {
return SPECIAL02;
}

public byte getSPECIAL03() {
return SPECIAL03;
}

public byte getSPECIAL04() {
return SPECIAL04;
}

public byte getSPECIAL05() {
return SPECIAL05;
}

public boolean getSPECIAL06() {
return SPECIAL06;
}

public boolean getSPECIAL07() {
return SPECIAL07;
}

public boolean getSPECIAL08() {
return SPECIAL08;
}

public boolean getSPECIAL09() {
return SPECIAL09;
}

public boolean getSPECIAL10() {
return SPECIAL10;
}

public byte getSPECINCL1() {
return SPECINCL1;
}

public byte getSPECINCL10() {
return SPECINCL10;
}

public byte getSPECINCL2() {
return SPECINCL2;
}

public byte getSPECINCL3() {
return SPECINCL3;
}

public byte getSPECINCL4() {
return SPECINCL4;
}

public byte getSPECINCL5() {
return SPECINCL5;
}

public byte getSPECINCL6() {
return SPECINCL6;
}

public byte getSPECINCL7() {
return SPECINCL7;
}

public byte getSPECINCL8() {
return SPECINCL8;
}

public byte getSPECINCL9() {
return SPECINCL9;
}

public byte getSPECPD1() {
return SPECPD1;
}

public byte getSPECPD10() {
return SPECPD10;
}

public short getSPECPD2() {
return SPECPD2;
}

public byte getSPECPD3() {
return SPECPD3;
}

public byte getSPECPD4() {
return SPECPD4;
}

public byte getSPECPD5() {
return SPECPD5;
}

public byte getSPECPD6() {
return SPECPD6;
}

public byte getSPECPD7() {
return SPECPD7;
}

public byte getSPECPD8() {
return SPECPD8;
}

public byte getSPECPD9() {
return SPECPD9;
}

public byte getSPECWHEN1() {
return SPECWHEN1;
}

public byte getSPECWHEN10() {
return SPECWHEN10;
}

public byte getSPECWHEN2() {
return SPECWHEN2;
}

public byte getSPECWHEN3() {
return SPECWHEN3;
}

public byte getSPECWHEN4() {
return SPECWHEN4;
}

public byte getSPECWHEN5() {
return SPECWHEN5;
}

public byte getSPECWHEN6() {
return SPECWHEN6;
}

public byte getSPECWHEN7() {
return SPECWHEN7;
}

public byte getSPECWHEN8() {
return SPECWHEN8;
}

public byte getSPECWHEN9() {
return SPECWHEN9;
}

public byte getSPENDM() {
return SPENDM;
}

public boolean getSTATUS() {
return STATUS;
}

public byte getTACC3() {
return TACC3;
}

public boolean getTADDVB3() {
return TADDVB3;
}

public int getTADDVL() {
return TADDVL;
}

public boolean getTADDVL3() {
return TADDVL3;
}

public byte getTBCAP3() {
return TBCAP3;
}

public boolean getTBCAPY3() {
return TBCAPY3;
}

public boolean getTBCKNO3() {
return TBCKNO3;
}

public boolean getTBEN13() {
return TBEN13;
}

public boolean getTBEN14() {
return TBEN14;
}

public boolean getTBEN15() {
return TBEN15;
}

public boolean getTBEN16() {
return TBEN16;
}

public byte getTBEN17() {
return TBEN17;
}

public byte getTBEN18() {
return TBEN18;
}

public boolean getTBEN19() {
return TBEN19;
}

public boolean getTBEN20() {
return TBEN20;
}

public boolean getTBEN21() {
return TBEN21;
}

public boolean getTBEN22() {
return TBEN22;
}

public boolean getTBEN23() {
return TBEN23;
}

public boolean getTBEN24() {
return TBEN24;
}

public boolean getTBEN6() {
return TBEN6;
}

public boolean getTBEN7() {
return TBEN7;
}

public boolean getTBEN8() {
return TBEN8;
}

public byte getTBINC3() {
return TBINC3;
}

public short getTBREC3() {
return TBREC3;
}

public boolean getTBRECB3() {
return TBRECB3;
}

public byte getTBVALB3() {
return TBVALB3;
}

public byte getTDUP3() {
return TDUP3;
}

public boolean getTDUPA3() {
return TDUPA3;
}

public byte getTJNT5() {
return TJNT5;
}

public boolean getTJNT6() {
return TJNT6;
}

public byte getTRAINEE() {
return TRAINEE;
}

public byte getTSNO3() {
return TSNO3;
}

public int getTVAL3() {
return TVAL3;
}

public byte getTVALB3() {
return TVALB3;
}

public boolean getTWHO10() {
return TWHO10;
}

public boolean getTWHO11() {
return TWHO11;
}

public boolean getTWHO12() {
return TWHO12;
}

public byte getTWHO13() {
return TWHO13;
}

public boolean getTWHO14() {
return TWHO14;
}

public boolean getTWHO15() {
return TWHO15;
}

public boolean getTWHO16() {
return TWHO16;
}

public boolean getTWHO17() {
return TWHO17;
}

public boolean getTWHO18() {
return TWHO18;
}

public boolean getTWHO3() {
return TWHO3;
}

public boolean getTWHO4() {
return TWHO4;
}

public boolean getTWHO5() {
return TWHO5;
}

public boolean getTWHO6() {
return TWHO6;
}

public boolean getTWHO9() {
return TWHO9;
}

public byte getULAND10() {
return ULAND10;
}

public byte getULAND11() {
return ULAND11;
}

public byte getULAND12() {
return ULAND12;
}

public byte getULAND16() {
return ULAND16;
}

public byte getULAND17() {
return ULAND17;
}

public byte getULAND18() {
return ULAND18;
}

public boolean getUPROP1_IFLAG() {
return UPROP1_IFLAG;
}

public boolean getUPROP2_IFLAG() {
return UPROP2_IFLAG;
}

public boolean getUPROP3_IFLAG() {
return UPROP3_IFLAG;
}

public boolean getUPROP4_IFLAG() {
return UPROP4_IFLAG;
}

public boolean getUPROP5_IFLAG() {
return UPROP5_IFLAG;
}

public boolean getUPROP6_IFLAG() {
return UPROP6_IFLAG;
}

public byte getUPRSH13() {
return UPRSH13;
}

public byte getUPRSH14() {
return UPRSH14;
}

public byte getUPRSH15() {
return UPRSH15;
}

public byte getUPRSH16() {
return UPRSH16;
}

public byte getUPRSH17() {
return UPRSH17;
}

public boolean getUPRSH18() {
return UPRSH18;
}

public byte getUPRSH19() {
return UPRSH19;
}

public boolean getUPRSH20() {
return UPRSH20;
}

public byte getUPRSH21() {
return UPRSH21;
}

public boolean getUPRSH22() {
return UPRSH22;
}

public byte getUPRSH23() {
return UPRSH23;
}

public boolean getUPRSH24() {
return UPRSH24;
}

public byte getUPRSH25() {
return UPRSH25;
}

public byte getUPRSH26() {
return UPRSH26;
}

public byte getUPRSH27() {
return UPRSH27;
}

public boolean getUPRSH28() {
return UPRSH28;
}

public byte getUPRSH29() {
return UPRSH29;
}

public boolean getUPRSH30() {
return UPRSH30;
}

public byte getUPRSH31() {
return UPRSH31;
}

public boolean getUPRSH32() {
return UPRSH32;
}

public byte getUPRSH33() {
return UPRSH33;
}

public boolean getUPRSH34() {
return UPRSH34;
}

public byte getUPRSH35() {
return UPRSH35;
}

public boolean getUPRSH36() {
return UPRSH36;
}

public byte getUPRSH6() {
return UPRSH6;
}

public boolean getUPRTYP() {
return UPRTYP;
}

public double getW1W3WGT() {
return W1W3WGT;
}

public double getW2W3WGT() {
return W2W3WGT;
}

public double getW3XSWGT() {
return W3XSWGT;
}

public byte getWHOREATT() {
return WHOREATT;
}

public byte getWHORECAR() {
return WHORECAR;
}

public byte getWHOREMOB() {
return WHOREMOB;
}

public byte getWTCPD() {
return WTCPD;
}

public byte getXBCON() {
return XBCON;
}

public boolean getXBCONREM() {
return XBCONREM;
}

public boolean getXBCONSC() {
return XBCONSC;
}

public byte getXBCRT() {
return XBCRT;
}

public boolean getXBOK() {
return XBOK;
}

public byte getXDCON() {
return XDCON;
}

public boolean getXDCONREM() {
return XDCONREM;
}

public boolean getXDCONSC() {
return XDCONSC;
}

public boolean getXDOK() {
return XDOK;
}

public byte getXDREF() {
return XDREF;
}

public byte getXICON() {
return XICON;
}

public boolean getXICONREM() {
return XICONREM;
}

public boolean getXICONSC() {
return XICONSC;
}

public WaAS_W3PRecord(String line) {
s = line.split("\t");
initCASEW3(s[0]);
initYEAR(s[1]);
initMONTH(s[2]);
initPERSONW3(s[3]);
initCASEW2(s[4]);
initYEARW2(s[5]);
initMONTHW2(s[6]);
initPERSONW2(s[7]);
initCASEW1(s[8]);
initYEARW1(s[9]);
initMONTHW1(s[10]);
initPERSONW1(s[11]);
initW3XSWGT(s[12]);
initW1W3WGT(s[13]);
initW2W3WGT(s[14]);
initGOR(s[15]);
initLEA(s[16]);
initDVWAVE(s[17]);
initCURSTAT(s[18]);
initRPDBCAL_F(s[19]);
initSTATUS(s[20]);
initDVAGEW3BAND(s[21]);
initXMARSTA(s[22]);
initMARBEF(s[23]);
initLIVWTH(s[24]);
initHHLDR(s[25]);
initDVAGE4(s[26]);
initDVAGE5(s[27]);
initDVAGE6(s[28]);
initDVAGE9(s[29]);
initDVAGE18(s[30]);
initWORKAGE(s[31]);
initNUMADULT(s[32]);
initNUMCHILD(s[33]);
initNUMCIVPTR(s[34]);
initNUMSSEX(s[35]);
initNUMCPART(s[36]);
initNUMCH18(s[37]);
initPENFLAG(s[38]);
initFTED(s[39]);
initFTED19(s[40]);
initTRAINEE(s[41]);
initQUALCHK(s[42]);
initHIHNUM(s[43]);
initDVHRPNUM(s[44]);
initHRPPART(s[45]);
initR01(s[46]);
initR02(s[47]);
initR03(s[48]);
initR04(s[49]);
initR05(s[50]);
initR06(s[51]);
initR07(s[52]);
initR08(s[53]);
initR09(s[54]);
initR10(s[55]);
initR11(s[56]);
initRESPDNT(s[57]);
initPARTNER(s[58]);
initPARTNO(s[59]);
initISDEP(s[60]);
initISNDEP(s[61]);
initNUMDEPCH(s[62]);
initHASCHD(s[63]);
initHASDEP(s[64]);
initHASNDEP(s[65]);
initSINGPAR(s[66]);
initPERSPROX(s[67]);
initPROXYNUM(s[68]);
initPRCRELIG(s[69]);
initWRKING(s[70]);
initSCHEMEET(s[71]);
initJBAWAY(s[72]);
initOWNBUS(s[73]);
initRELBUS(s[74]);
initLOOKED(s[75]);
initSTARTJ(s[76]);
initLKTIME(s[77]);
initYINACT(s[78]);
initDVILO3A(s[79]);
initDVILO4A(s[80]);
initWKBETW(s[81]);
initMRECJB(s[82]);
initSAMJOB(s[83]);
initSAMEMP(s[84]);
initPERNOWK(s[85]);
initEMPSTAT1(s[86]);
initNUMJOB(s[87]);
initDTJBL(s[88]);
initDVJB12ML(s[89]);
initSAMEJOB1(s[90]);
initSAMEJOB2(s[91]);
initSAMEJOB3(s[92]);
initSAMEJOB4(s[93]);
initSAMEJOB5(s[94]);
initSAMEJOB6(s[95]);
initSECTOR(s[96]);
initSECTR2(s[97]);
initETYPE(s[98]);
initSTAT(s[99]);
initDVSTAT(s[100]);
initSVISE(s[101]);
initEMPNO(s[102]);
initEMPN(s[103]);
initONETEN(s[104]);
initDVEMPNO(s[105]);
initSOLO(s[106]);
initDVSENO(s[107]);
initSENO(s[108]);
initSEMN(s[109]);
initFTPTWK(s[110]);
initWKHRS(s[111]);
initWKHRSIR(s[112]);
initEMPSTY(s[113]);
initSEMPSTY(s[114]);
initPERMJB(s[115]);
initTEA(s[116]);
initPNOWK(s[117]);
initPNOWKLN(s[118]);
initEDATTN1(s[119]);
initEDATTN2(s[120]);
initEDATTN3(s[121]);
initENROLL(s[122]);
initATTEND(s[123]);
initCOURSE(s[124]);
initCOURSE20(s[125]);
initEDAGE(s[126]);
initFTSTUD(s[127]);
initJOBNO(s[128]);
initBTYPE1(s[129]);
initBDIRNI1(s[130]);
initBOWN1(s[131]);
initBPROPN1(s[132]);
initBACCSA1(s[133]);
initBACCSB1(s[134]);
initBPART1(s[135]);
initBACCBEG1(s[136]);
initBACCEND1(s[137]);
initBDOCS1(s[138]);
initBPROFIT1(s[139]);
initBPRFLOSS1(s[140]);
initBTAX1(s[141]);
initBNATINS1(s[142]);
initBBEFORE1(s[143]);
initBCARRY1(s[144]);
initBSIZE1(s[145]);
initBEMPN1(s[146]);
initBYEAR1(s[147]);
initBSTART1(s[148]);
initBFUND1(s[149]);
initBFUND2(s[150]);
initBFUND3(s[151]);
initBFUND4(s[152]);
initBFUND5(s[153]);
initBFUND6(s[154]);
initBFUND7(s[155]);
initBFUND8(s[156]);
initBRETIRE1(s[157]);
initBDEBTS1(s[158]);
initBOWED1(s[159]);
initBVAL1(s[160]);
initBVALB1(s[161]);
initBTYPE2(s[162]);
initBDIRNI2(s[163]);
initBOWN2(s[164]);
initBPROPN2(s[165]);
initBACCSA2(s[166]);
initBACCSB2(s[167]);
initBPART2(s[168]);
initBACCBEG2(s[169]);
initBACCEND2(s[170]);
initBDOCS2(s[171]);
initBPROFIT2(s[172]);
initBPRFLOSS2(s[173]);
initBTAX2(s[174]);
initBNATINS2(s[175]);
initBBEFORE2(s[176]);
initBCARRY2(s[177]);
initBSIZE2(s[178]);
initBEMPN2(s[179]);
initBYEAR2(s[180]);
initBSTART2(s[181]);
initBFUND9(s[182]);
initBFUND10(s[183]);
initBFUND11(s[184]);
initBFUND12(s[185]);
initBFUND13(s[186]);
initBFUND14(s[187]);
initBFUND15(s[188]);
initBFUND16(s[189]);
initBRETIRE2(s[190]);
initBDEBTS2(s[191]);
initBOWED2(s[192]);
initBVAL2(s[193]);
initBVALB2(s[194]);
initBTYPE3(s[195]);
initBDIRNI3(s[196]);
initBOWN3(s[197]);
initBPROPN3(s[198]);
initBACCSA3(s[199]);
initBACCSB3(s[200]);
initBPART3(s[201]);
initBACCBEG3(s[202]);
initBACCEND3(s[203]);
initBDOCS3(s[204]);
initBPROFIT3(s[205]);
initBPRFLOSS3(s[206]);
initBTAX3(s[207]);
initBNATINS3(s[208]);
initBBEFORE3(s[209]);
initBCARRY3(s[210]);
initBSIZE3(s[211]);
initBEMPN3(s[212]);
initBYEAR3(s[213]);
initBSTART3(s[214]);
initBFUND17(s[215]);
initBFUND18(s[216]);
initBFUND19(s[217]);
initBFUND20(s[218]);
initBFUND21(s[219]);
initBFUND22(s[220]);
initBFUND23(s[221]);
initBFUND24(s[222]);
initBRETIRE3(s[223]);
initBDEBTS3(s[224]);
initBOWED3(s[225]);
initBVAL3(s[226]);
initBVALB3(s[227]);
initBPAST(s[228]);
initBSELLYR(s[229]);
initBSELLAM(s[230]);
initBSELLAB(s[231]);
initBSELLTX(s[232]);
initBMOREBUS(s[233]);
initBWORTH(s[234]);
initBWORTHB(s[235]);
initPAYPER(s[236]);
initPAYESP(s[237]);
initPAYESM(s[238]);
initGRSESP(s[239]);
initGRSESM(s[240]);
initPAYINC1(s[241]);
initPAYINC2(s[242]);
initPAYINC3(s[243]);
initPAYINC4(s[244]);
initPAYINC5(s[245]);
initPAYINC6(s[246]);
initPAYINC7(s[247]);
initSMTPEN(s[248]);
initPAYSLP(s[249]);
initPAYBON(s[250]);
initBONTAX(s[251]);
initEMSHAR1(s[252]);
initEMSHAR2(s[253]);
initEMSHAR3(s[254]);
initSEPER(s[255]);
initSEAMK(s[256]);
initSEESW(s[257]);
initSEESM(s[258]);
initGROSSPER(s[259]);
initGRSAMK(s[260]);
initGRSEESW(s[261]);
initGRSEESM(s[262]);
initSEPEL(s[263]);
initSJOB2(s[264]);
initSJEMP1(s[265]);
initSJEMP2(s[266]);
initINTRO(s[267]);
initBENTYPE01(s[268]);
initBENTYPE02(s[269]);
initBENTYPE03(s[270]);
initBENTYPE04(s[271]);
initBENTYPE05(s[272]);
initBENTYPE06(s[273]);
initBENTYPE07(s[274]);
initBENTYPE08(s[275]);
initBENTYPE09(s[276]);
initBENTYPE10(s[277]);
initBENTYPE11(s[278]);
initBENTYPE12(s[279]);
initBTOGSEP(s[280]);
initBPAYNUM(s[281]);
initBTOGPD(s[282]);
initBSEPPD01(s[283]);
initBSEPPD02(s[284]);
initBSEPPD03(s[285]);
initBSEPPD04(s[286]);
initBSEPPD05(s[287]);
initBSEPPD06(s[288]);
initBSEPPD07(s[289]);
initBSEPPD08(s[290]);
initBSEPPD09(s[291]);
initBSEPPD10(s[292]);
initBSEPPD11(s[293]);
initBSEPPD12(s[294]);
initBSEPPD13(s[295]);
initBSEPPD14(s[296]);
initBSEPPD15(s[297]);
initBSEPPD16(s[298]);
initBSEPPD17(s[299]);
initBSEPPD18(s[300]);
initBSEPPD19(s[301]);
initBSEPPD20(s[302]);
initCREDTYPE1(s[303]);
initCREDTYPE2(s[304]);
initCTOGSEP(s[305]);
initWTCPD(s[306]);
initCTCPD(s[307]);
initCOMBPD(s[308]);
initSPECIAL01(s[309]);
initSPECIAL02(s[310]);
initSPECIAL03(s[311]);
initSPECIAL04(s[312]);
initSPECIAL05(s[313]);
initSPECIAL06(s[314]);
initSPECIAL07(s[315]);
initSPECIAL08(s[316]);
initSPECIAL09(s[317]);
initSPECIAL10(s[318]);
initWHORECAR(s[319]);
initWHOREMOB(s[320]);
initWHOREATT(s[321]);
initSPECPD1(s[322]);
initSPECWHEN1(s[323]);
initSPECINCL1(s[324]);
initSPECPD2(s[325]);
initSPECWHEN2(s[326]);
initSPECINCL2(s[327]);
initSPECPD3(s[328]);
initSPECWHEN3(s[329]);
initSPECINCL3(s[330]);
initSPECPD4(s[331]);
initSPECWHEN4(s[332]);
initSPECINCL4(s[333]);
initSPECPD5(s[334]);
initSPECWHEN5(s[335]);
initSPECINCL5(s[336]);
initSPECPD6(s[337]);
initSPECWHEN6(s[338]);
initSPECINCL6(s[339]);
initSPECPD7(s[340]);
initSPECWHEN7(s[341]);
initSPECINCL7(s[342]);
initSPECPD8(s[343]);
initSPECWHEN8(s[344]);
initSPECINCL8(s[345]);
initSPECPD9(s[346]);
initSPECWHEN9(s[347]);
initSPECINCL9(s[348]);
initSPECAMT10(s[349]);
initSPECPD10(s[350]);
initSPECWHEN10(s[351]);
initSPECINCL10(s[352]);
initOSAVA(s[353]);
initOSAVB(s[354]);
initOSAVC(s[355]);
initOWAIT(s[356]);
initOLEFT(s[357]);
initOLEFTDO(s[358]);
initOSAV2Y(s[359]);
initOWHYSAV01(s[360]);
initOWHYSAV02(s[361]);
initOWHYSAV03(s[362]);
initOWHYSAV04(s[363]);
initOWHYSAV05(s[364]);
initOWHYSAV06(s[365]);
initOWHYSAV07(s[366]);
initOWHYSAV08(s[367]);
initOWHYSAV09(s[368]);
initOWHYSAV10(s[369]);
initOWHYSAV11(s[370]);
initONOSAVE1(s[371]);
initONOSAVE2(s[372]);
initONOSAVE3(s[373]);
initONOSAVE4(s[374]);
initONOSAVE5(s[375]);
initONOSAVE6(s[376]);
initONOSAVE7(s[377]);
initONOSAVE8(s[378]);
initONOSAVE9(s[379]);
initOINTEND(s[380]);
initOSAVEXT(s[381]);
initPSIT(s[382]);
initPSITF(s[383]);
initPNOWKRS(s[384]);
initPAGESTP(s[385]);
initPEXPRET(s[386]);
initPAGERET(s[387]);
initPFULRET(s[388]);
initPEARLRS(s[389]);
initOLONG(s[390]);
initOLONGYR(s[391]);
initOSAFERET(s[392]);
initOSAFERE2(s[393]);
initOUNDER(s[394]);
initPESAME(s[395]);
initPEMOFF(s[396]);
initPEMELG(s[397]);
initPEMMEM(s[398]);
initPNEWMEM(s[399]);
initPEWYNO01(s[400]);
initPEWYNO02(s[401]);
initPEWYNO03(s[402]);
initPEWYNO04(s[403]);
initPEWYNO05(s[404]);
initPEWYNO06(s[405]);
initPEWYNO07(s[406]);
initPEWYNO08(s[407]);
initPEWYNO09(s[408]);
initPEWYNO10(s[409]);
initPEWYNO11(s[410]);
initPEMFIN(s[411]);
initPCONT(s[412]);
initPANYO(s[413]);
initPNUMOS(s[414]);
initPOCNMSC(s[415]);
initPPRNMSC(s[416]);
initPSCHM_F(s[417]);
initPSCHY_F(s[418]);
initPSCHM_S(s[419]);
initPSCHY_S(s[420]);
initPSCHM_T(s[421]);
initPSCHY_T(s[422]);
initPOCTYP1(s[423]);
initPOJOIN1(s[424]);
initPORAGE1(s[425]);
initPOMETH1(s[426]);
initPOPYCH(s[427]);
initPOCONH1(s[428]);
initPOCNPR1(s[429]);
initPOCNFR1(s[430]);
initPOCNFG1(s[431]);
initPOLSYR1(s[432]);
initPOYRAM1(s[433]);
initPOEMP1(s[434]);
initPOEMPH1(s[435]);
initPOEMAM1(s[436]);
initPOEMPR1(s[437]);
initPOEMFR1(s[438]);
initPOEMFG1(s[439]);
initPOADD1(s[440]);
initPOADD2(s[441]);
initPOADD3(s[442]);
initPAVCH1(s[443]);
initPAVCAM1(s[444]);
initPAVCPR1(s[445]);
initPAVCFR1(s[446]);
initPAVCFG1(s[447]);
initPAVCIN1(s[448]);
initPIRREG(s[449]);
initPADDFUT(s[450]);
initPOCONCH1(s[451]);
initPOCNHOW1(s[452]);
initPOCNVOL1(s[453]);
initPOCNLRS1(s[454]);
initPOCNLRS2(s[455]);
initPOCNLRS3(s[456]);
initPOCNLRS4(s[457]);
initPOCNDRS1(s[458]);
initPOCNDRS2(s[459]);
initPOCNDRS3(s[460]);
initPOCNDRS4(s[461]);
initPOCNDRS5(s[462]);
initPOCNDRS6(s[463]);
initPOCNPLN1(s[464]);
initPDBCAL1(s[465]);
initPBFRAC1(s[466]);
initPBQUAL1(s[467]);
initPBLUMV1(s[468]);
initPBINCH1(s[469]);
initPBINCF1(s[470]);
initPBINCA1(s[471]);
initPBDOCS1(s[472]);
initPBSTYR1(s[473]);
initPBSTMN1(s[474]);
initPAVCUV1(s[475]);
initPAVCVB1(s[476]);
initPAVDOC1(s[477]);
initPASTYR1(s[478]);
initPASTMN1(s[479]);
initPDCVAL1(s[480]);
initPDCVB1(s[481]);
initPCDOCS1(s[482]);
initPCSTYR1(s[483]);
initPCSTMN1(s[484]);
initPOLUM1(s[485]);
initPOLMV1(s[486]);
initPOLMVB1(s[487]);
initPOLMUS1(s[488]);
initPOLMUS2(s[489]);
initPOLMUS3(s[490]);
initPOLMUS4(s[491]);
initPOLMUS5(s[492]);
initPOLMUS6(s[493]);
initPOCASH1(s[494]);
initPOANN1(s[495]);
initPOANN2(s[496]);
initPOANN3(s[497]);
initPOANN4(s[498]);
initPOANLM1(s[499]);
initPOANEXY1(s[500]);
initPOANEXM1(s[501]);
initPOANJT1(s[502]);
initPOANIF1(s[503]);
initPOANEH1(s[504]);
initPOANGA1(s[505]);
initPOANVI1(s[506]);
initPOANVB(s[507]);
initPODRVI1(s[508]);
initPODRVB1(s[509]);
initPODRINC1(s[510]);
initPODRINCB1(s[511]);
initPOPENVI(s[512]);
initPOPENVB(s[513]);
initPOFAN1(s[514]);
initPOFAN2(s[515]);
initPOFAN3(s[516]);
initPOFAN4(s[517]);
initPOFAN5(s[518]);
initPOFAN6(s[519]);
initPOFAWH1(s[520]);
initPOFAWH2(s[521]);
initPOFAWH3(s[522]);
initPOFAWH4(s[523]);
initPOFAWH5(s[524]);
initPOFAWH6(s[525]);
initPOFAAG1(s[526]);
initPOCTYP2(s[527]);
initPOJOIN2(s[528]);
initPORAGE2(s[529]);
initPOMETH2(s[530]);
initPOPYCH2(s[531]);
initPOCONH2(s[532]);
initPOCNPR2(s[533]);
initPOCNFR2(s[534]);
initPOCNFG2(s[535]);
initPOLSYR2(s[536]);
initPOYRAM2(s[537]);
initPOEMP2(s[538]);
initPOEMPH2(s[539]);
initPOEMAM2(s[540]);
initPOEMPR2(s[541]);
initPOEMFR2(s[542]);
initPOEMFG2(s[543]);
initPOADD4(s[544]);
initPOADD5(s[545]);
initPOADD6(s[546]);
initPAVCH2(s[547]);
initPAVCAM2(s[548]);
initPAVCPR2(s[549]);
initPAVCFR2(s[550]);
initPAVCFG2(s[551]);
initPAVCIN2(s[552]);
initPIRREG2(s[553]);
initPADDFUT2(s[554]);
initPOCONCH2(s[555]);
initPOCNHOW2(s[556]);
initPOCNVOL2(s[557]);
initPOCNLRS5(s[558]);
initPOCNLRS6(s[559]);
initPOCNLRS7(s[560]);
initPOCNLRS8(s[561]);
initPOCNDRS7(s[562]);
initPOCNDRS8(s[563]);
initPOCNDRS9(s[564]);
initPOCNDRS10(s[565]);
initPOCNDRS11(s[566]);
initPOCNDRS12(s[567]);
initPOCNPLN2(s[568]);
initPDBCAL2(s[569]);
initPBFRAC2(s[570]);
initPBQUAL2(s[571]);
initPBLUMV2(s[572]);
initPBLMVB2(s[573]);
initPBINCH2(s[574]);
initPBINCF2(s[575]);
initPBINCA2(s[576]);
initPBDOCS2(s[577]);
initPBSTYR2(s[578]);
initPBSTMN2(s[579]);
initPAVCUV2(s[580]);
initPAVCVB2(s[581]);
initPAVDOC2(s[582]);
initPASTYR2(s[583]);
initPASTMN2(s[584]);
initPDCVAL2(s[585]);
initPDCVB2(s[586]);
initPCDOCS2(s[587]);
initPCSTYR2(s[588]);
initPCSTMN2(s[589]);
initPOLUM2(s[590]);
initPOLMV2(s[591]);
initPOLMVB2(s[592]);
initPOLMUS7(s[593]);
initPOLMUS8(s[594]);
initPOLMUS9(s[595]);
initPOLMUS10(s[596]);
initPOLMUS11(s[597]);
initPOLMUS12(s[598]);
initPOCASH2(s[599]);
initPOANN5(s[600]);
initPOANN6(s[601]);
initPOANN7(s[602]);
initPOANN8(s[603]);
initPOANLM2(s[604]);
initPOANEXY2(s[605]);
initPOANEXM2(s[606]);
initPOANJT2(s[607]);
initPOANIF2(s[608]);
initPOANEH2(s[609]);
initPOANGA2(s[610]);
initPOANVI2(s[611]);
initPOANVB2(s[612]);
initPODRVI2(s[613]);
initPODRVB2(s[614]);
initPODRINC2(s[615]);
initPODRINCB2(s[616]);
initPOPENVI2(s[617]);
initPOPENVB2(s[618]);
initPOFAN7(s[619]);
initPOFAN8(s[620]);
initPOFAN9(s[621]);
initPOFAN10(s[622]);
initPOFAN11(s[623]);
initPOFAN12(s[624]);
initPOFAWH7(s[625]);
initPOFAWH8(s[626]);
initPOFAWH9(s[627]);
initPOFAWH10(s[628]);
initPOFAWH11(s[629]);
initPOFAWH12(s[630]);
initPOFAAG2(s[631]);
initPPYRST1(s[632]);
initPPORG1(s[633]);
initPPTYP1(s[634]);
initPPSIPP1(s[635]);
initPPPAY1(s[636]);
initPPRGH1(s[637]);
initPPRGAM(s[638]);
initPPRGPE1(s[639]);
initPPRGFR1(s[640]);
initPPRGFG1(s[641]);
initPPIRRY1(s[642]);
initPPIRRH1(s[643]);
initPPIRRA1(s[644]);
initPPIRRF1(s[645]);
initPPIRNO1(s[646]);
initPPLASY1(s[647]);
initPPLSTA1(s[648]);
initPPLSTP1(s[649]);
initPPEVRG1(s[650]);
initPPYSTP1(s[651]);
initPPYSTP2(s[652]);
initPPYSTP3(s[653]);
initPPYSTP4(s[654]);
initPPYSTP5(s[655]);
initPPYSTP6(s[656]);
initPPYSTP7(s[657]);
initPPCONCH(s[658]);
initPPCNHOW1(s[659]);
initPPCNLRS1(s[660]);
initPPCNLRS2(s[661]);
initPPCNLRS3(s[662]);
initPPCNLRS4(s[663]);
initPPCNDRS1(s[664]);
initPPCNDRS2(s[665]);
initPPCNDRS3(s[666]);
initPPCNDRS4(s[667]);
initPPCNDRS5(s[668]);
initPPCNDRS6(s[669]);
initPPCNDRS7(s[670]);
initPPCNDRS8(s[671]);
initPPCNPLN1(s[672]);
initPPEMP1(s[673]);
initPPEMPH1(s[674]);
initPPEMAM1(s[675]);
initPPEMPR1(s[676]);
initPPEMFR1(s[677]);
initPPEIRH1(s[678]);
initPPEIRA1(s[679]);
initPPEIRF1(s[680]);
initPPNINS1(s[681]);
initPPVINT1(s[682]);
initPSTYPE1(s[683]);
initPSTYPE2(s[684]);
initPSTYPE3(s[685]);
initPSTYPE4(s[686]);
initPSTYPE5(s[687]);
initPSTYPE6(s[688]);
initPSTYPE7(s[689]);
initPPVAL1(s[690]);
initPPVALB1(s[691]);
initPPDOCS1(s[692]);
initPPSTYR1(s[693]);
initPPSTMN1(s[694]);
initPMORTC(s[695]);
initPPLUM1(s[696]);
initPPLMV1(s[697]);
initPPLMVB1(s[698]);
initPPLMUS1(s[699]);
initPPCASH1(s[700]);
initPPANN1(s[701]);
initPPANN2(s[702]);
initPPANN3(s[703]);
initPPANN4(s[704]);
initPPANLM1(s[705]);
initPPANEXY1(s[706]);
initPPANEXM1(s[707]);
initPPANJT1(s[708]);
initPPANIF1(s[709]);
initPPANEH1(s[710]);
initPPANGA1(s[711]);
initPPANVI1(s[712]);
initPPANVB1(s[713]);
initPPDRVI1(s[714]);
initPPDRVB1(s[715]);
initPPDRINC1(s[716]);
initPPDRINCB(s[717]);
initPPFAN1(s[718]);
initPPFAN2(s[719]);
initPPFAN3(s[720]);
initPPFAN4(s[721]);
initPPFAN5(s[722]);
initPPFAWH1(s[723]);
initPPFAWH2(s[724]);
initPPFAWH3(s[725]);
initPPFAWH4(s[726]);
initPPFAWH5(s[727]);
initPPFAWH6(s[728]);
initPPFAWH7(s[729]);
initPPFAAG1(s[730]);
initPPACCU1(s[731]);
initPPYRST2(s[732]);
initPPORG2(s[733]);
initPPTYP2(s[734]);
initPPSIPP2(s[735]);
initPPPAY2(s[736]);
initPPRGH2(s[737]);
initPPRGAM2(s[738]);
initPPRGPE2(s[739]);
initPPRGFR2(s[740]);
initPPRGFG2(s[741]);
initPPIRRY2(s[742]);
initPPIRRH2(s[743]);
initPPIRRA2(s[744]);
initPPIRRF2(s[745]);
initPPIRNO2(s[746]);
initPPLASY2(s[747]);
initPPLSTA2(s[748]);
initPPLSTP2(s[749]);
initPPEVRG2(s[750]);
initPPYSTP8(s[751]);
initPPYSTP9(s[752]);
initPPYSTP10(s[753]);
initPPYSTP11(s[754]);
initPPYSTP12(s[755]);
initPPYSTP13(s[756]);
initPPYSTP14(s[757]);
initPPCONCH2(s[758]);
initPPCNHOW2(s[759]);
initPPCNLRS5(s[760]);
initPPCNLRS6(s[761]);
initPPCNLRS7(s[762]);
initPPCNLRS8(s[763]);
initPPCNDRS9(s[764]);
initPPCNDRS10(s[765]);
initPPCNDRS11(s[766]);
initPPCNDRS12(s[767]);
initPPCNDRS13(s[768]);
initPPCNDRS14(s[769]);
initPPCNDRS15(s[770]);
initPPCNDRS16(s[771]);
initPPCNPLN2(s[772]);
initPPEMP2(s[773]);
initPPEMPH2(s[774]);
initPPEMAM2(s[775]);
initPPEMPR2(s[776]);
initPPEMFR2(s[777]);
initPPEIRH2(s[778]);
initPPEIRA2(s[779]);
initPPEIRF2(s[780]);
initPPNINS2(s[781]);
initPPVINT2(s[782]);
initPSTYPE8(s[783]);
initPSTYPE9(s[784]);
initPSTYPE10(s[785]);
initPSTYPE11(s[786]);
initPSTYPE12(s[787]);
initPSTYPE13(s[788]);
initPSTYPE14(s[789]);
initPPVAL2(s[790]);
initPPVALB2(s[791]);
initPPDOCS2(s[792]);
initPPSTYR2(s[793]);
initPPSTMN2(s[794]);
initPMORTC2(s[795]);
initPPLUM2(s[796]);
initPPLMV2(s[797]);
initPPLMVB2(s[798]);
initPPLMUS2(s[799]);
initPPCASH2(s[800]);
initPPANN5(s[801]);
initPPANN6(s[802]);
initPPANN7(s[803]);
initPPANN8(s[804]);
initPPANLM2(s[805]);
initPPANEXY2(s[806]);
initPPANEXM2(s[807]);
initPPANJT2(s[808]);
initPPANIF2(s[809]);
initPPANEH2(s[810]);
initPPANGA2(s[811]);
initPPANVI2(s[812]);
initPPANVB2(s[813]);
initPPDRVI2(s[814]);
initPPDRVB2(s[815]);
initPPDRINC2(s[816]);
initPPDRINCB2(s[817]);
initPPFAN6(s[818]);
initPPFAN7(s[819]);
initPPFAN8(s[820]);
initPPFAN9(s[821]);
initPPFAN10(s[822]);
initPPFAWH8(s[823]);
initPPFAWH9(s[824]);
initPPFAWH10(s[825]);
initPPFAWH11(s[826]);
initPPFAWH12(s[827]);
initPPFAWH13(s[828]);
initPPFAWH14(s[829]);
initPPFAAG2(s[830]);
initPPACCU2(s[831]);
initPPYRST3(s[832]);
initPPORG3(s[833]);
initPPTYP3(s[834]);
initPPSIPP3(s[835]);
initPPPAY3(s[836]);
initPPRGH3(s[837]);
initPPRGAM3(s[838]);
initPPRGPE3(s[839]);
initPPRGFR3(s[840]);
initPPRGFG3(s[841]);
initPPIRRY3(s[842]);
initPPIRRH3(s[843]);
initPPIRRA3(s[844]);
initPPIRRF3(s[845]);
initPPIRNO3(s[846]);
initPPLASY3(s[847]);
initPPLSTA3(s[848]);
initPPLSTP3(s[849]);
initPPEVRG3(s[850]);
initPPYSTP15(s[851]);
initPPYSTP16(s[852]);
initPPYSTP17(s[853]);
initPPYSTP18(s[854]);
initPPYSTP19(s[855]);
initPPYSTP20(s[856]);
initPPYSTP21(s[857]);
initPPCONCH3(s[858]);
initPPCNHO___W3(s[859]);
initPPCNLRS9(s[860]);
initPPCNLRS10(s[861]);
initPPCNLRS11(s[862]);
initPPCNLRS12(s[863]);
initPPCNDRS17(s[864]);
initPPCNDRS18(s[865]);
initPPCNDRS19(s[866]);
initPPCNDRS20(s[867]);
initPPCNDRS21(s[868]);
initPPCNDRS22(s[869]);
initPPCNDRS23(s[870]);
initPPCNDRS24(s[871]);
initPPCNPLN3(s[872]);
initPPEMP3(s[873]);
initPPEMPH3(s[874]);
initPPEMAM3(s[875]);
initPPEMPR3(s[876]);
initPPEMFR3(s[877]);
initPPEIRH3(s[878]);
initPPEIRA3(s[879]);
initPPEIRF3(s[880]);
initPPNINS3(s[881]);
initPPVINT3(s[882]);
initPSTYPE15(s[883]);
initPSTYPE16(s[884]);
initPSTYPE17(s[885]);
initPSTYPE18(s[886]);
initPSTYPE19(s[887]);
initPSTYPE20(s[888]);
initPSTYPE21(s[889]);
initPPVAL3(s[890]);
initPPVALB3(s[891]);
initPPDOCS3(s[892]);
initPPSTYR3(s[893]);
initPPSTMN3(s[894]);
initPMORTC3(s[895]);
initPPLUM3(s[896]);
initPPLMV3(s[897]);
initPPLMVB3(s[898]);
initPPLMUS3(s[899]);
initPPCASH3(s[900]);
initPPANN9(s[901]);
initPPANN10(s[902]);
initPPANN11(s[903]);
initPPANN12(s[904]);
initPPANLM3(s[905]);
initPPANEXY3(s[906]);
initPPANEXM3(s[907]);
initPPANJT3(s[908]);
initPPANIF3(s[909]);
initPPANEH3(s[910]);
initPPANGA3(s[911]);
initPPANVI3(s[912]);
initPPANVB3(s[913]);
initPPDRVI3(s[914]);
initPPDRVB3(s[915]);
initPPDRINC3(s[916]);
initPPDRINCB3(s[917]);
initPPFAN11(s[918]);
initPPFAN12(s[919]);
initPPFAN13(s[920]);
initPPFAN14(s[921]);
initPPFAN15(s[922]);
initPPFAWH15(s[923]);
initPPFAWH16(s[924]);
initPPFAWH17(s[925]);
initPPFAWH18(s[926]);
initPPFAWH19(s[927]);
initPPFAWH20(s[928]);
initPPFAWH21(s[929]);
initPPFAAG3(s[930]);
initPPACCU3(s[931]);
initPFNEW(s[932]);
initPFNEWNO(s[933]);
initPEVERC(s[934]);
initPEVERNC(s[935]);
initPRETAIN(s[936]);
initPFNUM(s[937]);
initPFEN(s[938]);
initPFENNUM(s[939]);
initRPFCRET1(s[940]);
initRPFCRET2(s[941]);
initRPFCRET3(s[942]);
initRPFCRET4(s[943]);
initRPFCRET5(s[944]);
initRPFCRET6(s[945]);
initRPCRET1(s[946]);
initRPCRET2(s[947]);
initRPCRET3(s[948]);
initPFTYP1(s[949]);
initPFOCTY1(s[950]);
initPFLUM1(s[951]);
initPFLMV1(s[952]);
initPFLMVB1(s[953]);
initPFLMUS1(s[954]);
initPFLUMALL1(s[955]);
initPFCASH1(s[956]);
initPFANN1(s[957]);
initPFANN2(s[958]);
initPFANN3(s[959]);
initPFANN4(s[960]);
initPFANN5(s[961]);
initPFREM1(s[962]);
initPFANLM1(s[963]);
initPFANEXY1(s[964]);
initPFANEXM1(s[965]);
initPFANJT1(s[966]);
initPFANIF1(s[967]);
initPFANEH1(s[968]);
initPFANGA1(s[969]);
initPFANVI1(s[970]);
initPFANVB1(s[971]);
initPFDRVI1(s[972]);
initPFDRVB1(s[973]);
initPFDRINC1(s[974]);
initPFDRINCB1(s[975]);
initPFPENVI1(s[976]);
initPFPENVB1(s[977]);
initPFFAN1(s[978]);
initPFFAN2(s[979]);
initPFFAN3(s[980]);
initPFFAN4(s[981]);
initPFFAN5(s[982]);
initPFFAWH1(s[983]);
initPFFAWH2(s[984]);
initPFFAWH3(s[985]);
initPFFAWH4(s[986]);
initPFFAWH5(s[987]);
initPFFAWH6(s[988]);
initPFFAAG1(s[989]);
initPFREC1(s[990]);
initPFDRAW1(s[991]);
initPFDDV1(s[992]);
initPFDDVB1(s[993]);
initPFBEG1(s[994]);
initPFEND1(s[995]);
initPFSIPTY1(s[996]);
initPFSIPTY2(s[997]);
initPFSIPTY3(s[998]);
initPFSIPTY4(s[999]);
initPFSIPTY5(s[1000]);
initPFSIPTY6(s[1001]);
initPFSIPTY7(s[1002]);
initPFCURV1(s[1003]);
initPFCUVB1(s[1004]);
initPFLUMV1(s[1005]);
initPFLUVB1(s[1006]);
initPFINCP1(s[1007]);
initPFINCA1(s[1008]);
initPFDOCS1(s[1009]);
initPFSTMY1(s[1010]);
initPFSTMM1(s[1011]);
initPFSTAT1(s[1012]);
initPFTYP2(s[1013]);
initPFOCTY2(s[1014]);
initPFLUM2(s[1015]);
initPFLMV2(s[1016]);
initPFLMVB2(s[1017]);
initPFLMUS2(s[1018]);
initPFLUMALL2(s[1019]);
initPFCASH2(s[1020]);
initPFANN6(s[1021]);
initPFANN7(s[1022]);
initPFANN8(s[1023]);
initPFANN9(s[1024]);
initPFANN10(s[1025]);
initPFREM2(s[1026]);
initPFANLM2(s[1027]);
initPFANEXY2(s[1028]);
initPFANEXM2(s[1029]);
initPFANJT2(s[1030]);
initPFANIF2(s[1031]);
initPFANEH2(s[1032]);
initPFANGA2(s[1033]);
initPFANVI2(s[1034]);
initPFANVB2(s[1035]);
initPFDRVI2(s[1036]);
initPFDRVB2(s[1037]);
initPFDRINC2(s[1038]);
initPFDRINCB2(s[1039]);
initPFPENVI2(s[1040]);
initPFPENVB2(s[1041]);
initPFFAN6(s[1042]);
initPFFAN7(s[1043]);
initPFFAN8(s[1044]);
initPFFAN9(s[1045]);
initPFFAN10(s[1046]);
initPFFAWH7(s[1047]);
initPFFAWH8(s[1048]);
initPFFAWH9(s[1049]);
initPFFAWH10(s[1050]);
initPFFAWH11(s[1051]);
initPFFAWH12(s[1052]);
initPFFAAG2(s[1053]);
initPFREC2(s[1054]);
initPFDRAW2(s[1055]);
initPFDDV2(s[1056]);
initPFDDVB2(s[1057]);
initPFBEG2(s[1058]);
initPFEND2(s[1059]);
initPFSIPTY8(s[1060]);
initPFSIPTY9(s[1061]);
initPFSIPTY10(s[1062]);
initPFSIPTY11(s[1063]);
initPFSIPTY12(s[1064]);
initPFSIPTY13(s[1065]);
initPFSIPTY14(s[1066]);
initPFCURV2(s[1067]);
initPFCUVB2(s[1068]);
initPFLUMV2(s[1069]);
initPFLUVB2(s[1070]);
initPFINCP2(s[1071]);
initPFINCA2(s[1072]);
initPFDOCS2(s[1073]);
initPFSTMY2(s[1074]);
initPFSTMM2(s[1075]);
initPFSTAT2(s[1076]);
initPFTYP3(s[1077]);
initPFOCTY3(s[1078]);
initPFLUM3(s[1079]);
initPFLMV3(s[1080]);
initPFLMVB3(s[1081]);
initPFLMUS3(s[1082]);
initPFLUMALL3(s[1083]);
initPFCASH3(s[1084]);
initPFANN11(s[1085]);
initPFANN12(s[1086]);
initPFANN13(s[1087]);
initPFANN14(s[1088]);
initPFANN15(s[1089]);
initPFREM3(s[1090]);
initPFANLM3(s[1091]);
initPFANEXY3(s[1092]);
initPFANEXM3(s[1093]);
initPFANJT3(s[1094]);
initPFANIF3(s[1095]);
initPFANEH3(s[1096]);
initPFANGA3(s[1097]);
initPFANVI3(s[1098]);
initPFANVB3(s[1099]);
initPFDRVI3(s[1100]);
initPFDRVB3(s[1101]);
initPFDRINC3(s[1102]);
initPFDRINCB3(s[1103]);
initPFPENVI3(s[1104]);
initPFPENVB3(s[1105]);
initPFFAN11(s[1106]);
initPFFAN12(s[1107]);
initPFFAN13(s[1108]);
initPFFAN14(s[1109]);
initPFFAN15(s[1110]);
initPFFAWH13(s[1111]);
initPFFAWH14(s[1112]);
initPFFAWH15(s[1113]);
initPFFAWH16(s[1114]);
initPFFAWH17(s[1115]);
initPFFAWH18(s[1116]);
initPFFAAG3(s[1117]);
initPFREC3(s[1118]);
initPFDRA___W3(s[1119]);
initPFDDV3(s[1120]);
initPFDDVB3(s[1121]);
initPFBEG3(s[1122]);
initPFEND3(s[1123]);
initPFSIPTY15(s[1124]);
initPFSIPTY16(s[1125]);
initPFSIPTY17(s[1126]);
initPFSIPTY18(s[1127]);
initPFSIPTY19(s[1128]);
initPFSIPTY20(s[1129]);
initPFSIPTY21(s[1130]);
initPFCURV3(s[1131]);
initPFCUVB3(s[1132]);
initPFLUMV3(s[1133]);
initPFLUVB3(s[1134]);
initPFINCP3(s[1135]);
initPFINCA3(s[1136]);
initPFDOCS3(s[1137]);
initPFSTMY3(s[1138]);
initPFSTMM3(s[1139]);
initPFSTAT3(s[1140]);
initPFTYP4(s[1141]);
initPFOCTY4(s[1142]);
initPFLUM4(s[1143]);
initPFLMV4(s[1144]);
initPFLMVB4(s[1145]);
initPFLMUS4(s[1146]);
initPFLUMALL4(s[1147]);
initPFCASH4(s[1148]);
initPFANN16(s[1149]);
initPFANN17(s[1150]);
initPFANN18(s[1151]);
initPFANN19(s[1152]);
initPFANN20(s[1153]);
initPFREM4(s[1154]);
initPFANLM4(s[1155]);
initPFANEXY4(s[1156]);
initPFANEXM4(s[1157]);
initPFANJT4(s[1158]);
initPFANIF4(s[1159]);
initPFANEH4(s[1160]);
initPFANGA4(s[1161]);
initPFANVI4(s[1162]);
initPFANVB4(s[1163]);
initPFDRVI4(s[1164]);
initPFDRVB4(s[1165]);
initPFDRINC4(s[1166]);
initPFDRINCB4(s[1167]);
initPFPENVI4(s[1168]);
initPFPENVB4(s[1169]);
initPFFAN16(s[1170]);
initPFFAN17(s[1171]);
initPFFAN18(s[1172]);
initPFFAN19(s[1173]);
initPFFAN20(s[1174]);
initPFFAWH19(s[1175]);
initPFFAWH20(s[1176]);
initPFFAWH21(s[1177]);
initPFFAWH22(s[1178]);
initPFFAWH23(s[1179]);
initPFFAWH24(s[1180]);
initPFFAAG4(s[1181]);
initPFREC4(s[1182]);
initPFDRAW4(s[1183]);
initPFDDV4(s[1184]);
initPFDDVB4(s[1185]);
initPFBEG4(s[1186]);
initPFEND4(s[1187]);
initPFSIPTY22(s[1188]);
initPFSIPTY23(s[1189]);
initPFSIPTY24(s[1190]);
initPFSIPTY25(s[1191]);
initPFSIPTY26(s[1192]);
initPFSIPTY27(s[1193]);
initPFSIPTY28(s[1194]);
initPFCURV4(s[1195]);
initPFCUVB4(s[1196]);
initPFLUMV4(s[1197]);
initPFLUVB4(s[1198]);
initPFINCP4(s[1199]);
initPFINCA4(s[1200]);
initPFDOCS4(s[1201]);
initPFSTMY4(s[1202]);
initPFSTMM4(s[1203]);
initPFSTAT4(s[1204]);
initPFTYP5(s[1205]);
initPFOCTY5(s[1206]);
initPFLUM5(s[1207]);
initPFLMV5(s[1208]);
initPFLMVB5(s[1209]);
initPFLMUS5(s[1210]);
initPFLUMALL5(s[1211]);
initPFCASH5(s[1212]);
initPFANN21(s[1213]);
initPFANN22(s[1214]);
initPFANN23(s[1215]);
initPFANN24(s[1216]);
initPFANN25(s[1217]);
initPFREM5(s[1218]);
initPFANLM5(s[1219]);
initPFANEXY5(s[1220]);
initPFANEXM5(s[1221]);
initPFANJT5(s[1222]);
initPFANIF5(s[1223]);
initPFANEH5(s[1224]);
initPFANGA5(s[1225]);
initPFANVI5(s[1226]);
initPFANVB5(s[1227]);
initPFDRVI5(s[1228]);
initPFDRVB5(s[1229]);
initPFDRINC5(s[1230]);
initPFDRINCB5(s[1231]);
initPFPENVI5(s[1232]);
initPFPENVB5(s[1233]);
initPFFAN21(s[1234]);
initPFFAN22(s[1235]);
initPFFAN23(s[1236]);
initPFFAN24(s[1237]);
initPFFAN25(s[1238]);
initPFFAWH25(s[1239]);
initPFFAWH26(s[1240]);
initPFFAWH27(s[1241]);
initPFFAWH28(s[1242]);
initPFFAWH29(s[1243]);
initPFFAWH30(s[1244]);
initPFFAAG5(s[1245]);
initPFREC5(s[1246]);
initPFDRAW5(s[1247]);
initPFDDV5(s[1248]);
initPFDDVB5(s[1249]);
initPFBEG5(s[1250]);
initPFEND5(s[1251]);
initPFSIPTY29(s[1252]);
initPFSIPTY30(s[1253]);
initPFSIPTY31(s[1254]);
initPFSIPTY32(s[1255]);
initPFSIPTY33(s[1256]);
initPFSIPTY34(s[1257]);
initPFSIPTY35(s[1258]);
initPFCURV5(s[1259]);
initPFCUVB5(s[1260]);
initPFLUMV5(s[1261]);
initPFLUVB5(s[1262]);
initPFINCP5(s[1263]);
initPFINCA5(s[1264]);
initPFDOCS5(s[1265]);
initPFSTMY5(s[1266]);
initPFSTMM5(s[1267]);
initPFSTAT5(s[1268]);
initPFTYP6(s[1269]);
initPFOCTY6(s[1270]);
initPFLUM6(s[1271]);
initPFLMV6(s[1272]);
initPFLMVB6(s[1273]);
initPFLMUS6(s[1274]);
initPFLUMALL6(s[1275]);
initPFCASH6(s[1276]);
initPFANN26(s[1277]);
initPFANN27(s[1278]);
initPFANN28(s[1279]);
initPFANN29(s[1280]);
initPFANN30(s[1281]);
initPFREM6(s[1282]);
initPFANLM6(s[1283]);
initPFANEXY6(s[1284]);
initPFANEXM6(s[1285]);
initPFANJT6(s[1286]);
initPFANIF6(s[1287]);
initPFANEH6(s[1288]);
initPFANGA6(s[1289]);
initPFANVI6(s[1290]);
initPFANVB6(s[1291]);
initPFDRVI6(s[1292]);
initPFDRVB6(s[1293]);
initPFDRINC6(s[1294]);
initPFDRINCB6(s[1295]);
initPFPENVI6(s[1296]);
initPFPENVB6(s[1297]);
initPFFAN26(s[1298]);
initPFFAN27(s[1299]);
initPFFAN28(s[1300]);
initPFFAN29(s[1301]);
initPFFAN30(s[1302]);
initPFFAWH31(s[1303]);
initPFFAWH32(s[1304]);
initPFFAWH33(s[1305]);
initPFFAWH34(s[1306]);
initPFFAWH35(s[1307]);
initPFFAWH36(s[1308]);
initPFFAAG6(s[1309]);
initPFREC6(s[1310]);
initPFDRAW6(s[1311]);
initPFDDV6(s[1312]);
initPFDDVB6(s[1313]);
initPFBEG6(s[1314]);
initPFEND6(s[1315]);
initPFSIPTY36(s[1316]);
initPFSIPTY37(s[1317]);
initPFSIPTY38(s[1318]);
initPFSIPTY39(s[1319]);
initPFSIPTY40(s[1320]);
initPFSIPTY41(s[1321]);
initPFSIPTY42(s[1322]);
initPFCURV6(s[1323]);
initPFCUVB6(s[1324]);
initPFLUMV6(s[1325]);
initPFLUVB6(s[1326]);
initPFINCP6(s[1327]);
initPFINCA6(s[1328]);
initPFDOCS6(s[1329]);
initPFSTMY6(s[1330]);
initPFSTMM6(s[1331]);
initPFSTAT6(s[1332]);
initPWID(s[1333]);
initPWIDFUT(s[1334]);
initPWLUM(s[1335]);
initPWLUVAL(s[1336]);
initPWEXPH(s[1337]);
initPWEXPA(s[1338]);
initPSPSE(s[1339]);
initPSPLUM(s[1340]);
initPSPLUVAL(s[1341]);
initPSPEXPH(s[1342]);
initPSPEXPA(s[1343]);
initPWACCU(s[1344]);
initOPENS01(s[1345]);
initOPENS02(s[1346]);
initOPENS03(s[1347]);
initOPENS04(s[1348]);
initOPENS05(s[1349]);
initOPENS06(s[1350]);
initOPENS07(s[1351]);
initOPENS08(s[1352]);
initOPENS09(s[1353]);
initOPENS10(s[1354]);
initOPENS11(s[1355]);
initOPENS12(s[1356]);
initOPENS13(s[1357]);
initOPENS14(s[1358]);
initOPENS15(s[1359]);
initOEXPINC01(s[1360]);
initOEXPINC02(s[1361]);
initOEXPINC03(s[1362]);
initOEXPINC04(s[1363]);
initOEXPINC05(s[1364]);
initOEXPINC06(s[1365]);
initOEXPINC07(s[1366]);
initOEXPINC08(s[1367]);
initOEXPINC09(s[1368]);
initOEXPINC10(s[1369]);
initOEXPINC11(s[1370]);
initOEXPINC12(s[1371]);
initOEXPINC13(s[1372]);
initOEXPINC14(s[1373]);
initOEXPINC15(s[1374]);
initOLARGE(s[1375]);
initOPENSAV(s[1376]);
initOSTANDL(s[1377]);
initFINVTY01(s[1378]);
initFINVTY02(s[1379]);
initFINVTY03(s[1380]);
initFINVTY04(s[1381]);
initFINVTY05(s[1382]);
initFINVTY06(s[1383]);
initFINVTY07(s[1384]);
initFINVTY08(s[1385]);
initFINVTY09(s[1386]);
initFINVTY10(s[1387]);
initFINVTY11(s[1388]);
initDCOSHV1(s[1389]);
initDCOSHVB1(s[1390]);
initDCOSHV2(s[1391]);
initDCOSHVB2(s[1392]);
initDCOSHV3(s[1393]);
initDCOSHVB3(s[1394]);
initDCOSHV4(s[1395]);
initDCOSHVB4(s[1396]);
initDCOSHV5(s[1397]);
initDCOSHVB5(s[1398]);
initDCOINV1(s[1399]);
initDCOINVB1(s[1400]);
initDCOINV2(s[1401]);
initDCOINVB2(s[1402]);
initDCOINV3(s[1403]);
initDCOINVB3(s[1404]);
initDCOINV4(s[1405]);
initDCOINVB4(s[1406]);
initDCOINV5(s[1407]);
initDCOINVB5(s[1408]);
initFCACSH(s[1409]);
initFCNUMSH(s[1410]);
initFCNUMIN(s[1411]);
initFCSUPPR(s[1412]);
initFCOVDSH(s[1413]);
initFCOVNSH(s[1414]);
initFCSHVAL(s[1415]);
initFCSHVLB(s[1416]);
initFCOVDIN(s[1417]);
initFCOVNIN(s[1418]);
initFCOVDIF(s[1419]);
initFCINVAL(s[1420]);
initFCINVLB(s[1421]);
initFSACSH(s[1422]);
initFSNUMSH(s[1423]);
initFSNUMIN(s[1424]);
initFSSUPPR(s[1425]);
initFSTYPSH1(s[1426]);
initFSTYPSH2(s[1427]);
initFSTYPSH3(s[1428]);
initFSTYPSH4(s[1429]);
initFSTYPSH5(s[1430]);
initFSTYPIN1(s[1431]);
initFSTYPIN2(s[1432]);
initFSTYPIN3(s[1433]);
initFSTYPIN4(s[1434]);
initFSTYPIN5(s[1435]);
initFSSHVAL(s[1436]);
initFSSHVLB(s[1437]);
initFSINVAL(s[1438]);
initFSINVLB(s[1439]);
initFSOSHAV(s[1440]);
initFSOSVLB(s[1441]);
initFISA1(s[1442]);
initFISA2(s[1443]);
initFCISAV(s[1444]);
initFCISAB(s[1445]);
initFIISAV(s[1446]);
initFIISAB(s[1447]);
initFKISAV(s[1448]);
initFKISAB(s[1449]);
initNEWFCMX(s[1450]);
initFCISAWD(s[1451]);
initFCIWNUM(s[1452]);
initFCIWDAB(s[1453]);
initFCISCE(s[1454]);
initFBONDTY1(s[1455]);
initFBONDTY2(s[1456]);
initFBONDTY3(s[1457]);
initFBONDV(s[1458]);
initFBONDVB(s[1459]);
initFCOLLV(s[1460]);
initFCOLLVB(s[1461]);
initFESHA(s[1462]);
initFESHAV(s[1463]);
initFESHVB(s[1464]);
initFEOPTV(s[1465]);
initFEOPVB(s[1466]);
initFSHARE1(s[1467]);
initFSHARE2(s[1468]);
initFSHARE3(s[1469]);
initFSHUKV(s[1470]);
initFSHUKVB(s[1471]);
initFSHOSV(s[1472]);
initFSHOSVB(s[1473]);
initFSHADD(s[1474]);
initFSHADA(s[1475]);
initFSHADAB(s[1476]);
initFNSAV1(s[1477]);
initFNSAV2(s[1478]);
initFNSAV3(s[1479]);
initFNSAV4(s[1480]);
initFNSVAL1(s[1481]);
initFNSVB(s[1482]);
initFGILTS1(s[1483]);
initFGILTS2(s[1484]);
initFGILTS3(s[1485]);
initFGILTS4(s[1486]);
initFGLTUKV(s[1487]);
initFGUKVB(s[1488]);
initFGLTFOV(s[1489]);
initFGFOVB(s[1490]);
initFLFENV(s[1491]);
initFLFENVB(s[1492]);
initFLFSIV(s[1493]);
initFLFSIVB(s[1494]);
initFLFFSV(s[1495]);
initFLFFSVB(s[1496]);
initFLFTEV(s[1497]);
initFLFTEVB(s[1498]);
initFINS(s[1499]);
initFINSV(s[1500]);
initFLPROD1(s[1501]);
initFLPROD2(s[1502]);
initFLPROD3(s[1503]);
initFLPROD4(s[1504]);
initFINVOTV(s[1505]);
initFINVOVB(s[1506]);
initFINCVB(s[1507]);
initFINFSAV1(s[1508]);
initFINFSAV2(s[1509]);
initFINFSAV3(s[1510]);
initFINFSAV4(s[1511]);
initFINFLV(s[1512]);
initFLOANVB(s[1513]);
initFINFV(s[1514]);
initFINFVB(s[1515]);
initFSAVED(s[1516]);
initFWITHD(s[1517]);
initFSAVAB(s[1518]);
initUPROP1(s[1519]);
initUPROP2(s[1520]);
initUPROP3(s[1521]);
initUPROP4(s[1522]);
initUNMTYP(s[1523]);
initUNUMHS(s[1524]);
initUBUYLET(s[1525]);
initUNUMBD(s[1526]);
initUNUMLA(s[1527]);
initUNUMOV(s[1528]);
initUNUMRE(s[1529]);
initUPRTYP(s[1530]);
initUPRSH1(s[1531]);
initUPRSH2(s[1532]);
initUPRTYP2(s[1533]);
initUPRSH3(s[1534]);
initUPRSH4(s[1535]);
initUPRTYP3(s[1536]);
initUPRSH5(s[1537]);
initUPRSH6(s[1538]);
initUPRTYP4(s[1539]);
initUPRTYP5(s[1540]);
initUPRTYP6(s[1541]);
initUPRTYP7(s[1542]);
initUPRSH13(s[1543]);
initUPRSH14(s[1544]);
initUPRTYP8(s[1545]);
initUPRSH15(s[1546]);
initUPRSH16(s[1547]);
initUPRTYP9(s[1548]);
initUPRSH17(s[1549]);
initUPRSH18(s[1550]);
initUPRTYP10(s[1551]);
initUPRSH19(s[1552]);
initUPRSH20(s[1553]);
initULAND10(s[1554]);
initUPRTYP11(s[1555]);
initUPRSH21(s[1556]);
initUPRSH22(s[1557]);
initULAND11(s[1558]);
initUPRTYP12(s[1559]);
initUPRSH23(s[1560]);
initUPRSH24(s[1561]);
initULAND12(s[1562]);
initUPRTYP13(s[1563]);
initUPRSH25(s[1564]);
initUPRSH26(s[1565]);
initUPRTYP14(s[1566]);
initUPRSH27(s[1567]);
initUPRSH28(s[1568]);
initUPRTYP15(s[1569]);
initUPRSH29(s[1570]);
initUPRSH30(s[1571]);
initUPRTYP16(s[1572]);
initUPRSH31(s[1573]);
initUPRSH32(s[1574]);
initULAND16(s[1575]);
initUPRTYP17(s[1576]);
initUPRSH33(s[1577]);
initUPRSH34(s[1578]);
initULAND17(s[1579]);
initUPRTYP18(s[1580]);
initUPRSH35(s[1581]);
initUPRSH36(s[1582]);
initULAND18(s[1583]);
initDCNUM2(s[1584]);
initDCANY(s[1585]);
initDCANU(s[1586]);
initDCNUM1(s[1587]);
initDCCOS1(s[1588]);
initDCCSP1(s[1589]);
initDCNAM1(s[1590]);
initDCONM1(s[1591]);
initDCONM2(s[1592]);
initDCRSP1(s[1593]);
initDCREC1(s[1594]);
initDCPER1(s[1595]);
initDCAMC1(s[1596]);
initDCAMP1(s[1597]);
initDCAMD1(s[1598]);
initDCESB1(s[1599]);
initDCINZ1(s[1600]);
initDC12BEH1(s[1601]);
initDC12OWE1(s[1602]);
initDCCOS2(s[1603]);
initDCCSP2(s[1604]);
initDCNAM2(s[1605]);
initDCONM3(s[1606]);
initDCONM4(s[1607]);
initDCRSP2(s[1608]);
initDCREC2(s[1609]);
initDCPER2(s[1610]);
initDCAMC2(s[1611]);
initDCAMP2(s[1612]);
initDCAMD2(s[1613]);
initDCESB2(s[1614]);
initDCINZ2(s[1615]);
initDC12BEH2(s[1616]);
initDC12OWE2(s[1617]);
initDCCOS3(s[1618]);
initDCCSP3(s[1619]);
initDCNAM3(s[1620]);
initDCONM5(s[1621]);
initDCONM6(s[1622]);
initDCRSP3(s[1623]);
initDCREC3(s[1624]);
initDCPER3(s[1625]);
initDCAMC3(s[1626]);
initDCAMP3(s[1627]);
initDCAMD3(s[1628]);
initDCESB3(s[1629]);
initDCINZ3(s[1630]);
initDC12BEH3(s[1631]);
initDC12OWE3(s[1632]);
initDCCOS4(s[1633]);
initDCCSP4(s[1634]);
initDCNAM4(s[1635]);
initDCONM7(s[1636]);
initDCONM8(s[1637]);
initDCRSP4(s[1638]);
initDCREC4(s[1639]);
initDCPER4(s[1640]);
initDCAMC4(s[1641]);
initDCAMP4(s[1642]);
initDCAMD4(s[1643]);
initDCESB4(s[1644]);
initDCINZ4(s[1645]);
initDC12BEH4(s[1646]);
initDC12OWE4(s[1647]);
initDCCOS5(s[1648]);
initDCCSP5(s[1649]);
initDCNAM5(s[1650]);
initDCONM9(s[1651]);
initDCONM10(s[1652]);
initDCRSP5(s[1653]);
initDCREC5(s[1654]);
initDCPER5(s[1655]);
initDCAMC5(s[1656]);
initDCAMP5(s[1657]);
initDCAMD5(s[1658]);
initDCESB5(s[1659]);
initDCINZ5(s[1660]);
initDC12BEH5(s[1661]);
initDC12OWE5(s[1662]);
initDSNUM2(s[1663]);
initDSANY1(s[1664]);
initDSANY2(s[1665]);
initDSANU1(s[1666]);
initDSANU2(s[1667]);
initDSNUM(s[1668]);
initDSCOS1(s[1669]);
initDSCSP1(s[1670]);
initDSNAM1(s[1671]);
initDSONM1(s[1672]);
initDSONM2(s[1673]);
initDSRSP1(s[1674]);
initDSREC1(s[1675]);
initDSPER1(s[1676]);
initDSAMC1(s[1677]);
initDSAMP1(s[1678]);
initDSAMD1(s[1679]);
initDSESB1(s[1680]);
initDS12BEH1(s[1681]);
initDS12OWE1(s[1682]);
initDSCOS2(s[1683]);
initDSCSP2(s[1684]);
initDSNAM2(s[1685]);
initDSONM3(s[1686]);
initDSONM4(s[1687]);
initDSRSP2(s[1688]);
initDSREC2(s[1689]);
initDSPER2(s[1690]);
initDSAMC2(s[1691]);
initDSAMP2(s[1692]);
initDSAMD2(s[1693]);
initDSESB2(s[1694]);
initDS12BEH2(s[1695]);
initDS12OWE2(s[1696]);
initDSCOS3(s[1697]);
initDSCSP3(s[1698]);
initDSNAM3(s[1699]);
initDSONM5(s[1700]);
initDSONM6(s[1701]);
initDSRSP3(s[1702]);
initDSREC3(s[1703]);
initDSPER3(s[1704]);
initDSAMC3(s[1705]);
initDSAMP3(s[1706]);
initDSAMD3(s[1707]);
initDSESB3(s[1708]);
initDS12BEH3(s[1709]);
initDS12OWE3(s[1710]);
initDSCOS4(s[1711]);
initDSCSP4(s[1712]);
initDSNAM4(s[1713]);
initDSONM7(s[1714]);
initDSONM8(s[1715]);
initDSRSP4(s[1716]);
initDSREC4(s[1717]);
initDSPER4(s[1718]);
initDSAMC4(s[1719]);
initDSAMP4(s[1720]);
initDSAMD4(s[1721]);
initDSESB4(s[1722]);
initDS12BEH4(s[1723]);
initDS12OWE4(s[1724]);
initDSCOS5(s[1725]);
initDSCSP5(s[1726]);
initDSNAM5(s[1727]);
initDSONM9(s[1728]);
initDSONM10(s[1729]);
initDSRSP5(s[1730]);
initDSREC5(s[1731]);
initDSPER5(s[1732]);
initDSAMC5(s[1733]);
initDSAMP5(s[1734]);
initDSAMD5(s[1735]);
initDSESB5(s[1736]);
initDS12BEH5(s[1737]);
initDS12OWE5(s[1738]);
initPRESMON(s[1739]);
initPRESYR(s[1740]);
initDMOANY(s[1741]);
initDMONUM(s[1742]);
initDMOINS1(s[1743]);
initDMOEST1(s[1744]);
initDMOOFT1(s[1745]);
initDMOWHNY1(s[1746]);
initDMOWHNM1(s[1747]);
initDMOWEST1(s[1748]);
initDMOINT1(s[1749]);
initDMOBEH1(s[1750]);
initDMOOWE1(s[1751]);
initDMOINS2(s[1752]);
initDMOEST2(s[1753]);
initDMOOFT2(s[1754]);
initDMOWHNY2(s[1755]);
initDMOWHNM2(s[1756]);
initDMOWEST2(s[1757]);
initDMOINT2(s[1758]);
initDMOBEH2(s[1759]);
initDMOOWE2(s[1760]);
initDMOINS3(s[1761]);
initDMOEST3(s[1762]);
initDMOOFT3(s[1763]);
initDMOWHNY3(s[1764]);
initDMOWHNM3(s[1765]);
initDMOWEST3(s[1766]);
initDMOINT3(s[1767]);
initDMOBEH3(s[1768]);
initDMOOWE3(s[1769]);
initDMOINS4(s[1770]);
initDMOEST4(s[1771]);
initDMOOFT4(s[1772]);
initDMOWHNY4(s[1773]);
initDMOWHNM4(s[1774]);
initDMOWEST4(s[1775]);
initDMOINT4(s[1776]);
initDMOBEH4(s[1777]);
initDMOOWE4(s[1778]);
initDMOINS5(s[1779]);
initDMOEST5(s[1780]);
initDMOOFT5(s[1781]);
initDMOWHNY5(s[1782]);
initDMOWHNM5(s[1783]);
initDMOWEST5(s[1784]);
initDMOINT5(s[1785]);
initDMOBEH5(s[1786]);
initDMOOWE5(s[1787]);
initDHPANY1(s[1788]);
initDHPANY2(s[1789]);
initDHPANY3(s[1790]);
initDHPANY4(s[1791]);
initDHPANY5(s[1792]);
initDHPANY6(s[1793]);
initDHPANY7(s[1794]);
initDHPNUM(s[1795]);
initDHPINS1(s[1796]);
initDHPEST1(s[1797]);
initDHPOFT1(s[1798]);
initDHPWHNY1(s[1799]);
initDHPWHNM1(s[1800]);
initDHPWEST1(s[1801]);
initDHPINT1(s[1802]);
initDHPBEH1(s[1803]);
initDHPOWE1(s[1804]);
initDTTOWE1(s[1805]);
initDTTOWEB1(s[1806]);
initDTTOWE2(s[1807]);
initDTTOWEB2(s[1808]);
initDTTOWE3(s[1809]);
initDTTOWEB3(s[1810]);
initDHPINS2(s[1811]);
initDHPEST2(s[1812]);
initDHPOFT2(s[1813]);
initDHPWHNY2(s[1814]);
initDHPWHNM2(s[1815]);
initDHPWEST2(s[1816]);
initDHPINT2(s[1817]);
initDHPBEH2(s[1818]);
initDHPOWE2(s[1819]);
initDTTOWEB4(s[1820]);
initDTTOWEB5(s[1821]);
initDTTOWEB6(s[1822]);
initDHPINS3(s[1823]);
initDHPEST3(s[1824]);
initDHPOFT3(s[1825]);
initDHPWHNY3(s[1826]);
initDHPWHNM3(s[1827]);
initDHPWEST3(s[1828]);
initDHPINT3(s[1829]);
initDHPBEH3(s[1830]);
initDHPOWE3(s[1831]);
initDTTOWEB7(s[1832]);
initDTTOWEB8(s[1833]);
initDTTOWEB9(s[1834]);
initDHPINS4(s[1835]);
initDHPEST4(s[1836]);
initDHPOFT4(s[1837]);
initDHPWHNY4(s[1838]);
initDHPWHNM4(s[1839]);
initDHPWEST4(s[1840]);
initDHPINT4(s[1841]);
initDHPBEH4(s[1842]);
initDHPOWE4(s[1843]);
initDTTOWEB10(s[1844]);
initDTTOWEB11(s[1845]);
initDTTOWEB12(s[1846]);
initDHPINS5(s[1847]);
initDHPEST5(s[1848]);
initDHPOFT5(s[1849]);
initDHPWHNY5(s[1850]);
initDHPWHNM5(s[1851]);
initDHPWEST5(s[1852]);
initDHPINT5(s[1853]);
initDHPBEH5(s[1854]);
initDHPOWE5(s[1855]);
initDTTOWEB13(s[1856]);
initDTTOWEB14(s[1857]);
initDTTOWEB15(s[1858]);
initNWHP(s[1859]);
initNWHPNO(s[1860]);
initDLONM(s[1861]);
initDLOLD1(s[1862]);
initDLOLD2(s[1863]);
initDLOLD3(s[1864]);
initDLOLD4(s[1865]);
initDLOLD5(s[1866]);
initDLANY(s[1867]);
initDLNNM(s[1868]);
initDLNUM(s[1869]);
initDLTYPE1(s[1870]);
initDSLPAY1(s[1871]);
initDSLAMT1(s[1872]);
initDSLEST1(s[1873]);
initDLWHY1(s[1874]);
initDLWHY2(s[1875]);
initDLWHY3(s[1876]);
initDLWHY4(s[1877]);
initDLWHY5(s[1878]);
initDLWHY6(s[1879]);
initDLWHY7(s[1880]);
initDLSEC1(s[1881]);
initDLINS1(s[1882]);
initDLEST1(s[1883]);
initDLOFT1(s[1884]);
initDLWHNY1(s[1885]);
initDLWHNM1(s[1886]);
initDLWEST1(s[1887]);
initDLINT1(s[1888]);
initDLBEH1(s[1889]);
initDLOWE1(s[1890]);
initDLTYPE2(s[1891]);
initDSLPAY2(s[1892]);
initDSLAMT2(s[1893]);
initDSLEST2(s[1894]);
initDLWHY8(s[1895]);
initDLWHY9(s[1896]);
initDLWHY10(s[1897]);
initDLWHY11(s[1898]);
initDLWHY12(s[1899]);
initDLWHY13(s[1900]);
initDLWHY14(s[1901]);
initDLSEC2(s[1902]);
initDLINS2(s[1903]);
initDLEST2(s[1904]);
initDLOFT2(s[1905]);
initDLWHNY2(s[1906]);
initDLWHNM2(s[1907]);
initDLWEST2(s[1908]);
initDLINT2(s[1909]);
initDLBEH2(s[1910]);
initDLOWE2(s[1911]);
initDLTYPE3(s[1912]);
initDSLPAY3(s[1913]);
initDSLAMT3(s[1914]);
initDSLEST3(s[1915]);
initDLWHY15(s[1916]);
initDLWHY16(s[1917]);
initDLWHY17(s[1918]);
initDLWHY18(s[1919]);
initDLWHY19(s[1920]);
initDLWHY20(s[1921]);
initDLWHY21(s[1922]);
initDLSEC3(s[1923]);
initDLINS3(s[1924]);
initDLEST3(s[1925]);
initDLOFT3(s[1926]);
initDLWHNY3(s[1927]);
initDLWHNM3(s[1928]);
initDLWEST3(s[1929]);
initDLINT3(s[1930]);
initDLBEH3(s[1931]);
initDLOWE3(s[1932]);
initDLTYPE4(s[1933]);
initDSLPAY4(s[1934]);
initDSLAMT4(s[1935]);
initDSLEST4(s[1936]);
initDLWHY22(s[1937]);
initDLWHY23(s[1938]);
initDLWHY24(s[1939]);
initDLWHY25(s[1940]);
initDLWHY26(s[1941]);
initDLWHY27(s[1942]);
initDLWHY28(s[1943]);
initDLSEC4(s[1944]);
initDLINS4(s[1945]);
initDLEST4(s[1946]);
initDLOFT4(s[1947]);
initDLWHNY4(s[1948]);
initDLWHNM4(s[1949]);
initDLWEST4(s[1950]);
initDLINT4(s[1951]);
initDLBEH4(s[1952]);
initDLOWE4(s[1953]);
initDLTYPE5(s[1954]);
initDSLPAY5(s[1955]);
initDSLAMT5(s[1956]);
initDSLEST5(s[1957]);
initDLWHY29(s[1958]);
initDLWHY30(s[1959]);
initDLWHY31(s[1960]);
initDLWHY32(s[1961]);
initDLWHY33(s[1962]);
initDLWHY34(s[1963]);
initDLWHY35(s[1964]);
initDLSEC5(s[1965]);
initDLINS5(s[1966]);
initDLEST5(s[1967]);
initDLOFT5(s[1968]);
initDLWHNY5(s[1969]);
initDLWHNM5(s[1970]);
initDLWEST5(s[1971]);
initDLINT5(s[1972]);
initDLBEH5(s[1973]);
initDLOWE5(s[1974]);
initNWLN(s[1975]);
initNWLNNO(s[1976]);
initDTLTYPE1(s[1977]);
initDTLOWE1(s[1978]);
initDTLOWEB1(s[1979]);
initDTLTYPE2(s[1980]);
initDTLOWE2(s[1981]);
initDTLOWEB2(s[1982]);
initDTLTYPE3(s[1983]);
initDTLOWE3(s[1984]);
initDTLOWEB3(s[1985]);
initDHBFIX(s[1986]);
initDHBANY01(s[1987]);
initDHBANY02(s[1988]);
initDHBANY03(s[1989]);
initDHBANY04(s[1990]);
initDHBANY05(s[1991]);
initDHBANY06(s[1992]);
initDHBANY07(s[1993]);
initDHBANY08(s[1994]);
initDHBANY09(s[1995]);
initDHBANY10(s[1996]);
initDHBANY11(s[1997]);
initDHBAMT01(s[1998]);
initDHBAMT02(s[1999]);
initDHBAMT03(s[2000]);
initDHBAMT04(s[2001]);
initDHBAMT05(s[2002]);
initDHBAMT06(s[2003]);
initDHBAMT07(s[2004]);
initDHBAMT08(s[2005]);
initDHBAMT09(s[2006]);
initDHBAMT10(s[2007]);
initDHBAMT11(s[2008]);
initDHBEST01(s[2009]);
initDHBEST02(s[2010]);
initDHBEST03(s[2011]);
initDHBEST04(s[2012]);
initDHBEST05(s[2013]);
initDHBEST06(s[2014]);
initDHBEST07(s[2015]);
initDHBEST08(s[2016]);
initDHBEST09(s[2017]);
initDHBEST10(s[2018]);
initDHBEST11(s[2019]);
initDBURD(s[2020]);
initDBURDA(s[2021]);
initDBURDW1(s[2022]);
initDBURDW2(s[2023]);
initDBURD___W3(s[2024]);
initDBURDW4(s[2025]);
initDBURDW5(s[2026]);
initDBURDW6(s[2027]);
initDBURDW7(s[2028]);
initDADVMTH(s[2029]);
initDADVACT1(s[2030]);
initDADVACT2(s[2031]);
initDADVACT3(s[2032]);
initDBURDH(s[2033]);
initINSPOL(s[2034]);
initCOMMIT1(s[2035]);
initCOMMIT2(s[2036]);
initCOMMIT3(s[2037]);
initCOMMIT4(s[2038]);
initCOMMIT5(s[2039]);
initXINSOL(s[2040]);
initXINTYP(s[2041]);
initXINCSE(s[2042]);
initXBCONSC(s[2043]);
initXBCON(s[2044]);
initXBCONREM(s[2045]);
initXBOK(s[2046]);
initXBCRT(s[2047]);
initXDCONSC(s[2048]);
initXDCON(s[2049]);
initXDCONREM(s[2050]);
initXDOK(s[2051]);
initXDREF(s[2052]);
initXICONSC(s[2053]);
initXICON(s[2054]);
initXICONREM(s[2055]);
initRENTPAY(s[2056]);
initOTHSRC1(s[2057]);
initOTHSRC2(s[2058]);
initOTHSRC3(s[2059]);
initOIGRR(s[2060]);
initOIGGT(s[2061]);
initREGLRPY1(s[2062]);
initREGLRPY2(s[2063]);
initREGLRPY3(s[2064]);
initREGLRPY4(s[2065]);
initREGLRPY5(s[2066]);
initOTRUST01(s[2067]);
initOTRUST02(s[2068]);
initOTRUST03(s[2069]);
initOTRUST04(s[2070]);
initOTRUST05(s[2071]);
initOTRUST06(s[2072]);
initOTRUST07(s[2073]);
initOTRUST08(s[2074]);
initOTRUST09(s[2075]);
initOTRUST10(s[2076]);
initOTRUST11(s[2077]);
initOTRUST12(s[2078]);
initOTRUST13(s[2079]);
initOTRUST14(s[2080]);
initOTRUST15(s[2081]);
initOSITUAT(s[2082]);
initOSITCH(s[2083]);
initOIMPRS1(s[2084]);
initOIMPRS2(s[2085]);
initOIMPRS3(s[2086]);
initOIMPRS4(s[2087]);
initOIMPRS5(s[2088]);
initOIMPRS6(s[2089]);
initOIMPRS7(s[2090]);
initOIMPRS8(s[2091]);
initOIMPRS9(s[2092]);
initOWRSRS01(s[2093]);
initOWRSRS02(s[2094]);
initOWRSRS03(s[2095]);
initOWRSRS04(s[2096]);
initOWRSRS05(s[2097]);
initOWRSRS06(s[2098]);
initOWRSRS07(s[2099]);
initOWRSRS08(s[2100]);
initOWRSRS09(s[2101]);
initOWRSRS10(s[2102]);
initORETINC(s[2103]);
initSELECTAD(s[2104]);
initCACTF(s[2105]);
initCACTV(s[2106]);
initCACTVB(s[2107]);
initCATYPE(s[2108]);
initCAOPEN(s[2109]);
initCACONTR1(s[2110]);
initCACONTR2(s[2111]);
initCACONTR3(s[2112]);
initCACONTR4(s[2113]);
initCACONTR5(s[2114]);
initCACONTR6(s[2115]);
initCAEXTRA(s[2116]);
initCASAV(s[2117]);
initCASVV(s[2118]);
initCASVB(s[2119]);
initCACONTRAM1(s[2120]);
initCACONTRAMB1(s[2121]);
initCACONTRAM2(s[2122]);
initCACONTRAMB2(s[2123]);
initCACONTRAM3(s[2124]);
initCACONTRAMB3(s[2125]);
initCACONTRAM4(s[2126]);
initCACONTRAMB4(s[2127]);
initCACONTRAM5(s[2128]);
initCACONTRAMB5(s[2129]);
initCACONTRAM6(s[2130]);
initCACONTRAMB6(s[2131]);
initCAOLDER(s[2132]);
initCAOTHER1(s[2133]);
initCAOTHER2(s[2134]);
initCAOTHER3(s[2135]);
initCAOTHER4(s[2136]);
initCAOTHER5(s[2137]);
initNUMCHSAV(s[2138]);
initOCSVR1(s[2139]);
initOCSVR2(s[2140]);
initOCSVR3(s[2141]);
initOCSVR4(s[2142]);
initOCSVR5(s[2143]);
initOCSVR6(s[2144]);
initOCSVR7(s[2145]);
initOCSVR8(s[2146]);
initIHRECNT(s[2147]);
initIHRCNUM(s[2148]);
initIWAT1(s[2149]);
initIWAT2(s[2150]);
initIWAT3(s[2151]);
initIWAT4(s[2152]);
initIWAT5(s[2153]);
initIWAT6(s[2154]);
initIWHO(s[2155]);
initIVAL1(s[2156]);
initIVALB1(s[2157]);
initIHSE1(s[2158]);
initIHSE2(s[2159]);
initIHSE3(s[2160]);
initIHSE4(s[2161]);
initIHSE5(s[2162]);
initIHSE6(s[2163]);
initIGDS1(s[2164]);
initIGDS2(s[2165]);
initIGDS3(s[2166]);
initIGDS4(s[2167]);
initIGDS5(s[2168]);
initIGDS6(s[2169]);
initIGDS7(s[2170]);
initIWAT7(s[2171]);
initIWAT8(s[2172]);
initIWAT9(s[2173]);
initIWAT10(s[2174]);
initIWAT11(s[2175]);
initIWAT12(s[2176]);
initIWHO2(s[2177]);
initIVALB2(s[2178]);
initIHSE7(s[2179]);
initIHSE8(s[2180]);
initIHSE9(s[2181]);
initIHSE10(s[2182]);
initIHSE11(s[2183]);
initIHSE12(s[2184]);
initIGDS8(s[2185]);
initIGDS9(s[2186]);
initIGDS10(s[2187]);
initIGDS11(s[2188]);
initIGDS12(s[2189]);
initIGDS13(s[2190]);
initIGDS14(s[2191]);
initIWAT13(s[2192]);
initIWAT14(s[2193]);
initIWAT15(s[2194]);
initIWAT16(s[2195]);
initIWAT17(s[2196]);
initIWAT18(s[2197]);
initIWHO3(s[2198]);
initIVALB3(s[2199]);
initIHSE13(s[2200]);
initIHSE14(s[2201]);
initIHSE15(s[2202]);
initIHSE16(s[2203]);
initIHSE17(s[2204]);
initIHSE18(s[2205]);
initIGDS15(s[2206]);
initIGDS16(s[2207]);
initIGDS17(s[2208]);
initIGDS18(s[2209]);
initIGDS19(s[2210]);
initIGDS20(s[2211]);
initIGDS21(s[2212]);
initILGIFT(s[2213]);
initIGFVALB(s[2214]);
initNEWGIFT(s[2215]);
initILOAN(s[2216]);
initILNUSE01(s[2217]);
initILNUSE02(s[2218]);
initILNUSE03(s[2219]);
initILNUSE04(s[2220]);
initILNUSE05(s[2221]);
initILNUSE06(s[2222]);
initILNUSE07(s[2223]);
initILNUSE08(s[2224]);
initILNUSE09(s[2225]);
initILNUSE10(s[2226]);
initILNVAL(s[2227]);
initILNVALB(s[2228]);
initILNPBK(s[2229]);
initILNPBAM(s[2230]);
initILUMP(s[2231]);
initILUMTY1(s[2232]);
initILUMTY2(s[2233]);
initILUMTY3(s[2234]);
initILUMTY4(s[2235]);
initILUMTY5(s[2236]);
initILUMTY6(s[2237]);
initILUMTY7(s[2238]);
initILIFB(s[2239]);
initILUPP(s[2240]);
initILUPB(s[2241]);
initILACB(s[2242]);
initILINB(s[2243]);
initILRDB(s[2244]);
initILWNB(s[2245]);
initILOTB(s[2246]);
initTINTRO(s[2247]);
initTSETT(s[2248]);
initTSNUM1(s[2249]);
initTSNEW(s[2250]);
initTSNUM2(s[2251]);
initTJNT1(s[2252]);
initTJNT2(s[2253]);
initTACC1(s[2254]);
initTBEN1(s[2255]);
initTBEN2(s[2256]);
initTBEN3(s[2257]);
initTBEN4(s[2258]);
initTBEN5(s[2259]);
initTBEN6(s[2260]);
initTBEN7(s[2261]);
initTBEN8(s[2262]);
initTVAL1(s[2263]);
initTVALB1(s[2264]);
initTDUP1(s[2265]);
initTDUPA1(s[2266]);
initTADDVL(s[2267]);
initTADDVB1(s[2268]);
initTJNT3(s[2269]);
initTJNT4(s[2270]);
initTACC2(s[2271]);
initTBEN9(s[2272]);
initTBEN10(s[2273]);
initTBEN11(s[2274]);
initTBEN12(s[2275]);
initTBEN13(s[2276]);
initTBEN14(s[2277]);
initTBEN15(s[2278]);
initTBEN16(s[2279]);
initTVAL2(s[2280]);
initTVALB2(s[2281]);
initTDUP2(s[2282]);
initTDUPA2(s[2283]);
initTADDVL2(s[2284]);
initTADDVB2(s[2285]);
initTSNO3(s[2286]);
initTJNT5(s[2287]);
initTJNT6(s[2288]);
initTACC3(s[2289]);
initTBEN17(s[2290]);
initTBEN18(s[2291]);
initTBEN19(s[2292]);
initTBEN20(s[2293]);
initTBEN21(s[2294]);
initTBEN22(s[2295]);
initTBEN23(s[2296]);
initTBEN24(s[2297]);
initTVAL3(s[2298]);
initTVALB3(s[2299]);
initTDUP3(s[2300]);
initTDUPA3(s[2301]);
initTADDVL3(s[2302]);
initTADDVB3(s[2303]);
initTBENEF(s[2304]);
initTBENNUM(s[2305]);
initTWHO1(s[2306]);
initTWHO2(s[2307]);
initTWHO3(s[2308]);
initTWHO4(s[2309]);
initTWHO5(s[2310]);
initTWHO6(s[2311]);
initTBINC1(s[2312]);
initTBREC1(s[2313]);
initTBRECB1(s[2314]);
initTBCAP1(s[2315]);
initTBCKNO1(s[2316]);
initTBCAPY1(s[2317]);
initTBVALB1(s[2318]);
initTWHO7(s[2319]);
initTWHO8(s[2320]);
initTWHO9(s[2321]);
initTWHO10(s[2322]);
initTWHO11(s[2323]);
initTWHO12(s[2324]);
initTBINC2(s[2325]);
initTBREC2(s[2326]);
initTBRECB2(s[2327]);
initTBCAP2(s[2328]);
initTBCKNO2(s[2329]);
initTBCAPY2(s[2330]);
initTBVALB2(s[2331]);
initTWHO13(s[2332]);
initTWHO14(s[2333]);
initTWHO15(s[2334]);
initTWHO16(s[2335]);
initTWHO17(s[2336]);
initTWHO18(s[2337]);
initTBINC3(s[2338]);
initTBREC3(s[2339]);
initTBRECB3(s[2340]);
initTBCAP3(s[2341]);
initTBCKNO3(s[2342]);
initTBCAPY3(s[2343]);
initTBVALB3(s[2344]);
initOTHASCH(s[2345]);
initOTHASVL(s[2346]);
initOTHASVB(s[2347]);
initCOMMI(s[2348]);
initORUNOUT(s[2349]);
initORUNDO01(s[2350]);
initORUNDO02(s[2351]);
initORUNDO03(s[2352]);
initORUNDO04(s[2353]);
initORUNDO05(s[2354]);
initORUNDO06(s[2355]);
initORUNDO07(s[2356]);
initORUNDO08(s[2357]);
initORUNDO09(s[2358]);
initORUNDO10(s[2359]);
initORUNDO11(s[2360]);
initIFBANKACC(s[2361]);
initKNOWBALANCE(s[2362]);
initOFTCHECKED(s[2363]);
initKNOHOWMUCH(s[2364]);
initINCDROP(s[2365]);
initFNDCASH1(s[2366]);
initFNDCASH2(s[2367]);
initFNDCASH3(s[2368]);
initFNDCASH4(s[2369]);
initFNDCASH5(s[2370]);
initORGNSED(s[2371]);
initRNYDAY(s[2372]);
initLVTDAY(s[2373]);
initSPENDM(s[2374]);
initGSTDNW(s[2375]);
initPRODTS(s[2376]);
initSOURC2P(s[2377]);
initCHOICP(s[2378]);
initEYE1(s[2379]);
initEYE2(s[2380]);
initEYE3(s[2381]);
initEYE4(s[2382]);
initEYE5(s[2383]);
initEYE6(s[2384]);
initEYE7(s[2385]);
initEYE8(s[2386]);
initINDFREQ(s[2387]);
initORISKA(s[2388]);
initORISKC(s[2389]);
initOSAFESAV(s[2390]);
initORISKS(s[2391]);
initQHEALTH1(s[2392]);
initCUTDOWN(s[2393]);
initLSILL(s[2394]);
initILLLIM(s[2395]);
initDISTYPE1(s[2396]);
initDISTYPE2(s[2397]);
initDISTYPE3(s[2398]);
initDISTYPE4(s[2399]);
initDISTYPE5(s[2400]);
initDISTYPE6(s[2401]);
initDISTYPE7(s[2402]);
initDISTYPE8(s[2403]);
initDISTYPE9(s[2404]);
initDISEVER(s[2405]);
initFBSITU(s[2406]);
initFBSIBS(s[2407]);
initFBTEN(s[2408]);
initFBFAED(s[2409]);
initFBMOED(s[2410]);
initFTHECST(s[2411]);
initMTHECST(s[2412]);
initDWELLTYP(s[2413]);
initFLOORN(s[2414]);
initIOUT1(s[2415]);
initPROXPERS(s[2416]);
initNOUNITS(s[2417]);
initDVBENU1(s[2418]);
initDVNUMBU(s[2419]);
initES2000(s[2420]);
initNSSEC(s[2421]);
initNSSECB(s[2422]);
initNSSEC5(s[2423]);
initNSSEC3(s[2424]);
initNSSEC8(s[2425]);
initHOUT(s[2426]);
initHPROX(s[2427]);
initPENIND1(s[2428]);
initPENIND2(s[2429]);
initPENIND3(s[2430]);
initPENIND4(s[2431]);
initPENIND5(s[2432]);
initPENIND6(s[2433]);
initUVALS(s[2434]);
initUVALBS(s[2435]);
initUDEBTS(s[2436]);
initUDEBTBS(s[2437]);
initUGDVBS(s[2438]);
initUVALL(s[2439]);
initUVALBL(s[2440]);
initUDEBTL(s[2441]);
initUDEBTBL(s[2442]);
initUGDVBL(s[2443]);
initUVALO(s[2444]);
initUVALBO(s[2445]);
initUDEBTO(s[2446]);
initUDEBTBO(s[2447]);
initUVALLU(s[2448]);
initUVALBLU(s[2449]);
initUDEBTLU(s[2450]);
initUDEBTBLU(s[2451]);
initUVALOS(s[2452]);
initUVALBOS(s[2453]);
initUDEBTOS(s[2454]);
initUDEBTBOS(s[2455]);
initUGDVBOS(s[2456]);
initUVALOR(s[2457]);
initUVALBOR(s[2458]);
initUDEBTOR(s[2459]);
initUDEBTBOR(s[2460]);
initRELIGE(s[2461]);
initRELIGW(s[2462]);
initRELIGS(s[2463]);
initCTPAY(s[2464]);
initCTPAYW(s[2465]);
initCTPAYS(s[2466]);
initEVERWK(s[2467]);
initPDCVAL3(s[2468]);
initDVPUBLPRIV(s[2469]);
initTYPE(s[2470]);
initP_FLAG1(s[2471]);
initP_FLAG3(s[2472]);
initP_FLAG4(s[2473]);
initH_FLAG1(s[2474]);
initDVSAME(s[2475]);
initPBLMVB1(s[2476]);
initALLRET(s[2477]);
initNUMCOUPLES(s[2478]);
initCOUPLENUM(s[2479]);
initHRPEDLEVEL(s[2480]);
initSEX(s[2481]);
initTRUST(s[2482]);
initAGEASAF1(s[2483]);
initSPASAF_IORIG(s[2484]);
initDVHSIZE(s[2485]);
initDVHASISA(s[2486]);
initDVHASBOND(s[2487]);
initDVHASUTRUST(s[2488]);
initDVHASEMPSH(s[2489]);
initDVHASOTHSH(s[2490]);
initDVHASNSP(s[2491]);
initDVHASGILT(s[2492]);
initDVHASLINS(s[2493]);
initDVHASOINV(s[2494]);
initDVHASNOFA(s[2495]);
initDCANY_I(s[2496]);
initDCANY_IFLAG(s[2497]);
initDCANU_I(s[2498]);
initDCANU_IFLAG(s[2499]);
initDCNUM1_I(s[2500]);
initDCNUM1_IFLAG(s[2501]);
initDCNUM2_I(s[2502]);
initDCNUM2_IFLAG(s[2503]);
initDCCOS1_I(s[2504]);
initDCCOS1_IFLAG(s[2505]);
initDCCSP1_I(s[2506]);
initDCCSP1_IFLAG(s[2507]);
initDCNAM1_I(s[2508]);
initDCNAM1_IFLAG(s[2509]);
initDCCOS2_I(s[2510]);
initDCCOS2_IFLAG(s[2511]);
initDCCSP2_I(s[2512]);
initDCCSP2_IFLAG(s[2513]);
initDCNAM2_I(s[2514]);
initDCNAM2_IFLAG(s[2515]);
initDCCOS3_I(s[2516]);
initDCCOS3_IFLAG(s[2517]);
initDCCSP3_I(s[2518]);
initDCCSP3_IFLAG(s[2519]);
initDCNAM3_I(s[2520]);
initDCNAM3_IFLAG(s[2521]);
initDCCOS4_I(s[2522]);
initDCCOS4_IFLAG(s[2523]);
initDCCSP4_I(s[2524]);
initDCCSP4_IFLAG(s[2525]);
initDCNAM4_I(s[2526]);
initDCNAM4_IFLAG(s[2527]);
initDCCOS5_I(s[2528]);
initDCCOS5_IFLAG(s[2529]);
initDCCSP5_I(s[2530]);
initDCCSP5_IFLAG(s[2531]);
initDCNAM5_I(s[2532]);
initDCNAM5_IFLAG(s[2533]);
initDCAMP1_I(s[2534]);
initDCAMP1_IFLAG(s[2535]);
initDCAMP2_I(s[2536]);
initDCAMP2_IFLAG(s[2537]);
initDCAMP3_I(s[2538]);
initDCAMP3_IFLAG(s[2539]);
initDCAMP4_I(s[2540]);
initDCAMP4_IFLAG(s[2541]);
initDCAMP5_I(s[2542]);
initDCAMP5_IFLAG(s[2543]);
initDCRSP1_I(s[2544]);
initDCRSP1_IFLAG(s[2545]);
initDCRSP2_I(s[2546]);
initDCRSP2_IFLAG(s[2547]);
initDCRSP3_I(s[2548]);
initDCRSP3_IFLAG(s[2549]);
initDCRSP4_I(s[2550]);
initDCRSP4_IFLAG(s[2551]);
initDCRSP5_I(s[2552]);
initDCRSP5_IFLAG(s[2553]);
initDCREC1_I(s[2554]);
initDCREC1_IFLAG(s[2555]);
initDCREC2_I(s[2556]);
initDCREC2_IFLAG(s[2557]);
initDCREC3_I(s[2558]);
initDCREC3_IFLAG(s[2559]);
initDCREC4_I(s[2560]);
initDCREC4_IFLAG(s[2561]);
initDCREC5_I(s[2562]);
initDCREC5_IFLAG(s[2563]);
initDSANY1_I(s[2564]);
initDSANY1_IFLAG(s[2565]);
initDSANU1_I(s[2566]);
initDSANU1_IFLAG(s[2567]);
initDSANY2_I(s[2568]);
initDSANY2_IFLAG(s[2569]);
initDSANU2_I(s[2570]);
initDSANU2_IFLAG(s[2571]);
initDSNUM_I(s[2572]);
initDSNUM_IFLAG(s[2573]);
initDSNUM2_I(s[2574]);
initDSNUM2_IFLAG(s[2575]);
initDSCOS1_I(s[2576]);
initDSCOS1_IFLAG(s[2577]);
initDSCSP1_I(s[2578]);
initDSCSP1_IFLAG(s[2579]);
initDSNAM1_I(s[2580]);
initDSNAM1_IFLAG(s[2581]);
initDSCOS2_I(s[2582]);
initDSCOS2_IFLAG(s[2583]);
initDSCSP2_I(s[2584]);
initDSCSP2_IFLAG(s[2585]);
initDSNAM2_I(s[2586]);
initDSNAM2_IFLAG(s[2587]);
initDSCOS3_I(s[2588]);
initDSCOS3_IFLAG(s[2589]);
initDSCSP3_I(s[2590]);
initDSCSP3_IFLAG(s[2591]);
initDSNAM3_I(s[2592]);
initDSNAM3_IFLAG(s[2593]);
initDSCOS4_I(s[2594]);
initDSCOS4_IFLAG(s[2595]);
initDSCSP4_I(s[2596]);
initDSCSP4_IFLAG(s[2597]);
initDSNAM4_I(s[2598]);
initDSNAM4_IFLAG(s[2599]);
initDSCOS5_I(s[2600]);
initDSCOS5_IFLAG(s[2601]);
initDSCSP5_I(s[2602]);
initDSCSP5_IFLAG(s[2603]);
initDSNAM5_I(s[2604]);
initDSNAM5_IFLAG(s[2605]);
initDSRSP1_I(s[2606]);
initDSRSP1_IFLAG(s[2607]);
initDSRSP2_I(s[2608]);
initDSRSP2_IFLAG(s[2609]);
initDSRSP3_I(s[2610]);
initDSRSP3_IFLAG(s[2611]);
initDSRSP4_I(s[2612]);
initDSRSP4_IFLAG(s[2613]);
initDSRSP5_I(s[2614]);
initDSRSP5_IFLAG(s[2615]);
initDSAMC1_I(s[2616]);
initDSAMC1_IFLAG(s[2617]);
initDSAMP1_I(s[2618]);
initDSAMP1_IFLAG(s[2619]);
initDSAMD1_I(s[2620]);
initDSAMD1_IFLAG(s[2621]);
initDSAMC2_I(s[2622]);
initDSAMC2_IFLAG(s[2623]);
initDSAMP2_I(s[2624]);
initDSAMP2_IFLAG(s[2625]);
initDSAMD2_I(s[2626]);
initDSAMD2_IFLAG(s[2627]);
initDSAMC3_I(s[2628]);
initDSAMC3_IFLAG(s[2629]);
initDSAMP3_I(s[2630]);
initDSAMP3_IFLAG(s[2631]);
initDSAMD3_I(s[2632]);
initDSAMD3_IFLAG(s[2633]);
initDSAMC4_I(s[2634]);
initDSAMC4_IFLAG(s[2635]);
initDSAMP4_I(s[2636]);
initDSAMP4_IFLAG(s[2637]);
initDSAMD4_I(s[2638]);
initDSAMD4_IFLAG(s[2639]);
initDSAMC5_I(s[2640]);
initDSAMC5_IFLAG(s[2641]);
initDSAMP5_I(s[2642]);
initDSAMP5_IFLAG(s[2643]);
initDSAMD5_I(s[2644]);
initDSAMD5_IFLAG(s[2645]);
initCCAC1(s[2646]);
initDCAMOS1(s[2647]);
initCCAC2(s[2648]);
initDCAMOS2(s[2649]);
initCCAC3(s[2650]);
initDCAMOS3(s[2651]);
initCCAC4(s[2652]);
initDCAMOS4(s[2653]);
initCCAC5(s[2654]);
initDCAMOS5(s[2655]);
initSCAC1(s[2656]);
initDSAMOS1(s[2657]);
initSCAC2(s[2658]);
initDSAMOS2(s[2659]);
initSCAC3(s[2660]);
initDSAMOS3(s[2661]);
initSCAC4(s[2662]);
initDSAMOS4(s[2663]);
initSCAC5(s[2664]);
initDSAMOS5(s[2665]);
initDVHASSC(s[2666]);
initDVHASCC(s[2667]);
initDVMRDF(s[2668]);
initDVDBLUMP1(s[2669]);
initDVDBLUMP2(s[2670]);
initDVDBLUMP3(s[2671]);
initDVDBLUMP4(s[2672]);
initDVDBLUMP5(s[2673]);
initDVDBLUMP6(s[2674]);
initDVDBINC1(s[2675]);
initDVDBINC2(s[2676]);
initDVDBINC3(s[2677]);
initDVDBINC4(s[2678]);
initDVDBINC5(s[2679]);
initDVDBINC6(s[2680]);
initDVHASPFD(s[2681]);
initNWHPVAL1(s[2682]);
initNWHPVAL2(s[2683]);
initNWHPVAL3(s[2684]);
initDVNWHP_SUM(s[2685]);
initDVHASNHP(s[2686]);
initEMPSTAT2(s[2687]);
initDVGRSBONAMT(s[2688]);
initDVSEPANNUAL09(s[2689]);
initDVSEPANNUAL10(s[2690]);
initDVSEPANNUAL11(s[2691]);
initDVSEPANNUAL12(s[2692]);
initDVSEPANNUAL13(s[2693]);
initDVSEPANNUAL14(s[2694]);
initDVSEPANNUAL15(s[2695]);
initDVSEPANNUAL16(s[2696]);
initDVSEPANNUAL17(s[2697]);
initDVSEPANNUAL18(s[2698]);
initDVSEPANNUAL19(s[2699]);
initDVSEPANNUAL20(s[2700]);
initDVOIGGTANNUAL(s[2701]);
initILUMTY2_I(s[2702]);
initILUMTY3_I(s[2703]);
initILUMTY4_I(s[2704]);
initILUMTY5_I(s[2705]);
initILUMTY6_I(s[2706]);
initILUMTY7_I(s[2707]);
initILUMTY2_IFLAG(s[2708]);
initILUMTY3_IFLAG(s[2709]);
initILUMTY4_IFLAG(s[2710]);
initILUMTY5_IFLAG(s[2711]);
initILUMTY6_IFLAG(s[2712]);
initILUMTY7_IFLAG(s[2713]);
initAGMSAFT1(s[2714]);
initAGMSAF2T(s[2715]);
initMNTHSCAPE(s[2716]);
initACCFRAC(s[2717]);
initRETFRAC(s[2718]);
initDVDBINCALL(s[2719]);
initDVVALPBLUM(s[2720]);
initDVDBRWEALTHVAL(s[2721]);
initDVHASDBR_ORIG(s[2722]);
initWRKING_I(s[2723]);
initWRKING_IFLAG(s[2724]);
initSCHEMEET_I(s[2725]);
initSCHEMEET_IFLAG(s[2726]);
initJBAWAY_I(s[2727]);
initJBAWAY_IFLAG(s[2728]);
initOWNBUS_I(s[2729]);
initOWNBUS_IFLAG(s[2730]);
initRELBUS_I(s[2731]);
initRELBUS_IFLAG(s[2732]);
initLOOKED_I(s[2733]);
initLOOKED_IFLAG(s[2734]);
initSTARTJ_I(s[2735]);
initSTARTJ_IFLAG(s[2736]);
initDVILO3A_I(s[2737]);
initDVILO3A_IFLAG(s[2738]);
initEVERWK_I(s[2739]);
initEVERWK_IFLAG(s[2740]);
initSTAT_I(s[2741]);
initSTAT_IFLAG(s[2742]);
initBTYPE1_I(s[2743]);
initBTYPE1_IFLAG(s[2744]);
initBDIRNI1_I(s[2745]);
initBDIRNI1_IFLAG(s[2746]);
initDVNETBAND_I(s[2747]);
initDVNETBAND_IFLAG(s[2748]);
initDVGRSBAND_I(s[2749]);
initDVGRSBAND_IFLAG(s[2750]);
initDVNETPAY_I(s[2751]);
initDVNETPAY_IFLAG(s[2752]);
initDVGRSPAY_I(s[2753]);
initDVGRSPAY_IFLAG(s[2754]);
initPAYBON_I(s[2755]);
initPAYBON_IFLAG(s[2756]);
initBONTAX_I(s[2757]);
initBONTAX_IFLAG(s[2758]);
initDVGRSBONAMT_IFLAG(s[2759]);
initDVNETBONAMT_IFLAG(s[2760]);
initDVSENETPAYBAND_I(s[2761]);
initDVSENETPAYBAND_IFLAG(s[2762]);
initDVSEGRSPAYBAND_I(s[2763]);
initDVSEGRSPAYBAND_IFLAG(s[2764]);
initDVSENETPAY_IFLAG(s[2765]);
initDVSEGRSPAY_IFLAG(s[2766]);
initSEGRSBAND(s[2767]);
initSENETBAND(s[2768]);
initDVSAME_I(s[2769]);
initDVSAME_IFLAG(s[2770]);
initPANYO_I(s[2771]);
initPANYO_IFLAG(s[2772]);
initPBFRAC1_I(s[2773]);
initPBFRAC1_IFLAG(s[2774]);
initPBFRAC2_I(s[2775]);
initPBFRAC2_IFLAG(s[2776]);
initPBLMVB1_I(s[2777]);
initPBLMVB1_IFLAG(s[2778]);
initPBLMVB2_I(s[2779]);
initPBLMVB2_IFLAG(s[2780]);
initPBLUMV1_I(s[2781]);
initPBLUMV1_IFLAG(s[2782]);
initPBLUMV2_I(s[2783]);
initPBLUMV2_IFLAG(s[2784]);
initPBQUAL1_I(s[2785]);
initPBQUAL1_IFLAG(s[2786]);
initPBQUAL2_I(s[2787]);
initPBQUAL2_IFLAG(s[2788]);
initPCONT_I(s[2789]);
initPCONT_IFLAG(s[2790]);
initPEMELG_I(s[2791]);
initPEMELG_IFLAG(s[2792]);
initPEMMEM_I(s[2793]);
initPEMMEM_IFLAG(s[2794]);
initPEMOFF_I(s[2795]);
initPEMOFF_IFLAG(s[2796]);
initPESAME_I(s[2797]);
initPESAME_IFLAG(s[2798]);
initPNUMOS_I(s[2799]);
initPNUMOS_IFLAG(s[2800]);
initPOCNMSC_I(s[2801]);
initPOCNMSC_IFLAG(s[2802]);
initPOCTYP1_I(s[2803]);
initPOCTYP1_IFLAG(s[2804]);
initPOCTYP2_I(s[2805]);
initPOCTYP2_IFLAG(s[2806]);
initPOLMV1_I(s[2807]);
initPOLMV1_IFLAG(s[2808]);
initPOLMV2_I(s[2809]);
initPOLMV2_IFLAG(s[2810]);
initPOLMVB1_I(s[2811]);
initPOLMVB1_IFLAG(s[2812]);
initPOLMVB2_I(s[2813]);
initPOLMVB2_IFLAG(s[2814]);
initPOLUM1_I(s[2815]);
initPOLUM1_IFLAG(s[2816]);
initPOLUM2_I(s[2817]);
initPOLUM2_IFLAG(s[2818]);
initPSCHM_F_I(s[2819]);
initPSCHM_F_IFLAG(s[2820]);
initPSCHM_S_I(s[2821]);
initPSCHM_S_IFLAG(s[2822]);
initPSCHM_T_I(s[2823]);
initPSCHM_T_IFLAG(s[2824]);
initPDCVB1_I(s[2825]);
initPDCVB1_IFLAG(s[2826]);
initPDCVB2_I(s[2827]);
initPDCVB2_IFLAG(s[2828]);
initPDCVAL1_I(s[2829]);
initPDCVAL1_IFLAG(s[2830]);
initPDCVAL2_I(s[2831]);
initPDCVAL2_IFLAG(s[2832]);
initPOADD1_I(s[2833]);
initPOADD1_IFLAG(s[2834]);
initPOADD2_I(s[2835]);
initPOADD2_IFLAG(s[2836]);
initPOADD3_I(s[2837]);
initPOADD3_IFLAG(s[2838]);
initPOADD4_I(s[2839]);
initPOADD4_IFLAG(s[2840]);
initPOADD5_I(s[2841]);
initPOADD5_IFLAG(s[2842]);
initPOADD6_I(s[2843]);
initPOADD6_IFLAG(s[2844]);
initPAVCVB1_I(s[2845]);
initPAVCVB1_IFLAG(s[2846]);
initPAVCVB2_I(s[2847]);
initPAVCVB2_IFLAG(s[2848]);
initPAVCUV1_I(s[2849]);
initPAVCUV1_IFLAG(s[2850]);
initPAVCUV2_I(s[2851]);
initPAVCUV2_IFLAG(s[2852]);
initPPRNMSC_I(s[2853]);
initPPRNMSC_IFLAG(s[2854]);
initPPVALB1_I(s[2855]);
initPPVALB1_IFLAG(s[2856]);
initPPVALB2_I(s[2857]);
initPPVALB2_IFLAG(s[2858]);
initPPVALB3_I(s[2859]);
initPPVALB3_IFLAG(s[2860]);
initPPVAL1_I(s[2861]);
initPPVAL1_IFLAG(s[2862]);
initPPVAL2_I(s[2863]);
initPPVAL2_IFLAG(s[2864]);
initPPVAL3_I(s[2865]);
initPPVAL3_IFLAG(s[2866]);
initPPLUM1_I(s[2867]);
initPPLUM1_IFLAG(s[2868]);
initPPLUM2_I(s[2869]);
initPPLUM2_IFLAG(s[2870]);
initPPLUM3_I(s[2871]);
initPPLUM3_IFLAG(s[2872]);
initPPLMVB1_I(s[2873]);
initPPLMVB1_IFLAG(s[2874]);
initPPLMVB2_I(s[2875]);
initPPLMVB2_IFLAG(s[2876]);
initPPLMVB3_I(s[2877]);
initPPLMVB3_IFLAG(s[2878]);
initPPLMV1_I(s[2879]);
initPPLMV1_IFLAG(s[2880]);
initPPLMV2_I(s[2881]);
initPPLMV2_IFLAG(s[2882]);
initPPLMV3_I(s[2883]);
initPPLMV3_IFLAG(s[2884]);
initDVHASAVC(s[2885]);
initDVPAVCUV(s[2886]);
initDVHASDC(s[2887]);
initDVVALDCOS(s[2888]);
initDVHASPP(s[2889]);
initDVPPVAL(s[2890]);
initPEVERC_I(s[2891]);
initPEVERC_IFLAG(s[2892]);
initPEVERNC_I(s[2893]);
initPEVERNC_IFLAG(s[2894]);
initPRETAIN_I(s[2895]);
initPRETAIN_IFLAG(s[2896]);
initPFNUM_I(s[2897]);
initPFNUM_IFLAG(s[2898]);
initPFEN_I(s[2899]);
initPFEN_IFLAG(s[2900]);
initPFENNUM_I(s[2901]);
initPFENNUM_IFLAG(s[2902]);
initPFNEW_I(s[2903]);
initPFNEW_IFLAG(s[2904]);
initPFNEWNO_I(s[2905]);
initPFNEWNO_IFLAG(s[2906]);
initPEVERC_PEVERNC__SFLAG(s[2907]);
initALLRET_I(s[2908]);
initAGMSAFT(s[2909]);
initPARTNSSEC(s[2910]);
initPARTNSSECB(s[2911]);
initPARTNSSEC3(s[2912]);
initPARTNSSEC5(s[2913]);
initPARTNSSEC8(s[2914]);
initDVRENTAMTANNUAL(s[2915]);
initOTHSRC1_I(s[2916]);
initOTHSRC1_IFLAG(s[2917]);
initOTHSRC2_I(s[2918]);
initOTHSRC2_IFLAG(s[2919]);
initOTHSRC3_I(s[2920]);
initOTHSRC3_IFLAG(s[2921]);
initOTHSRC4_I(s[2922]);
initOTHSRC4_IFLAG(s[2923]);
initOTHSRC5_I(s[2924]);
initOTHSRC5_IFLAG(s[2925]);
initDVOIGOEANNUAL_I(s[2926]);
initDVOIGOEANNUAL_IFLAG(s[2927]);
initDVOIGOSANNUAL_I(s[2928]);
initDVOIGOSANNUAL_IFLAG(s[2929]);
initDVOIGPPANNUAL_I(s[2930]);
initDVOIGPPANNUAL_IFLAG(s[2931]);
initDVOINRRANNUAL_IFLAG(s[2932]);
initDVOINGTANNUAL_IFLAG(s[2933]);
initPFTYP1_I(s[2934]);
initPFTYP1_IFLAG(s[2935]);
initPFTYP2_I(s[2936]);
initPFTYP2_IFLAG(s[2937]);
initPFTYP3_I(s[2938]);
initPFTYP3_IFLAG(s[2939]);
initPFTYP4_I(s[2940]);
initPFTYP4_IFLAG(s[2941]);
initPFTYP5_I(s[2942]);
initPFTYP5_IFLAG(s[2943]);
initPFTYP6_I(s[2944]);
initPFTYP6_IFLAG(s[2945]);
initPFOCTY1_I(s[2946]);
initPFOCTY1_IFLAG(s[2947]);
initPFOCTY2_I(s[2948]);
initPFOCTY2_IFLAG(s[2949]);
initPFOCTY3_I(s[2950]);
initPFOCTY3_IFLAG(s[2951]);
initPFOCTY4_I(s[2952]);
initPFOCTY4_IFLAG(s[2953]);
initPFOCTY5_I(s[2954]);
initPFOCTY5_IFLAG(s[2955]);
initPFOCTY6_I(s[2956]);
initPFOCTY6_IFLAG(s[2957]);
initPFLUM1_I(s[2958]);
initPFLUM1_IFLAG(s[2959]);
initPFLUM2_I(s[2960]);
initPFLUM2_IFLAG(s[2961]);
initPFLUM3_I(s[2962]);
initPFLUM3_IFLAG(s[2963]);
initPFLUM4_I(s[2964]);
initPFLUM4_IFLAG(s[2965]);
initPFLUM5_I(s[2966]);
initPFLUM5_IFLAG(s[2967]);
initPFLUM6_I(s[2968]);
initPFLUM6_IFLAG(s[2969]);
initPFLUMALL1_I(s[2970]);
initPFLUMALL1_IFLAG(s[2971]);
initPFLUMALL2_I(s[2972]);
initPFLUMALL2_IFLAG(s[2973]);
initPFLUMALL3_I(s[2974]);
initPFLUMALL3_IFLAG(s[2975]);
initPFLUMALL4_I(s[2976]);
initPFLUMALL4_IFLAG(s[2977]);
initPFLUMALL5_I(s[2978]);
initPFLUMALL5_IFLAG(s[2979]);
initPFLUMALL6_I(s[2980]);
initPFLUMALL6_IFLAG(s[2981]);
initPFCASH1_I(s[2982]);
initPFCASH1_IFLAG(s[2983]);
initPFCASH2_I(s[2984]);
initPFCASH2_IFLAG(s[2985]);
initPFCASH3_I(s[2986]);
initPFCASH3_IFLAG(s[2987]);
initPFCASH4_I(s[2988]);
initPFCASH4_IFLAG(s[2989]);
initPFCASH5_I(s[2990]);
initPFCASH5_IFLAG(s[2991]);
initPFCASH6_I(s[2992]);
initPFCASH6_IFLAG(s[2993]);
initPFREM1_I(s[2994]);
initPFREM1_IFLAG(s[2995]);
initPFREM2_I(s[2996]);
initPFREM2_IFLAG(s[2997]);
initPFREM3_I(s[2998]);
initPFREM3_IFLAG(s[2999]);
initPFREM4_I(s[3000]);
initPFREM4_IFLAG(s[3001]);
initPFREM5_I(s[3002]);
initPFREM5_IFLAG(s[3003]);
initPFREM6_I(s[3004]);
initPFREM6_IFLAG(s[3005]);
initPFREC1_I(s[3006]);
initPFREC1_IFLAG(s[3007]);
initPFREC2_I(s[3008]);
initPFREC2_IFLAG(s[3009]);
initPFREC3_I(s[3010]);
initPFREC3_IFLAG(s[3011]);
initPFREC4_I(s[3012]);
initPFREC4_IFLAG(s[3013]);
initPFREC5_I(s[3014]);
initPFREC5_IFLAG(s[3015]);
initPFREC6_I(s[3016]);
initPFREC6_IFLAG(s[3017]);
initPFDRAW1_I(s[3018]);
initPFDRAW1_IFLAG(s[3019]);
initPFDRAW2_I(s[3020]);
initPFDRAW2_IFLAG(s[3021]);
initPFDRAW3_I(s[3022]);
initPFDRAW3_IFLAG(s[3023]);
initPFDRAW4_I(s[3024]);
initPFDRAW4_IFLAG(s[3025]);
initPFDRAW5_I(s[3026]);
initPFDRAW5_IFLAG(s[3027]);
initPFDRAW6_I(s[3028]);
initPFDRAW6_IFLAG(s[3029]);
initPFLUVB1_I(s[3030]);
initPFLUVB1_IFLAG(s[3031]);
initPFLUVB2_I(s[3032]);
initPFLUVB2_IFLAG(s[3033]);
initPFLUVB3_I(s[3034]);
initPFLUVB3_IFLAG(s[3035]);
initPFLUVB4_I(s[3036]);
initPFLUVB4_IFLAG(s[3037]);
initPFLUVB5_I(s[3038]);
initPFLUVB5_IFLAG(s[3039]);
initPFLUVB6_I(s[3040]);
initPFLUVB6_IFLAG(s[3041]);
initPFLUMV1_I(s[3042]);
initPFLUMV1_IFLAG(s[3043]);
initPFLUMV2_I(s[3044]);
initPFLUMV2_IFLAG(s[3045]);
initPFLUMV3_I(s[3046]);
initPFLUMV3_IFLAG(s[3047]);
initPFLUMV4_I(s[3048]);
initPFLUMV4_IFLAG(s[3049]);
initPFLUMV5_I(s[3050]);
initPFLUMV5_IFLAG(s[3051]);
initPFLUMV6_I(s[3052]);
initPFLUMV6_IFLAG(s[3053]);
initPFINCP1_I(s[3054]);
initPFINCP1_IFLAG(s[3055]);
initPFINCP2_I(s[3056]);
initPFINCP2_IFLAG(s[3057]);
initPFINCP3_I(s[3058]);
initPFINCP3_IFLAG(s[3059]);
initPFINCP4_I(s[3060]);
initPFINCP4_IFLAG(s[3061]);
initPFINCP5_I(s[3062]);
initPFINCP5_IFLAG(s[3063]);
initPFINCP6_I(s[3064]);
initPFINCP6_IFLAG(s[3065]);
initPFINCA1_I(s[3066]);
initPFINCA1_IFLAG(s[3067]);
initPFINCA2_I(s[3068]);
initPFINCA2_IFLAG(s[3069]);
initPFINCA3_I(s[3070]);
initPFINCA3_IFLAG(s[3071]);
initPFINCA4_I(s[3072]);
initPFINCA4_IFLAG(s[3073]);
initPFINCA5_I(s[3074]);
initPFINCA5_IFLAG(s[3075]);
initPFINCA6_I(s[3076]);
initPFINCA6_IFLAG(s[3077]);
initPFLMVB1_I(s[3078]);
initPFLMVB1_IFLAG(s[3079]);
initPFLMVB2_I(s[3080]);
initPFLMVB2_IFLAG(s[3081]);
initPFLMVB3_I(s[3082]);
initPFLMVB3_IFLAG(s[3083]);
initPFLMVB4_I(s[3084]);
initPFLMVB4_IFLAG(s[3085]);
initPFLMVB5_I(s[3086]);
initPFLMVB5_IFLAG(s[3087]);
initPFLMVB6_I(s[3088]);
initPFLMVB6_IFLAG(s[3089]);
initPFLMV1_I(s[3090]);
initPFLMV1_IFLAG(s[3091]);
initPFLMV2_I(s[3092]);
initPFLMV2_IFLAG(s[3093]);
initPFLMV3_I(s[3094]);
initPFLMV3_IFLAG(s[3095]);
initPFLMV4_I(s[3096]);
initPFLMV4_IFLAG(s[3097]);
initPFLMV5_I(s[3098]);
initPFLMV5_IFLAG(s[3099]);
initPFLMV6_I(s[3100]);
initPFLMV6_IFLAG(s[3101]);
initEDLEVEL(s[3102]);
initXMARSTA_I(s[3103]);
initXMARSTA_IFLAG(s[3104]);
initMARBEF_I(s[3105]);
initMARBEF_IFLAG(s[3106]);
initPWIDFUT_I(s[3107]);
initPWIDFUT_IFLAG(s[3108]);
initPSPSE_I(s[3109]);
initPSPSE_IFLAG(s[3110]);
initPWEXPH_I(s[3111]);
initPWEXPH_IFLAG(s[3112]);
initPSPEXPH_I(s[3113]);
initPSPEXPH_IFLAG(s[3114]);
initPWEXPA_I(s[3115]);
initPWEXPA_IFLAG(s[3116]);
initPSPEXPA_I(s[3117]);
initPSPEXPA_IFLAG(s[3118]);
initFSACSH_I(s[3119]);
initFSACSH_IFLAG(s[3120]);
initFSNUMSH_I(s[3121]);
initFSNUMSH_IFLAG(s[3122]);
initFSNUMIN_I(s[3123]);
initFSNUMIN_IFLAG(s[3124]);
initFSSHVAL_I(s[3125]);
initFSSHVAL_IFLAG(s[3126]);
initFSINVAL_I(s[3127]);
initFSINVAL_IFLAG(s[3128]);
initFINVTY01_I(s[3129]);
initFINVTY01_IFLAG(s[3130]);
initFINVTY02_I(s[3131]);
initFINVTY02_IFLAG(s[3132]);
initFINVTY03_I(s[3133]);
initFINVTY03_IFLAG(s[3134]);
initFINVTY04_I(s[3135]);
initFINVTY04_IFLAG(s[3136]);
initFINVTY05_I(s[3137]);
initFINVTY05_IFLAG(s[3138]);
initFINVTY06_I(s[3139]);
initFINVTY06_IFLAG(s[3140]);
initFINVTY07_I(s[3141]);
initFINVTY07_IFLAG(s[3142]);
initFINVTY08_I(s[3143]);
initFINVTY08_IFLAG(s[3144]);
initFINVTY09_I(s[3145]);
initFINVTY09_IFLAG(s[3146]);
initFINVTY10_I(s[3147]);
initFINVTY10_IFLAG(s[3148]);
initFINVTY11_I(s[3149]);
initFINVTY11_IFLAG(s[3150]);
initFCACSH_I(s[3151]);
initFCACSH_IFLAG(s[3152]);
initFCNUMSH_I(s[3153]);
initFCNUMSH_IFLAG(s[3154]);
initFCNUMIN_I(s[3155]);
initFCNUMIN_IFLAG(s[3156]);
initFCOVDSH_I(s[3157]);
initFCOVDSH_IFLAG(s[3158]);
initFCOVNSH_I(s[3159]);
initFCOVNSH_IFLAG(s[3160]);
initDCOSHV1_I(s[3161]);
initDCOSHV1_IFLAG(s[3162]);
initDCOSHV2_I(s[3163]);
initDCOSHV2_IFLAG(s[3164]);
initDCOSHV3_I(s[3165]);
initDCOSHV3_IFLAG(s[3166]);
initDCOSHV4_I(s[3167]);
initDCOSHV4_IFLAG(s[3168]);
initDCOSHV5_I(s[3169]);
initDCOSHV5_IFLAG(s[3170]);
initFCSHVAL_I(s[3171]);
initFCSHVAL_IFLAG(s[3172]);
initFCOVDIN_I(s[3173]);
initFCOVDIN_IFLAG(s[3174]);
initFCOVNIN_I(s[3175]);
initFCOVNIN_IFLAG(s[3176]);
initDCOINV1_I(s[3177]);
initDCOINV1_IFLAG(s[3178]);
initDCOINV2_I(s[3179]);
initDCOINV2_IFLAG(s[3180]);
initDCOINV3_I(s[3181]);
initDCOINV3_IFLAG(s[3182]);
initDCOINV4_I(s[3183]);
initDCOINV4_IFLAG(s[3184]);
initDCOINV5_I(s[3185]);
initDCOINV5_IFLAG(s[3186]);
initFCINVAL_I(s[3187]);
initFCINVAL_IFLAG(s[3188]);
initPFCUVB1_I(s[3189]);
initPFCUVB1_IFLAG(s[3190]);
initPFCUVB2_I(s[3191]);
initPFCUVB2_IFLAG(s[3192]);
initPFCUVB3_I(s[3193]);
initPFCUVB3_IFLAG(s[3194]);
initPFCUVB4_I(s[3195]);
initPFCUVB4_IFLAG(s[3196]);
initPFCUVB5_I(s[3197]);
initPFCUVB5_IFLAG(s[3198]);
initPFCUVB6_I(s[3199]);
initPFCUVB6_IFLAG(s[3200]);
initPFCURV1_I(s[3201]);
initPFCURV1_IFLAG(s[3202]);
initPFCURV2_I(s[3203]);
initPFCURV2_IFLAG(s[3204]);
initPFCURV3_I(s[3205]);
initPFCURV3_IFLAG(s[3206]);
initPFCURV4_I(s[3207]);
initPFCURV4_IFLAG(s[3208]);
initPFCURV5_I(s[3209]);
initPFCURV5_IFLAG(s[3210]);
initPFCURV6_I(s[3211]);
initPFCURV6_IFLAG(s[3212]);
initPFDDVB1_I(s[3213]);
initPFDDVB1_IFLAG(s[3214]);
initPFDDVB2_I(s[3215]);
initPFDDVB2_IFLAG(s[3216]);
initPFDDVB3_I(s[3217]);
initPFDDVB3_IFLAG(s[3218]);
initPFDDVB4_I(s[3219]);
initPFDDVB4_IFLAG(s[3220]);
initPFDDVB5_I(s[3221]);
initPFDDVB5_IFLAG(s[3222]);
initPFDDVB6_I(s[3223]);
initPFDDVB6_IFLAG(s[3224]);
initPFDDV1_I(s[3225]);
initPFDDV1_IFLAG(s[3226]);
initPFDDV2_I(s[3227]);
initPFDDV2_IFLAG(s[3228]);
initPFDDV3_I(s[3229]);
initPFDDV3_IFLAG(s[3230]);
initPFDDV4_I(s[3231]);
initPFDDV4_IFLAG(s[3232]);
initPFDDV5_I(s[3233]);
initPFDDV5_IFLAG(s[3234]);
initPFDDV6_I(s[3235]);
initPFDDV6_IFLAG(s[3236]);
initSJOB2_I(s[3237]);
initSJOB2_IFLAG(s[3238]);
initSJEMP1_I(s[3239]);
initSJEMP1_IFLAG(s[3240]);
initDVNETEMPSECJOB_IFLAG(s[3241]);
initDVGRSSESECJOB_IFLAG(s[3242]);
initDVGRSEMPSECJOB_IFLAG(s[3243]);
initRENTPAY_I(s[3244]);
initRENTPAY_IFLAG(s[3245]);
initDVRENTBNDANNUAL_I(s[3246]);
initDVRENTBNDANNUAL_IFLAG(s[3247]);
initDVRENTAMTANNUAL_IFLAG(s[3248]);
initREGLRPY1_I(s[3249]);
initREGLRPY1_IFLAG(s[3250]);
initREGLRPY2_I(s[3251]);
initREGLRPY2_IFLAG(s[3252]);
initREGLRPY3_I(s[3253]);
initREGLRPY3_IFLAG(s[3254]);
initREGLRPY4_I(s[3255]);
initREGLRPY4_IFLAG(s[3256]);
initREGLRPY5_I(s[3257]);
initREGLRPY5_IFLAG(s[3258]);
initDVOINEGANNUAL_IFLAG(s[3259]);
initDVOINFRANNUAL_IFLAG(s[3260]);
initDVOINMAANNUAL_IFLAG(s[3261]);
initDVOINROANNUAL_IFLAG(s[3262]);
initDVOINOPANNUAL_IFLAG(s[3263]);
initDVHASDB(s[3264]);
initFRSTSCH(s[3265]);
initSCNDSCH(s[3266]);
initACCFRAC1(s[3267]);
initACCFRAC2(s[3268]);
initVALPBLUM1(s[3269]);
initVALPBLUM2(s[3270]);
initDVVALDBLUM(s[3271]);
initDVPENINC1(s[3272]);
initDVPENINC2(s[3273]);
initASAF1T(s[3274]);
initASAF2T(s[3275]);
initRF(s[3276]);
initRS(s[3277]);
initPOWER1T(s[3278]);
initTOPDVDBOPEN1T(s[3279]);
initBOTDVDBOPEN1T(s[3280]);
initDVDBOPEN1T(s[3281]);
initPOWER2T(s[3282]);
initTOPDVDBOPEN2T(s[3283]);
initBOTDVDBOPEN2T(s[3284]);
initDVDBOPEN2T(s[3285]);
initDVVALDBT(s[3286]);
initDVWID(s[3287]);
initDVSPS(s[3288]);
initDVSPEN(s[3289]);
initPINCINP(s[3290]);
initDVPINPVAL(s[3291]);
initDVPFCURVAL(s[3292]);
initDVHASPFCUR(s[3293]);
initDVPFDDV(s[3294]);
initDVHASPFOCC(s[3295]);
initDVHASPFGRP(s[3296]);
initDVHASPFPRIV(s[3297]);
initDVHASPFSIPP(s[3298]);
initDVHASPFRAC(s[3299]);
initTOTPEN(s[3300]);
initPINC(s[3301]);
initCURRAC(s[3302]);
initHASSHAC(s[3303]);
initCACRNUM(s[3304]);
initDVSHCVAL(s[3305]);
initCAODNUM(s[3306]);
initDVSHODVAL(s[3307]);
initDVSHODVAL2(s[3308]);
initDVSHODVAL3(s[3309]);
initDVFCINVAL(s[3310]);
initDVCOINV(s[3311]);
initDVCOINV2(s[3312]);
initDVCOINV3(s[3313]);
initDVCOINV4(s[3314]);
initDVCOINV5(s[3315]);
initDVCACRVAL_SUM(s[3316]);
initDVCAODVAL_SUM(s[3317]);
initDVCAVAL_SUM(s[3318]);
initSAVDEP(s[3319]);
initHASSHSAC(s[3320]);
initSAVNUM(s[3321]);
initDVSHSVAL(s[3322]);
initDVFSINVAL(s[3323]);
initDVSAVAL_SUM(s[3324]);
initIHRECNT_I(s[3325]);
initIHRECNT_IFLAG(s[3326]);
initIHRCNUM_I(s[3327]);
initIHRCNUM_IFLAG(s[3328]);
initIVAL1_IFLAG(s[3329]);
initIVALB1_I(s[3330]);
initIVALB1_IFLAG(s[3331]);
initIVAL2_I(s[3332]);
initIVAL2_IFLAG(s[3333]);
initIVALB2_I(s[3334]);
initIVALB2_IFLAG(s[3335]);
initIVAL3_I(s[3336]);
initIVAL3_IFLAG(s[3337]);
initIVALB3_I(s[3338]);
initIVALB3_IFLAG(s[3339]);
initILGIFT_I(s[3340]);
initILGIFT_IFLAG(s[3341]);
initIGIFVAL_IFLAG(s[3342]);
initIGFVALB_I(s[3343]);
initIGFVALB_IFLAG(s[3344]);
initILUMP_I(s[3345]);
initILUMP_IFLAG(s[3346]);
initILUMTY1_I(s[3347]);
initILUMTY1_IFLAG(s[3348]);
initILIFE_IFLAG(s[3349]);
initILIFB_I(s[3350]);
initILIFB_IFLAG(s[3351]);
initILUPP_I(s[3352]);
initILUPP_IFLAG(s[3353]);
initILUPB_I(s[3354]);
initILUPB_IFLAG(s[3355]);
initILACC_IFLAG(s[3356]);
initILACB_I(s[3357]);
initILACB_IFLAG(s[3358]);
initILINS_IFLAG(s[3359]);
initILINB_I(s[3360]);
initILINB_IFLAG(s[3361]);
initILRED_IFLAG(s[3362]);
initILRDB_I(s[3363]);
initILRDB_IFLAG(s[3364]);
initILWIN_IFLAG(s[3365]);
initILWNB_I(s[3366]);
initILWNB_IFLAG(s[3367]);
initILOTH_IFLAG(s[3368]);
initILOTB_I(s[3369]);
initILOTB_IFLAG(s[3370]);
initFISA1_I(s[3371]);
initFISA1_IFLAG(s[3372]);
initFISA2_I(s[3373]);
initFISA2_IFLAG(s[3374]);
initFCISAV_I(s[3375]);
initFCISAV_IFLAG(s[3376]);
initFIISAV_I(s[3377]);
initFIISAV_IFLAG(s[3378]);
initFKISAV_I(s[3379]);
initFKISAV_IFLAG(s[3380]);
initFBONDV_I(s[3381]);
initFBONDV_IFLAG(s[3382]);
initFCOLLV_I(s[3383]);
initFCOLLV_IFLAG(s[3384]);
initFESHA_I(s[3385]);
initFESHA_IFLAG(s[3386]);
initFESHAV_I(s[3387]);
initFESHAV_IFLAG(s[3388]);
initFEOPTV_I(s[3389]);
initFEOPTV_IFLAG(s[3390]);
initFSHARE1_I(s[3391]);
initFSHARE1_IFLAG(s[3392]);
initFSHARE2_I(s[3393]);
initFSHARE2_IFLAG(s[3394]);
initFSHARE3_I(s[3395]);
initFSHARE3_IFLAG(s[3396]);
initFSHUKV_I(s[3397]);
initFSHUKV_IFLAG(s[3398]);
initFSHOSV_I(s[3399]);
initFSHOSV_IFLAG(s[3400]);
initFNSVAL_I(s[3401]);
initFNSVAL_IFLAG(s[3402]);
initFGILTS1_I(s[3403]);
initFGILTS1_IFLAG(s[3404]);
initFGILTS2_I(s[3405]);
initFGILTS2_IFLAG(s[3406]);
initFGILTS3_I(s[3407]);
initFGILTS3_IFLAG(s[3408]);
initFGILTS4_I(s[3409]);
initFGILTS4_IFLAG(s[3410]);
initFGLTUKV_I(s[3411]);
initFGLTUKV_IFLAG(s[3412]);
initFGLTFOV_I(s[3413]);
initFGLTFOV_IFLAG(s[3414]);
initFINS_I(s[3415]);
initFINS_IFLAG(s[3416]);
initFINSV_I(s[3417]);
initFINSV_IFLAG(s[3418]);
initFLPROD1_I(s[3419]);
initFLPROD1_IFLAG(s[3420]);
initFLPROD2_I(s[3421]);
initFLPROD2_IFLAG(s[3422]);
initFLPROD3_I(s[3423]);
initFLPROD3_IFLAG(s[3424]);
initFLPROD4_I(s[3425]);
initFLPROD4_IFLAG(s[3426]);
initFLFENV_I(s[3427]);
initFLFENV_IFLAG(s[3428]);
initFLFSIV_I(s[3429]);
initFLFSIV_IFLAG(s[3430]);
initFLFFSV_I(s[3431]);
initFLFFSV_IFLAG(s[3432]);
initFLFTEV_I(s[3433]);
initFLFTEV_IFLAG(s[3434]);
initFINVOTV_I(s[3435]);
initFINVOTV_IFLAG(s[3436]);
initFINFSAV1_I(s[3437]);
initFINFSAV1_IFLAG(s[3438]);
initFINFSAV2_I(s[3439]);
initFINFSAV2_IFLAG(s[3440]);
initFINFSAV3_I(s[3441]);
initFINFSAV3_IFLAG(s[3442]);
initFINFSAV4_I(s[3443]);
initFINFSAV4_IFLAG(s[3444]);
initFINFLV_I(s[3445]);
initFINFLV_IFLAG(s[3446]);
initFINFV_I(s[3447]);
initFINFV_IFLAG(s[3448]);
initFLOANVB_I(s[3449]);
initFLOANVB_IFLAG(s[3450]);
initFINFVB_I(s[3451]);
initFINFVB_IFLAG(s[3452]);
initSATIS(s[3453]);
initWORTH(s[3454]);
initHAPPY(s[3455]);
initANXIOUS(s[3456]);
initUPROP1_I(s[3457]);
initUPROP1_IFLAG(s[3458]);
initUPROP2_I(s[3459]);
initUPROP2_IFLAG(s[3460]);
initUPROP3_I(s[3461]);
initUPROP3_IFLAG(s[3462]);
initUPROP4_I(s[3463]);
initUPROP4_IFLAG(s[3464]);
initUPROP5_I(s[3465]);
initUPROP5_IFLAG(s[3466]);
initUPROP6_I(s[3467]);
initUPROP6_IFLAG(s[3468]);
initUNUMHS_I(s[3469]);
initUNUMHS_IFLAG(s[3470]);
initUBUYLET_I(s[3471]);
initUBUYLET_IFLAG(s[3472]);
initUNUMBD_I(s[3473]);
initUNUMBD_IFLAG(s[3474]);
initUNUMLA_I(s[3475]);
initUNUMLA_IFLAG(s[3476]);
initUNUMOV_I(s[3477]);
initUNUMOV_IFLAG(s[3478]);
initUNUMRE_I(s[3479]);
initUNUMRE_IFLAG(s[3480]);
initUVALBS_I(s[3481]);
initUVALBS_IFLAG(s[3482]);
initUVALBL_I(s[3483]);
initUVALBL_IFLAG(s[3484]);
initUVALBO_I(s[3485]);
initUVALBO_IFLAG(s[3486]);
initUVALBLU_I(s[3487]);
initUVALBLU_IFLAG(s[3488]);
initUVALBOS_I(s[3489]);
initUVALBOS_IFLAG(s[3490]);
initUVALBOR_I(s[3491]);
initUVALBOR_IFLAG(s[3492]);
initUVALS_I(s[3493]);
initUVALS_IFLAG(s[3494]);
initUVALL_I(s[3495]);
initUVALL_IFLAG(s[3496]);
initUVALO_I(s[3497]);
initUVALO_IFLAG(s[3498]);
initUVALLU_I(s[3499]);
initUVALLU_IFLAG(s[3500]);
initUVALOS_I(s[3501]);
initUVALOS_IFLAG(s[3502]);
initUVALOR_I(s[3503]);
initUVALOR_IFLAG(s[3504]);
initUDEBTBS_I(s[3505]);
initUDEBTBS_IFLAG(s[3506]);
initUDEBTBL_I(s[3507]);
initUDEBTBL_IFLAG(s[3508]);
initUDEBTBO_I(s[3509]);
initUDEBTBO_IFLAG(s[3510]);
initUDEBTBLU_I(s[3511]);
initUDEBTBLU_IFLAG(s[3512]);
initUDEBTBOS_I(s[3513]);
initUDEBTBOS_IFLAG(s[3514]);
initUDEBTBOR_I(s[3515]);
initUDEBTBOR_IFLAG(s[3516]);
initUDEBTS_I(s[3517]);
initUDEBTS_IFLAG(s[3518]);
initUDEBTL_I(s[3519]);
initUDEBTL_IFLAG(s[3520]);
initUDEBTO_I(s[3521]);
initUDEBTO_IFLAG(s[3522]);
initUDEBTLU_I(s[3523]);
initUDEBTLU_IFLAG(s[3524]);
initUDEBTOS_I(s[3525]);
initUDEBTOS_IFLAG(s[3526]);
initUDEBTOR_I(s[3527]);
initUDEBTOR_IFLAG(s[3528]);
initUGDVBS_I(s[3529]);
initUGDVBS_IFLAG(s[3530]);
initUGDVBL_I(s[3531]);
initUGDVBL_IFLAG(s[3532]);
initUGDVBOS_I(s[3533]);
initUGDVBOS_IFLAG(s[3534]);
initCACTF_I(s[3535]);
initCACTF_IFLAG(s[3536]);
initCAJISA_I(s[3537]);
initCAJISA_IFLAG(s[3538]);
initCASAV_I(s[3539]);
initCASAV_IFLAG(s[3540]);
initCACTV_I(s[3541]);
initCACTV_IFLAG(s[3542]);
initCACTVB_I(s[3543]);
initCACTVB_IFLAG(s[3544]);
initCASVV_I(s[3545]);
initCASVV_IFLAG(s[3546]);
initCASVB_I(s[3547]);
initCASVB_IFLAG(s[3548]);
initHASISA(s[3549]);
initHASBOND(s[3550]);
initHASUTRUST(s[3551]);
initHASEMPSH(s[3552]);
initHASOTHSH(s[3553]);
initHASNSP(s[3554]);
initHASGILT(s[3555]);
initHASLINS(s[3556]);
initHASOINV(s[3557]);
initHASNOFA(s[3558]);
initISHRP(s[3559]);
initISHRPPART(s[3560]);
initHRPIOUT1(s[3561]);
initHRPPARTIOUT1(s[3562]);
initHRP_RESP(s[3563]);
initHRPDVAGE(s[3564]);
initHRPDVAGE9(s[3565]);
initHRPSEX(s[3566]);
initHRPNSSEC3(s[3567]);
initHRPDVILO3A(s[3568]);
initHRPDVMRDF(s[3569]);
initHRPEDATTN1(s[3570]);
initHRPEDATTN2(s[3571]);
initHRPEDATTN3(s[3572]);
initHRPEMPSTAT2(s[3573]);
initHRPETHNIC(s[3574]);
initDLANY_I(s[3575]);
initDLANY_IFLAG(s[3576]);
initDLNUM_I(s[3577]);
initDLNUM_IFLAG(s[3578]);
initDLTYPE1_I(s[3579]);
initDLTYPE1_IFLAG(s[3580]);
initDLTYPE2_I(s[3581]);
initDLTYPE2_IFLAG(s[3582]);
initDLTYPE3_I(s[3583]);
initDLTYPE3_IFLAG(s[3584]);
initDLTYPE4_I(s[3585]);
initDLTYPE4_IFLAG(s[3586]);
initDLTYPE5_I(s[3587]);
initDLTYPE5_IFLAG(s[3588]);
initDLINS1_I(s[3589]);
initDLINS1_IFLAG(s[3590]);
initDLINS2_I(s[3591]);
initDLINS2_IFLAG(s[3592]);
initDLINS3_I(s[3593]);
initDLINS3_IFLAG(s[3594]);
initDLINS4_I(s[3595]);
initDLINS4_IFLAG(s[3596]);
initDLINS5_I(s[3597]);
initDLINS5_IFLAG(s[3598]);
initDLEST1_I(s[3599]);
initDLEST1_IFLAG(s[3600]);
initDLEST2_I(s[3601]);
initDLEST2_IFLAG(s[3602]);
initDLEST3_I(s[3603]);
initDLEST3_IFLAG(s[3604]);
initDLEST4_I(s[3605]);
initDLEST4_IFLAG(s[3606]);
initDLEST5_I(s[3607]);
initDLEST5_IFLAG(s[3608]);
initDLOFT1_I(s[3609]);
initDLOFT1_IFLAG(s[3610]);
initDLOFT2_I(s[3611]);
initDLOFT2_IFLAG(s[3612]);
initDLOFT3_I(s[3613]);
initDLOFT3_IFLAG(s[3614]);
initDLOFT4_I(s[3615]);
initDLOFT4_IFLAG(s[3616]);
initDLOFT5_I(s[3617]);
initDLOFT5_IFLAG(s[3618]);
initDLWHNY1_I(s[3619]);
initDLWHNY1_IFLAG(s[3620]);
initDLWHNY2_I(s[3621]);
initDLWHNY2_IFLAG(s[3622]);
initDLWHNY3_I(s[3623]);
initDLWHNY3_IFLAG(s[3624]);
initDLWHNY4_I(s[3625]);
initDLWHNY4_IFLAG(s[3626]);
initDLWHNY5_I(s[3627]);
initDLWHNY5_IFLAG(s[3628]);
initDLWHNM1_I(s[3629]);
initDLWHNM1_IFLAG(s[3630]);
initDLWHNM2_I(s[3631]);
initDLWHNM2_IFLAG(s[3632]);
initDLWHNM3_I(s[3633]);
initDLWHNM3_IFLAG(s[3634]);
initDLWHNM4_I(s[3635]);
initDLWHNM4_IFLAG(s[3636]);
initDLWHNM5_I(s[3637]);
initDLWHNM5_IFLAG(s[3638]);
initDSLAMT1_I(s[3639]);
initDSLAMT1_IFLAG(s[3640]);
initDSLAMT2_I(s[3641]);
initDSLAMT2_IFLAG(s[3642]);
initDSLAMT3_I(s[3643]);
initDSLAMT3_IFLAG(s[3644]);
initDSLAMT4_I(s[3645]);
initDSLAMT4_IFLAG(s[3646]);
initDSLAMT5_I(s[3647]);
initDSLAMT5_IFLAG(s[3648]);
initDSLEST1_I(s[3649]);
initDSLEST1_IFLAG(s[3650]);
initDSLEST2_I(s[3651]);
initDSLEST2_IFLAG(s[3652]);
initDSLEST3_I(s[3653]);
initDSLEST3_IFLAG(s[3654]);
initDSLEST4_I(s[3655]);
initDSLEST4_IFLAG(s[3656]);
initDSLEST5_I(s[3657]);
initDSLEST5_IFLAG(s[3658]);
initNWLN_I(s[3659]);
initNWLN_IFLAG(s[3660]);
initNWLNNO_I(s[3661]);
initNWLNNO_IFLAG(s[3662]);
initDTLTYPE1_I(s[3663]);
initDTLTYPE1_IFLAG(s[3664]);
initDTLTYPE2_I(s[3665]);
initDTLTYPE2_IFLAG(s[3666]);
initDTLTYPE3_I(s[3667]);
initDTLTYPE3_IFLAG(s[3668]);
initDTLTYPE4_I(s[3669]);
initDTLTYPE4_IFLAG(s[3670]);
initDTLTYPE5_I(s[3671]);
initDTLTYPE5_IFLAG(s[3672]);
initDTLOWE1_I(s[3673]);
initDTLOWE1_IFLAG(s[3674]);
initDTLOWE2_I(s[3675]);
initDTLOWE2_IFLAG(s[3676]);
initDTLOWE3_I(s[3677]);
initDTLOWE3_IFLAG(s[3678]);
initDTLOWE4_I(s[3679]);
initDTLOWE4_IFLAG(s[3680]);
initDTLOWE5_I(s[3681]);
initDTLOWE5_IFLAG(s[3682]);
initDTLOWEB1_I(s[3683]);
initDTLOWEB1_IFLAG(s[3684]);
initDTLOWEB2_I(s[3685]);
initDTLOWEB2_IFLAG(s[3686]);
initDTLOWEB3_I(s[3687]);
initDTLOWEB3_IFLAG(s[3688]);
initDTLOWEB4_I(s[3689]);
initDTLOWEB4_IFLAG(s[3690]);
initDTLOWEB5_I(s[3691]);
initDTLOWEB5_IFLAG(s[3692]);
initDLBEH1_I(s[3693]);
initDLBEH1_IFLAG(s[3694]);
initDLBEH2_I(s[3695]);
initDLBEH2_IFLAG(s[3696]);
initDLBEH3_I(s[3697]);
initDLBEH3_IFLAG(s[3698]);
initDLBEH4_I(s[3699]);
initDLBEH4_IFLAG(s[3700]);
initDLBEH5_I(s[3701]);
initDLBEH5_IFLAG(s[3702]);
initDLOWE1_I(s[3703]);
initDLOWE1_IFLAG(s[3704]);
initDLOWE2_I(s[3705]);
initDLOWE2_IFLAG(s[3706]);
initDLOWE3_I(s[3707]);
initDLOWE3_IFLAG(s[3708]);
initDLOWE4_I(s[3709]);
initDLOWE4_IFLAG(s[3710]);
initDLOWE5_I(s[3711]);
initDLOWE5_IFLAG(s[3712]);
initDVCISAV(s[3713]);
initDVIISAV(s[3714]);
initDVKISAV(s[3715]);
initDVFNSVAL(s[3716]);
initDVFSHUKV(s[3717]);
initDVFLFENV(s[3718]);
initDVFLFSIV(s[3719]);
initDVFLFFSV(s[3720]);
initDVFLFTEV(s[3721]);
initDVFBONDV(s[3722]);
initDVFEOPTV(s[3723]);
initDVFESHAV(s[3724]);
initDVFCOLLV(s[3725]);
initDVFSHOSV(s[3726]);
initDVFGLTUKV(s[3727]);
initDVFGLTFOV(s[3728]);
initDVFINVOTV(s[3729]);
initDVFINFLV(s[3730]);
initDVFINFV(s[3731]);
initDVCACTV(s[3732]);
initDVCASVV(s[3733]);
initDVISAVAL_SUM(s[3734]);
initDVINSV_SUM(s[3735]);
initDVFESHARES_SUM(s[3736]);
initDVFINFVAL_SUM(s[3737]);
initPHYSHOUSGDST(s[3738]);
initPHYSBUYLGDST(s[3739]);
initPHYSHOUSGDSOST(s[3740]);
initDVHSEDEBT(s[3741]);
initDVBLTDEBT(s[3742]);
initDVBLDDEBT(s[3743]);
initDVLUKDEBT(s[3744]);
initDVLOSDEBT(s[3745]);
initDVOPRDEBT(s[3746]);
initDVHSEVAL(s[3747]);
initDVBLTVAL(s[3748]);
initDVBLDVAL(s[3749]);
initDVLUKVAL(s[3750]);
initDVLOSVAL(s[3751]);
initDVOPRVAL(s[3752]);
initOTHMORT(s[3753]);
initDVFFASSETS_SUM(s[3754]);
initDHPANY1_I(s[3755]);
initDHPANY1_IFLAG(s[3756]);
initDHPANY2_I(s[3757]);
initDHPANY2_IFLAG(s[3758]);
initDHPANY3_I(s[3759]);
initDHPANY3_IFLAG(s[3760]);
initDHPNUM_I(s[3761]);
initDHPNUM_IFLAG(s[3762]);
initDHPINS1_I(s[3763]);
initDHPINS1_IFLAG(s[3764]);
initDHPINS2_I(s[3765]);
initDHPINS2_IFLAG(s[3766]);
initDHPINS3_I(s[3767]);
initDHPINS3_IFLAG(s[3768]);
initDHPINS4_I(s[3769]);
initDHPINS4_IFLAG(s[3770]);
initDHPINS5_I(s[3771]);
initDHPINS5_IFLAG(s[3772]);
initDHPOFT1_I(s[3773]);
initDHPOFT1_IFLAG(s[3774]);
initDHPOFT2_I(s[3775]);
initDHPOFT2_IFLAG(s[3776]);
initDHPOFT3_I(s[3777]);
initDHPOFT3_IFLAG(s[3778]);
initDHPOFT4_I(s[3779]);
initDHPOFT4_IFLAG(s[3780]);
initDHPOFT5_I(s[3781]);
initDHPOFT5_IFLAG(s[3782]);
initDHPWHNY1_I(s[3783]);
initDHPWHNY1_IFLAG(s[3784]);
initDHPWHNY2_I(s[3785]);
initDHPWHNY2_IFLAG(s[3786]);
initDHPWHNY3_I(s[3787]);
initDHPWHNY3_IFLAG(s[3788]);
initDHPWHNY4_I(s[3789]);
initDHPWHNY4_IFLAG(s[3790]);
initDHPWHNY5_I(s[3791]);
initDHPWHNY5_IFLAG(s[3792]);
initDHPWHNM1_I(s[3793]);
initDHPWHNM1_IFLAG(s[3794]);
initDHPWHNM2_I(s[3795]);
initDHPWHNM2_IFLAG(s[3796]);
initDHPWHNM3_I(s[3797]);
initDHPWHNM3_IFLAG(s[3798]);
initDHPWHNM4_I(s[3799]);
initDHPWHNM4_IFLAG(s[3800]);
initDHPWHNM5_I(s[3801]);
initDHPWHNM5_IFLAG(s[3802]);
initDHPBEH1_I(s[3803]);
initDHPBEH1_IFLAG(s[3804]);
initDHPBEH2_I(s[3805]);
initDHPBEH2_IFLAG(s[3806]);
initDHPBEH3_I(s[3807]);
initDHPBEH3_IFLAG(s[3808]);
initDHPBEH4_I(s[3809]);
initDHPBEH4_IFLAG(s[3810]);
initDHPBEH5_I(s[3811]);
initDHPBEH5_IFLAG(s[3812]);
initDHPOWE1_I(s[3813]);
initDHPOWE1_IFLAG(s[3814]);
initDHPOWE2_I(s[3815]);
initDHPOWE2_IFLAG(s[3816]);
initDHPOWE3_I(s[3817]);
initDHPOWE3_IFLAG(s[3818]);
initDHPOWE4_I(s[3819]);
initDHPOWE4_IFLAG(s[3820]);
initDHPOWE5_I(s[3821]);
initDHPOWE5_IFLAG(s[3822]);
initDVCCARDYN_I(s[3823]);
initDVCCARDYN_IFLAG(s[3824]);
initDVCCARDNUM_I(s[3825]);
initDVCCARDNUM_IFLAG(s[3826]);
initCCAC1_I(s[3827]);
initCCAC1_IFLAG(s[3828]);
initCCAC2_I(s[3829]);
initCCAC2_IFLAG(s[3830]);
initCCAC3_I(s[3831]);
initCCAC3_IFLAG(s[3832]);
initDCAMOS1_I(s[3833]);
initDCAMOS1_IFLAG(s[3834]);
initDCAMOS2_I(s[3835]);
initDCAMOS2_IFLAG(s[3836]);
initDCAMOS3_I(s[3837]);
initDCAMOS3_IFLAG(s[3838]);
initDVSCARDYN_I(s[3839]);
initDVSCARDYN_IFLAG(s[3840]);
initDVSCARDNUM_I(s[3841]);
initDVSCARDNUM_IFLAG(s[3842]);
initSCAC1_I(s[3843]);
initSCAC1_IFLAG(s[3844]);
initSCAC2_I(s[3845]);
initSCAC2_IFLAG(s[3846]);
initSCAC3_I(s[3847]);
initSCAC3_IFLAG(s[3848]);
initDSAMOS1_I(s[3849]);
initDSAMOS1_IFLAG(s[3850]);
initDSAMOS2_I(s[3851]);
initDSAMOS2_IFLAG(s[3852]);
initDSAMOS3_I(s[3853]);
initDSAMOS3_IFLAG(s[3854]);
initTOTSC_SUM(s[3855]);
initHASSC(s[3856]);
initTOTCC_SUM(s[3857]);
initHASCC(s[3858]);
initDMOANY_I(s[3859]);
initDMOANY_IFLAG(s[3860]);
initDMONUM_I(s[3861]);
initDMONUM_IFLAG(s[3862]);
initDMOINS1_I(s[3863]);
initDMOINS1_IFLAG(s[3864]);
initDMOINS2_I(s[3865]);
initDMOINS2_IFLAG(s[3866]);
initDMOINS3_I(s[3867]);
initDMOINS3_IFLAG(s[3868]);
initDMOINS4_I(s[3869]);
initDMOINS4_IFLAG(s[3870]);
initDMOINS5_I(s[3871]);
initDMOINS5_IFLAG(s[3872]);
initDMOOFT1_I(s[3873]);
initDMOOFT1_IFLAG(s[3874]);
initDMOOFT2_I(s[3875]);
initDMOOFT2_IFLAG(s[3876]);
initDMOOFT3_I(s[3877]);
initDMOOFT3_IFLAG(s[3878]);
initDMOOFT4_I(s[3879]);
initDMOOFT4_IFLAG(s[3880]);
initDMOOFT5_I(s[3881]);
initDMOOFT5_IFLAG(s[3882]);
initDMOWHNY1_I(s[3883]);
initDMOWHNY1_IFLAG(s[3884]);
initDMOWHNY2_I(s[3885]);
initDMOWHNY2_IFLAG(s[3886]);
initDMOWHNY3_I(s[3887]);
initDMOWHNY3_IFLAG(s[3888]);
initDMOWHNY4_I(s[3889]);
initDMOWHNY4_IFLAG(s[3890]);
initDMOWHNY5_I(s[3891]);
initDMOWHNY5_IFLAG(s[3892]);
initDMOWHNM1_I(s[3893]);
initDMOWHNM1_IFLAG(s[3894]);
initDMOWHNM2_I(s[3895]);
initDMOWHNM2_IFLAG(s[3896]);
initDMOWHNM3_I(s[3897]);
initDMOWHNM3_IFLAG(s[3898]);
initDMOWHNM4_I(s[3899]);
initDMOWHNM4_IFLAG(s[3900]);
initDMOWHNM5_I(s[3901]);
initDMOWHNM5_IFLAG(s[3902]);
initDMOBEH1_I(s[3903]);
initDMOBEH1_IFLAG(s[3904]);
initDMOBEH2_I(s[3905]);
initDMOBEH2_IFLAG(s[3906]);
initDMOBEH3_I(s[3907]);
initDMOBEH3_IFLAG(s[3908]);
initDMOBEH4_I(s[3909]);
initDMOBEH4_IFLAG(s[3910]);
initDMOBEH5_I(s[3911]);
initDMOBEH5_IFLAG(s[3912]);
initDMOOWE1_I(s[3913]);
initDMOOWE1_IFLAG(s[3914]);
initDMOOWE2_I(s[3915]);
initDMOOWE2_IFLAG(s[3916]);
initDMOOWE3_I(s[3917]);
initDMOOWE3_IFLAG(s[3918]);
initDMOOWE4_I(s[3919]);
initDMOOWE4_IFLAG(s[3920]);
initDMOOWE5_I(s[3921]);
initDMOOWE5_IFLAG(s[3922]);
initDHBANY01_I(s[3923]);
initDHBANY01_IFLAG(s[3924]);
initDHBANY02_I(s[3925]);
initDHBANY02_IFLAG(s[3926]);
initDHBANY03_I(s[3927]);
initDHBANY03_IFLAG(s[3928]);
initDHBANY04_I(s[3929]);
initDHBANY04_IFLAG(s[3930]);
initDHBANY05_I(s[3931]);
initDHBANY05_IFLAG(s[3932]);
initDHBANY06_I(s[3933]);
initDHBANY06_IFLAG(s[3934]);
initDHBANY07_I(s[3935]);
initDHBANY07_IFLAG(s[3936]);
initDHBANY08_I(s[3937]);
initDHBANY08_IFLAG(s[3938]);
initDHBANY09_I(s[3939]);
initDHBANY09_IFLAG(s[3940]);
initDHBANY10_I(s[3941]);
initDHBANY10_IFLAG(s[3942]);
initDHBANY11_I(s[3943]);
initDHBANY11_IFLAG(s[3944]);
initDHBAMT01_I(s[3945]);
initDHBAMT01_IFLAG(s[3946]);
initDHBAMT02_I(s[3947]);
initDHBAMT02_IFLAG(s[3948]);
initDHBAMT03_I(s[3949]);
initDHBAMT03_IFLAG(s[3950]);
initDHBAMT04_I(s[3951]);
initDHBAMT04_IFLAG(s[3952]);
initDHBAMT05_I(s[3953]);
initDHBAMT05_IFLAG(s[3954]);
initDHBAMT06_I(s[3955]);
initDHBAMT06_IFLAG(s[3956]);
initDHBAMT07_I(s[3957]);
initDHBAMT07_IFLAG(s[3958]);
initDHBAMT08_I(s[3959]);
initDHBAMT08_IFLAG(s[3960]);
initDHBAMT09_I(s[3961]);
initDHBAMT09_IFLAG(s[3962]);
initDHBAMT10_I(s[3963]);
initDHBAMT10_IFLAG(s[3964]);
initDHBAMT11_I(s[3965]);
initDHBAMT11_IFLAG(s[3966]);
initDHBEST01_I(s[3967]);
initDHBEST01_IFLAG(s[3968]);
initDHBEST02_I(s[3969]);
initDHBEST02_IFLAG(s[3970]);
initDHBEST03_I(s[3971]);
initDHBEST03_IFLAG(s[3972]);
initDHBEST04_I(s[3973]);
initDHBEST04_IFLAG(s[3974]);
initDHBEST05_I(s[3975]);
initDHBEST05_IFLAG(s[3976]);
initDHBEST06_I(s[3977]);
initDHBEST06_IFLAG(s[3978]);
initDHBEST07_I(s[3979]);
initDHBEST07_IFLAG(s[3980]);
initDHBEST08_I(s[3981]);
initDHBEST08_IFLAG(s[3982]);
initDHBEST09_I(s[3983]);
initDHBEST09_IFLAG(s[3984]);
initDHBEST10_I(s[3985]);
initDHBEST10_IFLAG(s[3986]);
initDHBEST11_I(s[3987]);
initDHBEST11_IFLAG(s[3988]);
initFINCV_IFLAG(s[3989]);
initDVNIEMP(s[3990]);
initDVHASHP(s[3991]);
initDVDHPOWE1(s[3992]);
initDVDHPOWE2(s[3993]);
initDVDHPOWE3(s[3994]);
initDVDHPOWE4(s[3995]);
initDVDHPOWE5(s[3996]);
initHPARR_SUM(s[3997]);
initDVHPAR(s[3998]);
initMOOS1(s[3999]);
initMOOS2(s[4000]);
initMOOS3(s[4001]);
initMOOS4(s[4002]);
initMOOS5(s[4003]);
initDVDMOOWE1(s[4004]);
initDVDMOOWE2(s[4005]);
initDVDMOOWE3(s[4006]);
initDVDMOOWE4(s[4007]);
initDVDMOOWE5(s[4008]);
initMOARR_SUM(s[4009]);
initDVHASMOAR(s[4010]);
initDVHASLF(s[4011]);
initDVHASPLINF(s[4012]);
initDVHASSLC(s[4013]);
initDVHASSLBNK(s[4014]);
initDVDLOWE1(s[4015]);
initDVDLOWE2(s[4016]);
initDVDLOWE3(s[4017]);
initDVDLOWE4(s[4018]);
initDVDLOWE5(s[4019]);
initLNARR_SUM(s[4020]);
initDVHASLNAR(s[4021]);
initDVHASNLF(s[4022]);
initDVHASNLI(s[4023]);
initHFINW_EXCENDW_SUM(s[4024]);
initHOUSGDST(s[4025]);
initBUYLGDST(s[4026]);
initHOUSGDSOST(s[4027]);
initDVELARR(s[4028]);
initDVGASARR(s[4029]);
initDVCTARR(s[4030]);
initDVTELARR(s[4031]);
initDVWATARR(s[4032]);
initDVRNTARR(s[4033]);
initDVCHMARR(s[4034]);
initDVCRTARR(s[4035]);
initDVTAXARR(s[4036]);
initDVVATARR(s[4037]);
initDVOTHARR(s[4038]);
initDVANYARR(s[4039]);
initTOTBILLARR_SUM(s[4040]);
initMOYR1(s[4041]);
initMOMN1(s[4042]);
initMOLFT1(s[4043]);
initMOYR2(s[4044]);
initMOMN2(s[4045]);
initMOLFT2(s[4046]);
initMOYR3(s[4047]);
initMOMN3(s[4048]);
initMOLFT3(s[4049]);
initMOYR4(s[4050]);
initMOMN4(s[4051]);
initMOLFT4(s[4052]);
initMOYR5(s[4053]);
initMOMN5(s[4054]);
initMOLFT5(s[4055]);
initTOTMO_SUM(s[4056]);
initDVHASMO(s[4057]);
initHPOS1(s[4058]);
initHPYR1(s[4059]);
initHPMN1(s[4060]);
initHPLFT1(s[4061]);
initHPOS2(s[4062]);
initHPYR2(s[4063]);
initHPMN2(s[4064]);
initHPLFT2(s[4065]);
initHPOS3(s[4066]);
initHPYR3(s[4067]);
initHPMN3(s[4068]);
initHPLFT3(s[4069]);
initHPOS4(s[4070]);
initHPYR4(s[4071]);
initHPMN4(s[4072]);
initHPLFT4(s[4073]);
initHPOS5(s[4074]);
initHPYR5(s[4075]);
initHPMN5(s[4076]);
initHPLFT5(s[4077]);
initTOTHP_SUM(s[4078]);
initLNOS1(s[4079]);
initOSLC1(s[4080]);
initFLNOS1(s[4081]);
initNWFLNVAL1(s[4082]);
initNSLC1(s[4083]);
initNWILNVAL1(s[4084]);
initNSLBNK1(s[4085]);
initOSLBNK1(s[4086]);
initLNYR1(s[4087]);
initLNMN1(s[4088]);
initLNLFT1(s[4089]);
initLNOS2(s[4090]);
initOSLC2(s[4091]);
initFLNOS2(s[4092]);
initNWFLNVAL2(s[4093]);
initNSLC2(s[4094]);
initNWILNVAL2(s[4095]);
initNSLBNK2(s[4096]);
initOSLBNK2(s[4097]);
initLNYR2(s[4098]);
initLNMN2(s[4099]);
initLNLFT2(s[4100]);
initLNOS3(s[4101]);
initOSLC3(s[4102]);
initFLNOS3(s[4103]);
initNWFLNVAL3(s[4104]);
initNSLC3(s[4105]);
initNWILNVAL3(s[4106]);
initNSLBNK3(s[4107]);
initOSLBNK3(s[4108]);
initLNYR3(s[4109]);
initLNMN3(s[4110]);
initLNLFT3(s[4111]);
initLNOS4(s[4112]);
initOSLC4(s[4113]);
initFLNOS4(s[4114]);
initNWFLNVAL4(s[4115]);
initNSLC4(s[4116]);
initNWILNVAL4(s[4117]);
initNSLBNK4(s[4118]);
initOSLBNK4(s[4119]);
initLNYR4(s[4120]);
initLNMN4(s[4121]);
initLNLFT4(s[4122]);
initLNOS5(s[4123]);
initOSLC5(s[4124]);
initFLNOS5(s[4125]);
initNWFLNVAL5(s[4126]);
initNSLC5(s[4127]);
initNWILNVAL5(s[4128]);
initNSLBNK5(s[4129]);
initOSLBNK5(s[4130]);
initLNYR5(s[4131]);
initLNMN5(s[4132]);
initLNLFT5(s[4133]);
initTOTLNS_SUM(s[4134]);
initTOTFLNS_SUM(s[4135]);
initTOTSLC_SUM(s[4136]);
initTOTLOS_SUM(s[4137]);
initTOTOSLC_SUM(s[4138]);
initTOTNSLC_SUM(s[4139]);
initDVNWFLN_SUM(s[4140]);
initDVNWILN_SUM(s[4141]);
initTOTNLOS_SUM(s[4142]);
initTOTOSLBNK_SUM(s[4143]);
initTOTNSLBNK_SUM(s[4144]);
initTOTSLBNK_SUM(s[4145]);
initTOTARR_EXCMORT_SUM(s[4146]);
initHFINL_SUM(s[4147]);
initP_PHYS(s[4148]);
initP_NET_PROP(s[4149]);
initP_NET_FIN(s[4150]);
initP_TOTWLTH(s[4151]);
initHHPPHYS(s[4152]);
initPERSPHYS(s[4153]);
initHOWNF(s[4154]);
initPHVAL(s[4155]);
initPMVAL(s[4156]);
initPEVAL(s[4157]);
initP_NET_MAIN(s[4158]);
initP_NET_OTHPROP(s[4159]);
initDVAGE17(s[4160]);
initDVAGE7(s[4161]);
initSOC2010(s[4162]);
initSICCODE(s[4163]);
initSOC2000(s[4164]);
initDVSEPANNUAL01(s[4165]);
initDVSEPANNUAL02(s[4166]);
initDVSEPANNUAL03(s[4167]);
initDVSEPANNUAL04(s[4168]);
initDVSEPANNUAL05(s[4169]);
initDVSEPANNUAL06(s[4170]);
initDVSEPANNUAL07(s[4171]);
initDVSEPANNUAL08(s[4172]);
initDVSPECANNUAL01(s[4173]);
initDVSPECANNUAL02(s[4174]);
initDVSPECANNUAL03(s[4175]);
initDVSPECANNUAL04(s[4176]);
initDVSPECANNUAL05(s[4177]);
initDVSPECANNUAL06(s[4178]);
initDVSPECANNUAL07(s[4179]);
initDVSPECANNUAL08(s[4180]);
initDVSPECANNUAL09(s[4181]);
initDVSPECANNUAL10(s[4182]);
initDVTOTALLBENANNUAL(s[4183]);
initDVTOTTAXANNUAL(s[4184]);
initDVGIEMP(s[4185]);
initDVGIPPEN(s[4186]);
initDVGRSSESECJOB(s[4187]);
initDVGRSSESECJOB_I(s[4188]);
initDVNETRENTAMTANNUAL(s[4189]);
initDVOIGROANNUAL_I(s[4190]);
initDVBTOGANNUAL(s[4191]);
initDVCTCANNUAL(s[4192]);
initDVGIINV(s[4193]);
initDVGISE(s[4194]);
initDVGRSBONAMT_I(s[4195]);
initDVGRSEMPSECJOB(s[4196]);
initDVGRSEMPSECJOB_I(s[4197]);
initDVGRSPAY(s[4198]);
initDVRENTAMTANNUAL_I(s[4199]);
initDVGRSRENTAMTANNUAL(s[4200]);
initDVNETBONAMT(s[4201]);
initDVNETBONAMT_I(s[4202]);
initDVNETEMPSECJOB(s[4203]);
initDVNETEMPSECJOB_I(s[4204]);
initDVNETPAY(s[4205]);
initDVNETSESECJOB(s[4206]);
initDVNIINV(s[4207]);
initDVNIPPEN(s[4208]);
initDVNISE(s[4209]);
initPARTGRSPAY(s[4210]);
initTOTPARTGRSPAY(s[4211]);
initDVOIGEGANNUAL_I(s[4212]);
initDVOIGFRANNUAL_I(s[4213]);
initDVOIGGTANNUAL_I(s[4214]);
initDVOIGMAANNUAL_I(s[4215]);
initDVOIGOPANNUAL_I(s[4216]);
initDVOIGRRANNUAL(s[4217]);
initDVOIGRRANNUAL_I(s[4218]);
initDVOINEGANNUAL_I(s[4219]);
initDVOINFRANNUAL_I(s[4220]);
initDVOINGTANNUAL_I(s[4221]);
initDVOINMAANNUAL_I(s[4222]);
initDVOINOPANNUAL_I(s[4223]);
initDVOINROANNUAL_I(s[4224]);
initDVOINRRANNUAL_I(s[4225]);
initDVSEGRSPAY(s[4226]);
initDVSEGRSPAY_I(s[4227]);
initDVSENETPAY(s[4228]);
initDVSENETPAY_I(s[4229]);
initDVTOGTCANNUAL(s[4230]);
initDVTOTBENANNUAL(s[4231]);
initDVWTCANNUAL(s[4232]);
initDVNIOTHI(s[4233]);
initDVIRREGOTHANNUAL(s[4234]);
initDVWINANNUAL(s[4235]);
initDVACCINANNUAL(s[4236]);
initDVLUMPPENANNUAL(s[4237]);
initDVREDUNANNUAL(s[4238]);
initDVOTHINSANNUAL(s[4239]);
initDVLIFEANNUAL(s[4240]);
initDVINHERITANNUAL(s[4241]);
initDVGIFTANNUAL(s[4242]);
initGRSPAYEMPORSE(s[4243]);
initMARST(s[4244]);
initECACT(s[4245]);
}
}
