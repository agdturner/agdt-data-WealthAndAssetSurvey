/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.waas.process.WaAS_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.waas.data.person;
public class WaAS_W4W5PRecord extends WaAS_W3W4W5PRecord {
protected byte ADAMT1;
protected byte ADAMT2;
protected byte ADAMT3;
protected byte ADAVAIL1;
protected byte ADAVAIL2;
protected byte ADAVAIL3;
protected byte ADCONS1;
protected byte ADCONS2;
protected byte ADCONS3;
protected byte ADCOST1;
protected byte ADCOST2;
protected byte ADCOST3;
protected byte ADFUR1;
protected byte ADFUR2;
protected byte ADFUR3;
protected byte ADJOINT1;
protected byte ADJOINT2;
protected byte ADJOINT3;
protected byte ADPAY1;
protected byte ADPAY2;
protected byte ADPAY3;
protected byte ADPROD1;
protected byte ADPROD2;
protected byte ADPROD3;
protected byte ADPURCH1;
protected byte ADPURCH2;
protected byte ADPURCH3;
protected byte ADRECORD1;
protected byte ADRECORD2;
protected byte ADRECORD3;
protected byte ADSAT1;
protected byte ADSAT2;
protected byte ADSAT3;
protected byte ADSATREFLECT1;
protected byte ADSATREFLECT2;
protected byte ADSATREFLECT3;
protected byte ADSAVINV1;
protected byte ADSAVINV10;
protected byte ADSAVINV11;
protected byte ADSAVINV12;
protected byte ADSAVINV13;
protected byte ADSAVINV14;
protected byte ADSAVINV15;
protected byte ADSAVINV19;
protected byte ADSAVINV2;
protected byte ADSAVINV20;
protected byte ADSAVINV21;
protected byte ADSAVINV3;
protected byte ADSAVINV4;
protected byte ADSAVINV5;
protected boolean ADSAVINV6;
protected boolean ADSAVINV7;
protected byte ADSAVINV8;
protected byte ADSAVINV9;
protected byte ADTYP1;
protected byte ADTYP2;
protected byte ADTYP3;
protected byte ADVICE;
protected byte ADVNUMALL;
protected byte ADVREAS1;
protected byte ADVREAS2;
protected byte ADVREAS3;
protected byte ADWHO01;
protected byte ADWHO02;
protected boolean ADWHO15;
protected byte ADWHO16;
protected byte ADWHO17;
protected byte ADWHO31;
protected boolean ADWHO32;
protected double AGEASAF;
protected double ANNUITY1;
protected double ANNUITY2;
protected boolean ANYOTHERB_IFLAG;
protected byte BENINTRO;
protected byte CACTVB_I;
protected boolean CACTVB_IFLAG;
protected byte CAJISA;
protected short CASEW4;
protected byte CASVB_I;
protected boolean CASVB_IFLAG;
protected byte CATYPE1;
protected byte CATYPE2;
protected byte DBURDW3;
protected byte DCARRCL01;
protected byte DCARRCL02;
protected byte DCARRCL03;
protected boolean DCARRCL04;
protected byte DCBE2YR1;
protected byte DCBE2YR2;
protected byte DCBE2YR3;
protected byte DHBEST01_I;
protected boolean DHBEST01_IFLAG;
protected byte DHBEST02_I;
protected boolean DHBEST02_IFLAG;
protected byte DHBEST03_I;
protected boolean DHBEST03_IFLAG;
protected byte DHBEST04_I;
protected boolean DHBEST04_IFLAG;
protected byte DHBEST05_I;
protected boolean DHBEST05_IFLAG;
protected byte DHBEST06_I;
protected boolean DHBEST06_IFLAG;
protected byte DHBEST07_I;
protected boolean DHBEST07_IFLAG;
protected byte DHBEST08_I;
protected boolean DHBEST08_IFLAG;
protected byte DHBEST09_I;
protected boolean DHBEST09_IFLAG;
protected byte DHBEST10_I;
protected boolean DHBEST10_IFLAG;
protected byte DHBEST11_I;
protected boolean DHBEST11_IFLAG;
protected byte DISBEN1;
protected byte DISBEN1_I;
protected byte DISBEN2;
protected byte DISBEN2_I;
protected byte DISBEN3;
protected byte DISBEN3_I;
protected boolean DISBEN_IFLAG;
protected byte DLEST1_I;
protected boolean DLEST1_IFLAG;
protected byte DLEST2_I;
protected boolean DLEST2_IFLAG;
protected byte DLEST3_I;
protected boolean DLEST3_IFLAG;
protected byte DLEST4_I;
protected boolean DLEST4_IFLAG;
protected byte DLEST5_I;
protected boolean DLEST5_IFLAG;
protected byte DSLEST1_I;
protected boolean DSLEST1_IFLAG;
protected byte DSLEST2_I;
protected boolean DSLEST2_IFLAG;
protected byte DSLEST3_I;
protected boolean DSLEST3_IFLAG;
protected boolean DSLEST4_I;
protected boolean DSLEST4_IFLAG;
protected boolean DSLEST5_I;
protected byte DSNUM1;
protected int DVBENEFITANNUAL_I;
protected int DVCOINV1;
protected byte DVECACT;
protected byte DVGRSBAND_I;
protected boolean DVGRSBAND_IFLAG;
protected byte DVMRDF12;
protected byte DVNETBAND_I;
protected boolean DVNETBAND_IFLAG;
protected double DVSHODVAL1;
protected byte FINFVB_I;
protected boolean FINFVB_IFLAG;
protected byte FLOANVB_I;
protected boolean FLOANVB_IFLAG;
protected int FNSVAL;
protected int FNSVAL_I;
protected boolean HASBOND;
protected byte HASCC;
protected boolean HASEMPSH;
protected boolean HASGILT;
protected boolean HASISA;
protected boolean HASLINS;
protected boolean HASNOFA;
protected boolean HASNSP;
protected boolean HASOINV;
protected boolean HASOTHSH;
protected byte HASSC;
protected byte HASSHSAC;
protected boolean HASUTRUST;
protected byte HRPDVECACT;
protected byte IGFVALB_I;
protected boolean IGFVALB_IFLAG;
protected byte ILACB_I;
protected boolean ILACB_IFLAG;
protected byte ILINB_I;
protected boolean ILINB_IFLAG;
protected byte ILOTB_I;
protected boolean ILOTB_IFLAG;
protected byte ILRDB_I;
protected boolean ILRDB_IFLAG;
protected byte ILUPB_I;
protected boolean ILUPB_IFLAG;
protected byte ILWNB_I;
protected boolean ILWNB_IFLAG;
protected byte IVALB1_I;
protected boolean IVALB1_IFLAG;
protected byte IVALB2_I;
protected boolean IVALB2_IFLAG;
protected byte IVALB3_I;
protected boolean IVALB3_IFLAG;
protected byte IWHO1;
protected byte KIDBEN1;
protected byte KIDBEN1_I;
protected byte KIDBEN2;
protected byte KIDBEN2_I;
protected boolean KIDBEN_IFLAG;
protected byte KNOWWPR;
protected byte LIVWTH12;
protected byte LNLFT6;
protected byte LNLFT7;
protected byte LNLFT8;
protected byte LNLFT9;
protected short LNOS6;
protected short LNOS7;
protected byte LNOS8;
protected byte LNOS9;
protected byte MONTHW1;
protected byte MONTHW2;
protected byte MONTHW3;
protected short NWFLNVAL4;
protected byte OTHERBEN1;
protected byte OTHERBEN1_I;
protected byte OTHERBEN2;
protected byte OTHERBEN2_I;
protected boolean OTHERBEN3;
protected byte OTHERBEN3_I;
protected boolean OTHERBEN4;
protected boolean OTHERBEN4_I;
protected boolean OTHERBEN_IFLAG;
protected byte OWHYSAV1;
protected byte OWHYSAV2;
protected byte OWHYSAV3;
protected byte OWHYSAV4;
protected byte OWHYSAV5;
protected byte OWHYSAV6;
protected byte OWHYSAV7;
protected byte OWHYSAV8;
protected byte OWHYSAV9;
protected byte PAVCVB1_I;
protected boolean PAVCVB1_IFLAG;
protected byte PAVCVB2_I;
protected boolean PAVCVB2_IFLAG;
protected byte PBLMVB1_I;
protected boolean PBLMVB1_IFLAG;
protected byte PBLMVB2_I;
protected boolean PBLMVB2_IFLAG;
protected byte PDCVB1_I;
protected boolean PDCVB1_IFLAG;
protected byte PDCVB2_I;
protected boolean PDCVB2_IFLAG;
protected byte PENBEN1;
protected byte PENBEN1_I;
protected byte PENBEN2;
protected byte PENBEN2_I;
protected byte PENBEN3;
protected byte PENBEN3_I;
protected boolean PENBEN_IFLAG;
protected byte PERSONW4;
protected byte PFCUVB1_I;
protected boolean PFCUVB1_IFLAG;
protected byte PFCUVB2_I;
protected boolean PFCUVB2_IFLAG;
protected byte PFCUVB3_I;
protected boolean PFCUVB3_IFLAG;
protected byte PFCUVB4_I;
protected boolean PFCUVB4_IFLAG;
protected byte PFCUVB5_I;
protected boolean PFCUVB5_IFLAG;
protected byte PFCUVB6_I;
protected boolean PFCUVB6_IFLAG;
protected byte PFDDVB1_I;
protected boolean PFDDVB1_IFLAG;
protected byte PFDDVB2_I;
protected boolean PFDDVB2_IFLAG;
protected byte PFDDVB3_I;
protected boolean PFDDVB3_IFLAG;
protected byte PFDDVB4_I;
protected boolean PFDDVB4_IFLAG;
protected boolean PFDDVB5_I;
protected boolean PFDDVB5_IFLAG;
protected boolean PFDDVB6_I;
protected boolean PFDDVB6_IFLAG;
protected byte PFDRAW3;
protected byte PFLMVB1_I;
protected boolean PFLMVB1_IFLAG;
protected byte PFLMVB2_I;
protected boolean PFLMVB2_IFLAG;
protected byte PFLMVB3_I;
protected boolean PFLMVB3_IFLAG;
protected byte PFLMVB4_I;
protected boolean PFLMVB4_IFLAG;
protected byte PFLUVB1_I;
protected boolean PFLUVB1_IFLAG;
protected byte PFLUVB2_I;
protected boolean PFLUVB2_IFLAG;
protected byte PFLUVB3_I;
protected boolean PFLUVB3_IFLAG;
protected byte PFLUVB4_I;
protected boolean PFLUVB4_IFLAG;
protected byte PFLUVB5_I;
protected boolean PFLUVB5_IFLAG;
protected byte PFLUVB6_I;
protected boolean PFLUVB6_IFLAG;
protected byte PMORTC1;
protected int POCNAMT1;
protected short POCNAMT2;
protected byte POLMVB1_I;
protected boolean POLMVB1_IFLAG;
protected byte POLMVB2_I;
protected boolean POLMVB2_IFLAG;
protected byte POPYCH1;
protected byte PORAGE1T;
protected byte PORAGE2T;
protected byte PPCNHOW3;
protected byte PPCONCH1;
protected byte PPDRINCB1;
protected byte PPLMVB1_I;
protected boolean PPLMVB1_IFLAG;
protected byte PPLMVB2_I;
protected boolean PPLMVB2_IFLAG;
protected boolean PPLMVB3_I;
protected boolean PPLMVB3_IFLAG;
protected int PPRGAM1;
protected byte PPVALB1_I;
protected boolean PPVALB1_IFLAG;
protected byte PPVALB2_I;
protected boolean PPVALB2_IFLAG;
protected byte PPVALB3_I;
protected boolean PPVALB3_IFLAG;
protected boolean SAVDEP;
protected double SIC2007;
protected byte SOCFUND1;
protected byte SOCFUND1_I;
protected byte SOCFUND2;
protected byte SOCFUND2_I;
protected boolean SOCFUND3;
protected boolean SOCFUND3_I;
protected boolean SOCFUND4;
protected boolean SOCFUND4_I;
protected boolean SOCFUND_IFLAG;
protected int TADDVL1;
protected boolean UBUYTOL1;
protected byte UBUYTOL10;
protected byte UBUYTOL11;
protected byte UBUYTOL12;
protected boolean UBUYTOL2;
protected boolean UBUYTOL3;
protected boolean UBUYTOL4;
protected boolean UBUYTOL5;
protected boolean UBUYTOL6;
protected byte UBUYTOL7;
protected byte UBUYTOL8;
protected byte UBUYTOL9;
protected byte UDEBTBLU_I;
protected boolean UDEBTBLU_IFLAG;
protected byte UDEBTBL_I;
protected boolean UDEBTBL_IFLAG;
protected byte UDEBTBOR_I;
protected boolean UDEBTBOR_IFLAG;
protected byte UDEBTBOS_I;
protected boolean UDEBTBOS_IFLAG;
protected byte UDEBTBO_I;
protected boolean UDEBTBO_IFLAG;
protected byte UDEBTBS_I;
protected boolean UDEBTBS_IFLAG;
protected boolean UPROP5;
protected boolean UPRTYP1;
protected byte UVALBLU_I;
protected boolean UVALBLU_IFLAG;
protected byte UVALBL_I;
protected boolean UVALBL_IFLAG;
protected byte UVALBOR_I;
protected boolean UVALBOR_IFLAG;
protected byte UVALBOS_I;
protected boolean UVALBOS_IFLAG;
protected byte UVALBO_I;
protected boolean UVALBO_IFLAG;
protected byte UVALBS_I;
protected boolean UVALBS_IFLAG;
protected byte WAGEBEN1;
protected byte WAGEBEN1_I;
protected byte WAGEBEN2;
protected byte WAGEBEN2_I;
protected byte WAGEBEN3;
protected byte WAGEBEN3_I;
protected byte WAGEBEN4;
protected byte WAGEBEN4_I;
protected boolean WAGEBEN5;
protected byte WAGEBEN5_I;
protected boolean WAGEBEN6;
protected boolean WAGEBEN6_I;
protected boolean WAGEBEN_IFLAG;
protected byte WPBTHA1;
protected byte WPBTHA2;
protected byte WPBTHP1;
protected byte WPBTHP2;
protected byte WPERA1;
protected byte WPERA2;
protected byte WPNRA1;
protected byte WPNRA2;
protected short YEARW1;
protected short YEARW2;
protected short YEARW3;
protected final void initADAMT1(String s) {
if (!s.trim().isEmpty()) {
ADAMT1 = Byte.parseByte(s);
} else {
ADAMT1 = Byte.MIN_VALUE;
}
}

protected final void initADAMT2(String s) {
if (!s.trim().isEmpty()) {
ADAMT2 = Byte.parseByte(s);
} else {
ADAMT2 = Byte.MIN_VALUE;
}
}

protected final void initADAMT3(String s) {
if (!s.trim().isEmpty()) {
ADAMT3 = Byte.parseByte(s);
} else {
ADAMT3 = Byte.MIN_VALUE;
}
}

protected final void initADAVAIL1(String s) {
if (!s.trim().isEmpty()) {
ADAVAIL1 = Byte.parseByte(s);
} else {
ADAVAIL1 = Byte.MIN_VALUE;
}
}

protected final void initADAVAIL2(String s) {
if (!s.trim().isEmpty()) {
ADAVAIL2 = Byte.parseByte(s);
} else {
ADAVAIL2 = Byte.MIN_VALUE;
}
}

protected final void initADAVAIL3(String s) {
if (!s.trim().isEmpty()) {
ADAVAIL3 = Byte.parseByte(s);
} else {
ADAVAIL3 = Byte.MIN_VALUE;
}
}

protected final void initADCONS1(String s) {
if (!s.trim().isEmpty()) {
ADCONS1 = Byte.parseByte(s);
} else {
ADCONS1 = Byte.MIN_VALUE;
}
}

protected final void initADCONS2(String s) {
if (!s.trim().isEmpty()) {
ADCONS2 = Byte.parseByte(s);
} else {
ADCONS2 = Byte.MIN_VALUE;
}
}

protected final void initADCONS3(String s) {
if (!s.trim().isEmpty()) {
ADCONS3 = Byte.parseByte(s);
} else {
ADCONS3 = Byte.MIN_VALUE;
}
}

protected final void initADCOST1(String s) {
if (!s.trim().isEmpty()) {
ADCOST1 = Byte.parseByte(s);
} else {
ADCOST1 = Byte.MIN_VALUE;
}
}

protected final void initADCOST2(String s) {
if (!s.trim().isEmpty()) {
ADCOST2 = Byte.parseByte(s);
} else {
ADCOST2 = Byte.MIN_VALUE;
}
}

protected final void initADCOST3(String s) {
if (!s.trim().isEmpty()) {
ADCOST3 = Byte.parseByte(s);
} else {
ADCOST3 = Byte.MIN_VALUE;
}
}

protected final void initADFUR1(String s) {
if (!s.trim().isEmpty()) {
ADFUR1 = Byte.parseByte(s);
} else {
ADFUR1 = Byte.MIN_VALUE;
}
}

protected final void initADFUR2(String s) {
if (!s.trim().isEmpty()) {
ADFUR2 = Byte.parseByte(s);
} else {
ADFUR2 = Byte.MIN_VALUE;
}
}

protected final void initADFUR3(String s) {
if (!s.trim().isEmpty()) {
ADFUR3 = Byte.parseByte(s);
} else {
ADFUR3 = Byte.MIN_VALUE;
}
}

protected final void initADJOINT1(String s) {
if (!s.trim().isEmpty()) {
ADJOINT1 = Byte.parseByte(s);
} else {
ADJOINT1 = Byte.MIN_VALUE;
}
}

protected final void initADJOINT2(String s) {
if (!s.trim().isEmpty()) {
ADJOINT2 = Byte.parseByte(s);
} else {
ADJOINT2 = Byte.MIN_VALUE;
}
}

protected final void initADJOINT3(String s) {
if (!s.trim().isEmpty()) {
ADJOINT3 = Byte.parseByte(s);
} else {
ADJOINT3 = Byte.MIN_VALUE;
}
}

protected final void initADPAY1(String s) {
if (!s.trim().isEmpty()) {
ADPAY1 = Byte.parseByte(s);
} else {
ADPAY1 = Byte.MIN_VALUE;
}
}

protected final void initADPAY2(String s) {
if (!s.trim().isEmpty()) {
ADPAY2 = Byte.parseByte(s);
} else {
ADPAY2 = Byte.MIN_VALUE;
}
}

protected final void initADPAY3(String s) {
if (!s.trim().isEmpty()) {
ADPAY3 = Byte.parseByte(s);
} else {
ADPAY3 = Byte.MIN_VALUE;
}
}

protected final void initADPROD1(String s) {
if (!s.trim().isEmpty()) {
ADPROD1 = Byte.parseByte(s);
} else {
ADPROD1 = Byte.MIN_VALUE;
}
}

protected final void initADPROD2(String s) {
if (!s.trim().isEmpty()) {
ADPROD2 = Byte.parseByte(s);
} else {
ADPROD2 = Byte.MIN_VALUE;
}
}

protected final void initADPROD3(String s) {
if (!s.trim().isEmpty()) {
ADPROD3 = Byte.parseByte(s);
} else {
ADPROD3 = Byte.MIN_VALUE;
}
}

protected final void initADPURCH1(String s) {
if (!s.trim().isEmpty()) {
ADPURCH1 = Byte.parseByte(s);
} else {
ADPURCH1 = Byte.MIN_VALUE;
}
}

protected final void initADPURCH2(String s) {
if (!s.trim().isEmpty()) {
ADPURCH2 = Byte.parseByte(s);
} else {
ADPURCH2 = Byte.MIN_VALUE;
}
}

protected final void initADPURCH3(String s) {
if (!s.trim().isEmpty()) {
ADPURCH3 = Byte.parseByte(s);
} else {
ADPURCH3 = Byte.MIN_VALUE;
}
}

protected final void initADRECORD1(String s) {
if (!s.trim().isEmpty()) {
ADRECORD1 = Byte.parseByte(s);
} else {
ADRECORD1 = Byte.MIN_VALUE;
}
}

protected final void initADRECORD2(String s) {
if (!s.trim().isEmpty()) {
ADRECORD2 = Byte.parseByte(s);
} else {
ADRECORD2 = Byte.MIN_VALUE;
}
}

protected final void initADRECORD3(String s) {
if (!s.trim().isEmpty()) {
ADRECORD3 = Byte.parseByte(s);
} else {
ADRECORD3 = Byte.MIN_VALUE;
}
}

protected final void initADSAT1(String s) {
if (!s.trim().isEmpty()) {
ADSAT1 = Byte.parseByte(s);
} else {
ADSAT1 = Byte.MIN_VALUE;
}
}

protected final void initADSAT2(String s) {
if (!s.trim().isEmpty()) {
ADSAT2 = Byte.parseByte(s);
} else {
ADSAT2 = Byte.MIN_VALUE;
}
}

protected final void initADSAT3(String s) {
if (!s.trim().isEmpty()) {
ADSAT3 = Byte.parseByte(s);
} else {
ADSAT3 = Byte.MIN_VALUE;
}
}

protected final void initADSATREFLECT1(String s) {
if (!s.trim().isEmpty()) {
ADSATREFLECT1 = Byte.parseByte(s);
} else {
ADSATREFLECT1 = Byte.MIN_VALUE;
}
}

protected final void initADSATREFLECT2(String s) {
if (!s.trim().isEmpty()) {
ADSATREFLECT2 = Byte.parseByte(s);
} else {
ADSATREFLECT2 = Byte.MIN_VALUE;
}
}

protected final void initADSATREFLECT3(String s) {
if (!s.trim().isEmpty()) {
ADSATREFLECT3 = Byte.parseByte(s);
} else {
ADSATREFLECT3 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV1(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV1 = Byte.parseByte(s);
} else {
ADSAVINV1 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV10(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV10 = Byte.parseByte(s);
} else {
ADSAVINV10 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV11(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV11 = Byte.parseByte(s);
} else {
ADSAVINV11 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV12(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV12 = Byte.parseByte(s);
} else {
ADSAVINV12 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV13(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV13 = Byte.parseByte(s);
} else {
ADSAVINV13 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV14(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV14 = Byte.parseByte(s);
} else {
ADSAVINV14 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV15(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV15 = Byte.parseByte(s);
} else {
ADSAVINV15 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV19(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV19 = Byte.parseByte(s);
} else {
ADSAVINV19 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV2(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV2 = Byte.parseByte(s);
} else {
ADSAVINV2 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV20(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV20 = Byte.parseByte(s);
} else {
ADSAVINV20 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV21(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV21 = Byte.parseByte(s);
} else {
ADSAVINV21 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV3(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV3 = Byte.parseByte(s);
} else {
ADSAVINV3 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV4(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV4 = Byte.parseByte(s);
} else {
ADSAVINV4 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV5(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV5 = Byte.parseByte(s);
} else {
ADSAVINV5 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ADSAVINV6 = false;
}
}

protected final void initADSAVINV7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ADSAVINV7 = false;
}
}

protected final void initADSAVINV8(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV8 = Byte.parseByte(s);
} else {
ADSAVINV8 = Byte.MIN_VALUE;
}
}

protected final void initADSAVINV9(String s) {
if (!s.trim().isEmpty()) {
ADSAVINV9 = Byte.parseByte(s);
} else {
ADSAVINV9 = Byte.MIN_VALUE;
}
}

protected final void initADTYP1(String s) {
if (!s.trim().isEmpty()) {
ADTYP1 = Byte.parseByte(s);
} else {
ADTYP1 = Byte.MIN_VALUE;
}
}

protected final void initADTYP2(String s) {
if (!s.trim().isEmpty()) {
ADTYP2 = Byte.parseByte(s);
} else {
ADTYP2 = Byte.MIN_VALUE;
}
}

protected final void initADTYP3(String s) {
if (!s.trim().isEmpty()) {
ADTYP3 = Byte.parseByte(s);
} else {
ADTYP3 = Byte.MIN_VALUE;
}
}

protected final void initADVICE(String s) {
if (!s.trim().isEmpty()) {
ADVICE = Byte.parseByte(s);
} else {
ADVICE = Byte.MIN_VALUE;
}
}

protected final void initADVNUMALL(String s) {
if (!s.trim().isEmpty()) {
ADVNUMALL = Byte.parseByte(s);
} else {
ADVNUMALL = Byte.MIN_VALUE;
}
}

protected final void initADVREAS1(String s) {
if (!s.trim().isEmpty()) {
ADVREAS1 = Byte.parseByte(s);
} else {
ADVREAS1 = Byte.MIN_VALUE;
}
}

protected final void initADVREAS2(String s) {
if (!s.trim().isEmpty()) {
ADVREAS2 = Byte.parseByte(s);
} else {
ADVREAS2 = Byte.MIN_VALUE;
}
}

protected final void initADVREAS3(String s) {
if (!s.trim().isEmpty()) {
ADVREAS3 = Byte.parseByte(s);
} else {
ADVREAS3 = Byte.MIN_VALUE;
}
}

protected final void initADWHO01(String s) {
if (!s.trim().isEmpty()) {
ADWHO01 = Byte.parseByte(s);
} else {
ADWHO01 = Byte.MIN_VALUE;
}
}

protected final void initADWHO02(String s) {
if (!s.trim().isEmpty()) {
ADWHO02 = Byte.parseByte(s);
} else {
ADWHO02 = Byte.MIN_VALUE;
}
}

protected final void initADWHO15(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ADWHO15 = false;
}
}

protected final void initADWHO16(String s) {
if (!s.trim().isEmpty()) {
ADWHO16 = Byte.parseByte(s);
} else {
ADWHO16 = Byte.MIN_VALUE;
}
}

protected final void initADWHO17(String s) {
if (!s.trim().isEmpty()) {
ADWHO17 = Byte.parseByte(s);
} else {
ADWHO17 = Byte.MIN_VALUE;
}
}

protected final void initADWHO31(String s) {
if (!s.trim().isEmpty()) {
ADWHO31 = Byte.parseByte(s);
} else {
ADWHO31 = Byte.MIN_VALUE;
}
}

protected final void initADWHO32(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ADWHO32 = false;
}
}

protected final void initAGEASAF(String s) {
if (!s.trim().isEmpty()) {
AGEASAF = Double.parseDouble(s);
} else {
AGEASAF = Double.NaN;
}
}

protected final void initANNUITY1(String s) {
if (!s.trim().isEmpty()) {
ANNUITY1 = Double.parseDouble(s);
} else {
ANNUITY1 = Double.NaN;
}
}

protected final void initANNUITY2(String s) {
if (!s.trim().isEmpty()) {
ANNUITY2 = Double.parseDouble(s);
} else {
ANNUITY2 = Double.NaN;
}
}

protected final void initANYOTHERB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ANYOTHERB_IFLAG = false;
}
}

protected final void initBENINTRO(String s) {
if (!s.trim().isEmpty()) {
BENINTRO = Byte.parseByte(s);
} else {
BENINTRO = Byte.MIN_VALUE;
}
}

protected final void initCACTVB_I(String s) {
if (!s.trim().isEmpty()) {
CACTVB_I = Byte.parseByte(s);
} else {
CACTVB_I = Byte.MIN_VALUE;
}
}

protected final void initCACTVB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
CACTVB_IFLAG = false;
}
}

protected final void initCAJISA(String s) {
if (!s.trim().isEmpty()) {
CAJISA = Byte.parseByte(s);
} else {
CAJISA = Byte.MIN_VALUE;
}
}

protected final void initCASEW4(String s) {
if (!s.trim().isEmpty()) {
CASEW4 = Short.parseShort(s);
} else {
CASEW4 = Short.MIN_VALUE;
}
}

protected final void initCASVB_I(String s) {
if (!s.trim().isEmpty()) {
CASVB_I = Byte.parseByte(s);
} else {
CASVB_I = Byte.MIN_VALUE;
}
}

protected final void initCASVB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
CASVB_IFLAG = false;
}
}

protected final void initCATYPE1(String s) {
if (!s.trim().isEmpty()) {
CATYPE1 = Byte.parseByte(s);
} else {
CATYPE1 = Byte.MIN_VALUE;
}
}

protected final void initCATYPE2(String s) {
if (!s.trim().isEmpty()) {
CATYPE2 = Byte.parseByte(s);
} else {
CATYPE2 = Byte.MIN_VALUE;
}
}

protected final void initDBURDW3(String s) {
if (!s.trim().isEmpty()) {
DBURDW3 = Byte.parseByte(s);
} else {
DBURDW3 = Byte.MIN_VALUE;
}
}

protected final void initDCARRCL01(String s) {
if (!s.trim().isEmpty()) {
DCARRCL01 = Byte.parseByte(s);
} else {
DCARRCL01 = Byte.MIN_VALUE;
}
}

protected final void initDCARRCL02(String s) {
if (!s.trim().isEmpty()) {
DCARRCL02 = Byte.parseByte(s);
} else {
DCARRCL02 = Byte.MIN_VALUE;
}
}

protected final void initDCARRCL03(String s) {
if (!s.trim().isEmpty()) {
DCARRCL03 = Byte.parseByte(s);
} else {
DCARRCL03 = Byte.MIN_VALUE;
}
}

protected final void initDCARRCL04(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DCARRCL04 = false;
}
}

protected final void initDCBE2YR1(String s) {
if (!s.trim().isEmpty()) {
DCBE2YR1 = Byte.parseByte(s);
} else {
DCBE2YR1 = Byte.MIN_VALUE;
}
}

protected final void initDCBE2YR2(String s) {
if (!s.trim().isEmpty()) {
DCBE2YR2 = Byte.parseByte(s);
} else {
DCBE2YR2 = Byte.MIN_VALUE;
}
}

protected final void initDCBE2YR3(String s) {
if (!s.trim().isEmpty()) {
DCBE2YR3 = Byte.parseByte(s);
} else {
DCBE2YR3 = Byte.MIN_VALUE;
}
}

protected final void initDHBEST01_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST01_I = Byte.parseByte(s);
} else {
DHBEST01_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST01_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST01_IFLAG = false;
}
}

protected final void initDHBEST02_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST02_I = Byte.parseByte(s);
} else {
DHBEST02_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST02_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST02_IFLAG = false;
}
}

protected final void initDHBEST03_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST03_I = Byte.parseByte(s);
} else {
DHBEST03_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST03_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST03_IFLAG = false;
}
}

protected final void initDHBEST04_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST04_I = Byte.parseByte(s);
} else {
DHBEST04_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST04_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST04_IFLAG = false;
}
}

protected final void initDHBEST05_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST05_I = Byte.parseByte(s);
} else {
DHBEST05_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST05_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST05_IFLAG = false;
}
}

protected final void initDHBEST06_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST06_I = Byte.parseByte(s);
} else {
DHBEST06_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST06_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST06_IFLAG = false;
}
}

protected final void initDHBEST07_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST07_I = Byte.parseByte(s);
} else {
DHBEST07_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST07_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST07_IFLAG = false;
}
}

protected final void initDHBEST08_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST08_I = Byte.parseByte(s);
} else {
DHBEST08_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST08_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST08_IFLAG = false;
}
}

protected final void initDHBEST09_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST09_I = Byte.parseByte(s);
} else {
DHBEST09_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST09_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST09_IFLAG = false;
}
}

protected final void initDHBEST10_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST10_I = Byte.parseByte(s);
} else {
DHBEST10_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST10_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST10_IFLAG = false;
}
}

protected final void initDHBEST11_I(String s) {
if (!s.trim().isEmpty()) {
DHBEST11_I = Byte.parseByte(s);
} else {
DHBEST11_I = Byte.MIN_VALUE;
}
}

protected final void initDHBEST11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DHBEST11_IFLAG = false;
}
}

protected final void initDISBEN1(String s) {
if (!s.trim().isEmpty()) {
DISBEN1 = Byte.parseByte(s);
} else {
DISBEN1 = Byte.MIN_VALUE;
}
}

protected final void initDISBEN1_I(String s) {
if (!s.trim().isEmpty()) {
DISBEN1_I = Byte.parseByte(s);
} else {
DISBEN1_I = Byte.MIN_VALUE;
}
}

protected final void initDISBEN2(String s) {
if (!s.trim().isEmpty()) {
DISBEN2 = Byte.parseByte(s);
} else {
DISBEN2 = Byte.MIN_VALUE;
}
}

protected final void initDISBEN2_I(String s) {
if (!s.trim().isEmpty()) {
DISBEN2_I = Byte.parseByte(s);
} else {
DISBEN2_I = Byte.MIN_VALUE;
}
}

protected final void initDISBEN3(String s) {
if (!s.trim().isEmpty()) {
DISBEN3 = Byte.parseByte(s);
} else {
DISBEN3 = Byte.MIN_VALUE;
}
}

protected final void initDISBEN3_I(String s) {
if (!s.trim().isEmpty()) {
DISBEN3_I = Byte.parseByte(s);
} else {
DISBEN3_I = Byte.MIN_VALUE;
}
}

protected final void initDISBEN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DISBEN_IFLAG = false;
}
}

protected final void initDLEST1_I(String s) {
if (!s.trim().isEmpty()) {
DLEST1_I = Byte.parseByte(s);
} else {
DLEST1_I = Byte.MIN_VALUE;
}
}

protected final void initDLEST1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DLEST1_IFLAG = false;
}
}

protected final void initDLEST2_I(String s) {
if (!s.trim().isEmpty()) {
DLEST2_I = Byte.parseByte(s);
} else {
DLEST2_I = Byte.MIN_VALUE;
}
}

protected final void initDLEST2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DLEST2_IFLAG = false;
}
}

protected final void initDLEST3_I(String s) {
if (!s.trim().isEmpty()) {
DLEST3_I = Byte.parseByte(s);
} else {
DLEST3_I = Byte.MIN_VALUE;
}
}

protected final void initDLEST3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DLEST3_IFLAG = false;
}
}

protected final void initDLEST4_I(String s) {
if (!s.trim().isEmpty()) {
DLEST4_I = Byte.parseByte(s);
} else {
DLEST4_I = Byte.MIN_VALUE;
}
}

protected final void initDLEST4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DLEST4_IFLAG = false;
}
}

protected final void initDLEST5_I(String s) {
if (!s.trim().isEmpty()) {
DLEST5_I = Byte.parseByte(s);
} else {
DLEST5_I = Byte.MIN_VALUE;
}
}

protected final void initDLEST5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DLEST5_IFLAG = false;
}
}

protected final void initDSLEST1_I(String s) {
if (!s.trim().isEmpty()) {
DSLEST1_I = Byte.parseByte(s);
} else {
DSLEST1_I = Byte.MIN_VALUE;
}
}

protected final void initDSLEST1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DSLEST1_IFLAG = false;
}
}

protected final void initDSLEST2_I(String s) {
if (!s.trim().isEmpty()) {
DSLEST2_I = Byte.parseByte(s);
} else {
DSLEST2_I = Byte.MIN_VALUE;
}
}

protected final void initDSLEST2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DSLEST2_IFLAG = false;
}
}

protected final void initDSLEST3_I(String s) {
if (!s.trim().isEmpty()) {
DSLEST3_I = Byte.parseByte(s);
} else {
DSLEST3_I = Byte.MIN_VALUE;
}
}

protected final void initDSLEST3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DSLEST3_IFLAG = false;
}
}

protected final void initDSLEST4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DSLEST4_I = false;
}
}

protected final void initDSLEST4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DSLEST4_IFLAG = false;
}
}

protected final void initDSLEST5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DSLEST5_I = false;
}
}

protected final void initDSNUM1(String s) {
if (!s.trim().isEmpty()) {
DSNUM1 = Byte.parseByte(s);
} else {
DSNUM1 = Byte.MIN_VALUE;
}
}

protected final void initDVBENEFITANNUAL_I(String s) {
if (!s.trim().isEmpty()) {
DVBENEFITANNUAL_I = Integer.parseInt(s);
} else {
DVBENEFITANNUAL_I = Integer.MIN_VALUE;
}
}

protected final void initDVCOINV1(String s) {
if (!s.trim().isEmpty()) {
DVCOINV1 = Integer.parseInt(s);
} else {
DVCOINV1 = Integer.MIN_VALUE;
}
}

protected final void initDVECACT(String s) {
if (!s.trim().isEmpty()) {
DVECACT = Byte.parseByte(s);
} else {
DVECACT = Byte.MIN_VALUE;
}
}

protected final void initDVGRSBAND_I(String s) {
if (!s.trim().isEmpty()) {
DVGRSBAND_I = Byte.parseByte(s);
} else {
DVGRSBAND_I = Byte.MIN_VALUE;
}
}

protected final void initDVGRSBAND_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DVGRSBAND_IFLAG = false;
}
}

protected final void initDVMRDF12(String s) {
if (!s.trim().isEmpty()) {
DVMRDF12 = Byte.parseByte(s);
} else {
DVMRDF12 = Byte.MIN_VALUE;
}
}

protected final void initDVNETBAND_I(String s) {
if (!s.trim().isEmpty()) {
DVNETBAND_I = Byte.parseByte(s);
} else {
DVNETBAND_I = Byte.MIN_VALUE;
}
}

protected final void initDVNETBAND_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
DVNETBAND_IFLAG = false;
}
}

protected final void initDVSHODVAL1(String s) {
if (!s.trim().isEmpty()) {
DVSHODVAL1 = Double.parseDouble(s);
} else {
DVSHODVAL1 = Double.NaN;
}
}

protected final void initFINFVB_I(String s) {
if (!s.trim().isEmpty()) {
FINFVB_I = Byte.parseByte(s);
} else {
FINFVB_I = Byte.MIN_VALUE;
}
}

protected final void initFINFVB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
FINFVB_IFLAG = false;
}
}

protected final void initFLOANVB_I(String s) {
if (!s.trim().isEmpty()) {
FLOANVB_I = Byte.parseByte(s);
} else {
FLOANVB_I = Byte.MIN_VALUE;
}
}

protected final void initFLOANVB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
FLOANVB_IFLAG = false;
}
}

protected final void initFNSVAL(String s) {
if (!s.trim().isEmpty()) {
FNSVAL = Integer.parseInt(s);
} else {
FNSVAL = Integer.MIN_VALUE;
}
}

protected final void initFNSVAL_I(String s) {
if (!s.trim().isEmpty()) {
FNSVAL_I = Integer.parseInt(s);
} else {
FNSVAL_I = Integer.MIN_VALUE;
}
}

protected final void initHASBOND(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASBOND = false;
}
}

protected final void initHASCC(String s) {
if (!s.trim().isEmpty()) {
HASCC = Byte.parseByte(s);
} else {
HASCC = Byte.MIN_VALUE;
}
}

protected final void initHASEMPSH(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASEMPSH = false;
}
}

protected final void initHASGILT(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASGILT = false;
}
}

protected final void initHASISA(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASISA = false;
}
}

protected final void initHASLINS(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASLINS = false;
}
}

protected final void initHASNOFA(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASNOFA = false;
}
}

protected final void initHASNSP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASNSP = false;
}
}

protected final void initHASOINV(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASOINV = false;
}
}

protected final void initHASOTHSH(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASOTHSH = false;
}
}

protected final void initHASSC(String s) {
if (!s.trim().isEmpty()) {
HASSC = Byte.parseByte(s);
} else {
HASSC = Byte.MIN_VALUE;
}
}

protected final void initHASSHSAC(String s) {
if (!s.trim().isEmpty()) {
HASSHSAC = Byte.parseByte(s);
} else {
HASSHSAC = Byte.MIN_VALUE;
}
}

protected final void initHASUTRUST(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
HASUTRUST = false;
}
}

protected final void initHRPDVECACT(String s) {
if (!s.trim().isEmpty()) {
HRPDVECACT = Byte.parseByte(s);
} else {
HRPDVECACT = Byte.MIN_VALUE;
}
}

protected final void initIGFVALB_I(String s) {
if (!s.trim().isEmpty()) {
IGFVALB_I = Byte.parseByte(s);
} else {
IGFVALB_I = Byte.MIN_VALUE;
}
}

protected final void initIGFVALB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
IGFVALB_IFLAG = false;
}
}

protected final void initILACB_I(String s) {
if (!s.trim().isEmpty()) {
ILACB_I = Byte.parseByte(s);
} else {
ILACB_I = Byte.MIN_VALUE;
}
}

protected final void initILACB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ILACB_IFLAG = false;
}
}

protected final void initILINB_I(String s) {
if (!s.trim().isEmpty()) {
ILINB_I = Byte.parseByte(s);
} else {
ILINB_I = Byte.MIN_VALUE;
}
}

protected final void initILINB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ILINB_IFLAG = false;
}
}

protected final void initILOTB_I(String s) {
if (!s.trim().isEmpty()) {
ILOTB_I = Byte.parseByte(s);
} else {
ILOTB_I = Byte.MIN_VALUE;
}
}

protected final void initILOTB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ILOTB_IFLAG = false;
}
}

protected final void initILRDB_I(String s) {
if (!s.trim().isEmpty()) {
ILRDB_I = Byte.parseByte(s);
} else {
ILRDB_I = Byte.MIN_VALUE;
}
}

protected final void initILRDB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ILRDB_IFLAG = false;
}
}

protected final void initILUPB_I(String s) {
if (!s.trim().isEmpty()) {
ILUPB_I = Byte.parseByte(s);
} else {
ILUPB_I = Byte.MIN_VALUE;
}
}

protected final void initILUPB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ILUPB_IFLAG = false;
}
}

protected final void initILWNB_I(String s) {
if (!s.trim().isEmpty()) {
ILWNB_I = Byte.parseByte(s);
} else {
ILWNB_I = Byte.MIN_VALUE;
}
}

protected final void initILWNB_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
ILWNB_IFLAG = false;
}
}

protected final void initIVALB1_I(String s) {
if (!s.trim().isEmpty()) {
IVALB1_I = Byte.parseByte(s);
} else {
IVALB1_I = Byte.MIN_VALUE;
}
}

protected final void initIVALB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
IVALB1_IFLAG = false;
}
}

protected final void initIVALB2_I(String s) {
if (!s.trim().isEmpty()) {
IVALB2_I = Byte.parseByte(s);
} else {
IVALB2_I = Byte.MIN_VALUE;
}
}

protected final void initIVALB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
IVALB2_IFLAG = false;
}
}

protected final void initIVALB3_I(String s) {
if (!s.trim().isEmpty()) {
IVALB3_I = Byte.parseByte(s);
} else {
IVALB3_I = Byte.MIN_VALUE;
}
}

protected final void initIVALB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
IVALB3_IFLAG = false;
}
}

protected final void initIWHO1(String s) {
if (!s.trim().isEmpty()) {
IWHO1 = Byte.parseByte(s);
} else {
IWHO1 = Byte.MIN_VALUE;
}
}

protected final void initKIDBEN1(String s) {
if (!s.trim().isEmpty()) {
KIDBEN1 = Byte.parseByte(s);
} else {
KIDBEN1 = Byte.MIN_VALUE;
}
}

protected final void initKIDBEN1_I(String s) {
if (!s.trim().isEmpty()) {
KIDBEN1_I = Byte.parseByte(s);
} else {
KIDBEN1_I = Byte.MIN_VALUE;
}
}

protected final void initKIDBEN2(String s) {
if (!s.trim().isEmpty()) {
KIDBEN2 = Byte.parseByte(s);
} else {
KIDBEN2 = Byte.MIN_VALUE;
}
}

protected final void initKIDBEN2_I(String s) {
if (!s.trim().isEmpty()) {
KIDBEN2_I = Byte.parseByte(s);
} else {
KIDBEN2_I = Byte.MIN_VALUE;
}
}

protected final void initKIDBEN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
KIDBEN_IFLAG = false;
}
}

protected final void initKNOWWPR(String s) {
if (!s.trim().isEmpty()) {
KNOWWPR = Byte.parseByte(s);
} else {
KNOWWPR = Byte.MIN_VALUE;
}
}

protected final void initLIVWTH12(String s) {
if (!s.trim().isEmpty()) {
LIVWTH12 = Byte.parseByte(s);
} else {
LIVWTH12 = Byte.MIN_VALUE;
}
}

protected final void initLNLFT6(String s) {
if (!s.trim().isEmpty()) {
LNLFT6 = Byte.parseByte(s);
} else {
LNLFT6 = Byte.MIN_VALUE;
}
}

protected final void initLNLFT7(String s) {
if (!s.trim().isEmpty()) {
LNLFT7 = Byte.parseByte(s);
} else {
LNLFT7 = Byte.MIN_VALUE;
}
}

protected final void initLNLFT8(String s) {
if (!s.trim().isEmpty()) {
LNLFT8 = Byte.parseByte(s);
} else {
LNLFT8 = Byte.MIN_VALUE;
}
}

protected final void initLNLFT9(String s) {
if (!s.trim().isEmpty()) {
LNLFT9 = Byte.parseByte(s);
} else {
LNLFT9 = Byte.MIN_VALUE;
}
}

protected final void initLNOS6(String s) {
if (!s.trim().isEmpty()) {
LNOS6 = Short.parseShort(s);
} else {
LNOS6 = Short.MIN_VALUE;
}
}

protected final void initLNOS7(String s) {
if (!s.trim().isEmpty()) {
LNOS7 = Short.parseShort(s);
} else {
LNOS7 = Short.MIN_VALUE;
}
}

protected final void initLNOS8(String s) {
if (!s.trim().isEmpty()) {
LNOS8 = Byte.parseByte(s);
} else {
LNOS8 = Byte.MIN_VALUE;
}
}

protected final void initLNOS9(String s) {
if (!s.trim().isEmpty()) {
LNOS9 = Byte.parseByte(s);
} else {
LNOS9 = Byte.MIN_VALUE;
}
}

protected final void initMONTHW1(String s) {
if (!s.trim().isEmpty()) {
MONTHW1 = Byte.parseByte(s);
} else {
MONTHW1 = Byte.MIN_VALUE;
}
}

protected final void initMONTHW2(String s) {
if (!s.trim().isEmpty()) {
MONTHW2 = Byte.parseByte(s);
} else {
MONTHW2 = Byte.MIN_VALUE;
}
}

protected final void initMONTHW3(String s) {
if (!s.trim().isEmpty()) {
MONTHW3 = Byte.parseByte(s);
} else {
MONTHW3 = Byte.MIN_VALUE;
}
}

protected final void initNWFLNVAL4(String s) {
if (!s.trim().isEmpty()) {
NWFLNVAL4 = Short.parseShort(s);
} else {
NWFLNVAL4 = Short.MIN_VALUE;
}
}

protected final void initOTHERBEN1(String s) {
if (!s.trim().isEmpty()) {
OTHERBEN1 = Byte.parseByte(s);
} else {
OTHERBEN1 = Byte.MIN_VALUE;
}
}

protected final void initOTHERBEN1_I(String s) {
if (!s.trim().isEmpty()) {
OTHERBEN1_I = Byte.parseByte(s);
} else {
OTHERBEN1_I = Byte.MIN_VALUE;
}
}

protected final void initOTHERBEN2(String s) {
if (!s.trim().isEmpty()) {
OTHERBEN2 = Byte.parseByte(s);
} else {
OTHERBEN2 = Byte.MIN_VALUE;
}
}

protected final void initOTHERBEN2_I(String s) {
if (!s.trim().isEmpty()) {
OTHERBEN2_I = Byte.parseByte(s);
} else {
OTHERBEN2_I = Byte.MIN_VALUE;
}
}

protected final void initOTHERBEN3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
OTHERBEN3 = false;
}
}

protected final void initOTHERBEN3_I(String s) {
if (!s.trim().isEmpty()) {
OTHERBEN3_I = Byte.parseByte(s);
} else {
OTHERBEN3_I = Byte.MIN_VALUE;
}
}

protected final void initOTHERBEN4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
OTHERBEN4 = false;
}
}

protected final void initOTHERBEN4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
OTHERBEN4_I = false;
}
}

protected final void initOTHERBEN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
OTHERBEN_IFLAG = false;
}
}

protected final void initOWHYSAV1(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV1 = Byte.parseByte(s);
} else {
OWHYSAV1 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV2(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV2 = Byte.parseByte(s);
} else {
OWHYSAV2 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV3(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV3 = Byte.parseByte(s);
} else {
OWHYSAV3 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV4(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV4 = Byte.parseByte(s);
} else {
OWHYSAV4 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV5(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV5 = Byte.parseByte(s);
} else {
OWHYSAV5 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV6(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV6 = Byte.parseByte(s);
} else {
OWHYSAV6 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV7(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV7 = Byte.parseByte(s);
} else {
OWHYSAV7 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV8(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV8 = Byte.parseByte(s);
} else {
OWHYSAV8 = Byte.MIN_VALUE;
}
}

protected final void initOWHYSAV9(String s) {
if (!s.trim().isEmpty()) {
OWHYSAV9 = Byte.parseByte(s);
} else {
OWHYSAV9 = Byte.MIN_VALUE;
}
}

protected final void initPAVCVB1_I(String s) {
if (!s.trim().isEmpty()) {
PAVCVB1_I = Byte.parseByte(s);
} else {
PAVCVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPAVCVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PAVCVB1_IFLAG = false;
}
}

protected final void initPAVCVB2_I(String s) {
if (!s.trim().isEmpty()) {
PAVCVB2_I = Byte.parseByte(s);
} else {
PAVCVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPAVCVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PAVCVB2_IFLAG = false;
}
}

protected final void initPBLMVB1_I(String s) {
if (!s.trim().isEmpty()) {
PBLMVB1_I = Byte.parseByte(s);
} else {
PBLMVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPBLMVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PBLMVB1_IFLAG = false;
}
}

protected final void initPBLMVB2_I(String s) {
if (!s.trim().isEmpty()) {
PBLMVB2_I = Byte.parseByte(s);
} else {
PBLMVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPBLMVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PBLMVB2_IFLAG = false;
}
}

protected final void initPDCVB1_I(String s) {
if (!s.trim().isEmpty()) {
PDCVB1_I = Byte.parseByte(s);
} else {
PDCVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPDCVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PDCVB1_IFLAG = false;
}
}

protected final void initPDCVB2_I(String s) {
if (!s.trim().isEmpty()) {
PDCVB2_I = Byte.parseByte(s);
} else {
PDCVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPDCVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PDCVB2_IFLAG = false;
}
}

protected final void initPENBEN1(String s) {
if (!s.trim().isEmpty()) {
PENBEN1 = Byte.parseByte(s);
} else {
PENBEN1 = Byte.MIN_VALUE;
}
}

protected final void initPENBEN1_I(String s) {
if (!s.trim().isEmpty()) {
PENBEN1_I = Byte.parseByte(s);
} else {
PENBEN1_I = Byte.MIN_VALUE;
}
}

protected final void initPENBEN2(String s) {
if (!s.trim().isEmpty()) {
PENBEN2 = Byte.parseByte(s);
} else {
PENBEN2 = Byte.MIN_VALUE;
}
}

protected final void initPENBEN2_I(String s) {
if (!s.trim().isEmpty()) {
PENBEN2_I = Byte.parseByte(s);
} else {
PENBEN2_I = Byte.MIN_VALUE;
}
}

protected final void initPENBEN3(String s) {
if (!s.trim().isEmpty()) {
PENBEN3 = Byte.parseByte(s);
} else {
PENBEN3 = Byte.MIN_VALUE;
}
}

protected final void initPENBEN3_I(String s) {
if (!s.trim().isEmpty()) {
PENBEN3_I = Byte.parseByte(s);
} else {
PENBEN3_I = Byte.MIN_VALUE;
}
}

protected final void initPENBEN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PENBEN_IFLAG = false;
}
}

protected final void initPERSONW4(String s) {
if (!s.trim().isEmpty()) {
PERSONW4 = Byte.parseByte(s);
} else {
PERSONW4 = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB1_I(String s) {
if (!s.trim().isEmpty()) {
PFCUVB1_I = Byte.parseByte(s);
} else {
PFCUVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFCUVB1_IFLAG = false;
}
}

protected final void initPFCUVB2_I(String s) {
if (!s.trim().isEmpty()) {
PFCUVB2_I = Byte.parseByte(s);
} else {
PFCUVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFCUVB2_IFLAG = false;
}
}

protected final void initPFCUVB3_I(String s) {
if (!s.trim().isEmpty()) {
PFCUVB3_I = Byte.parseByte(s);
} else {
PFCUVB3_I = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFCUVB3_IFLAG = false;
}
}

protected final void initPFCUVB4_I(String s) {
if (!s.trim().isEmpty()) {
PFCUVB4_I = Byte.parseByte(s);
} else {
PFCUVB4_I = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFCUVB4_IFLAG = false;
}
}

protected final void initPFCUVB5_I(String s) {
if (!s.trim().isEmpty()) {
PFCUVB5_I = Byte.parseByte(s);
} else {
PFCUVB5_I = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFCUVB5_IFLAG = false;
}
}

protected final void initPFCUVB6_I(String s) {
if (!s.trim().isEmpty()) {
PFCUVB6_I = Byte.parseByte(s);
} else {
PFCUVB6_I = Byte.MIN_VALUE;
}
}

protected final void initPFCUVB6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFCUVB6_IFLAG = false;
}
}

protected final void initPFDDVB1_I(String s) {
if (!s.trim().isEmpty()) {
PFDDVB1_I = Byte.parseByte(s);
} else {
PFDDVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPFDDVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB1_IFLAG = false;
}
}

protected final void initPFDDVB2_I(String s) {
if (!s.trim().isEmpty()) {
PFDDVB2_I = Byte.parseByte(s);
} else {
PFDDVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPFDDVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB2_IFLAG = false;
}
}

protected final void initPFDDVB3_I(String s) {
if (!s.trim().isEmpty()) {
PFDDVB3_I = Byte.parseByte(s);
} else {
PFDDVB3_I = Byte.MIN_VALUE;
}
}

protected final void initPFDDVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB3_IFLAG = false;
}
}

protected final void initPFDDVB4_I(String s) {
if (!s.trim().isEmpty()) {
PFDDVB4_I = Byte.parseByte(s);
} else {
PFDDVB4_I = Byte.MIN_VALUE;
}
}

protected final void initPFDDVB4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB4_IFLAG = false;
}
}

protected final void initPFDDVB5_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB5_I = false;
}
}

protected final void initPFDDVB5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB5_IFLAG = false;
}
}

protected final void initPFDDVB6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB6_I = false;
}
}

protected final void initPFDDVB6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFDDVB6_IFLAG = false;
}
}

protected final void initPFDRAW3(String s) {
if (!s.trim().isEmpty()) {
PFDRAW3 = Byte.parseByte(s);
} else {
PFDRAW3 = Byte.MIN_VALUE;
}
}

protected final void initPFLMVB1_I(String s) {
if (!s.trim().isEmpty()) {
PFLMVB1_I = Byte.parseByte(s);
} else {
PFLMVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPFLMVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLMVB1_IFLAG = false;
}
}

protected final void initPFLMVB2_I(String s) {
if (!s.trim().isEmpty()) {
PFLMVB2_I = Byte.parseByte(s);
} else {
PFLMVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPFLMVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLMVB2_IFLAG = false;
}
}

protected final void initPFLMVB3_I(String s) {
if (!s.trim().isEmpty()) {
PFLMVB3_I = Byte.parseByte(s);
} else {
PFLMVB3_I = Byte.MIN_VALUE;
}
}

protected final void initPFLMVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLMVB3_IFLAG = false;
}
}

protected final void initPFLMVB4_I(String s) {
if (!s.trim().isEmpty()) {
PFLMVB4_I = Byte.parseByte(s);
} else {
PFLMVB4_I = Byte.MIN_VALUE;
}
}

protected final void initPFLMVB4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLMVB4_IFLAG = false;
}
}

protected final void initPFLUVB1_I(String s) {
if (!s.trim().isEmpty()) {
PFLUVB1_I = Byte.parseByte(s);
} else {
PFLUVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPFLUVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLUVB1_IFLAG = false;
}
}

protected final void initPFLUVB2_I(String s) {
if (!s.trim().isEmpty()) {
PFLUVB2_I = Byte.parseByte(s);
} else {
PFLUVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPFLUVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLUVB2_IFLAG = false;
}
}

protected final void initPFLUVB3_I(String s) {
if (!s.trim().isEmpty()) {
PFLUVB3_I = Byte.parseByte(s);
} else {
PFLUVB3_I = Byte.MIN_VALUE;
}
}

protected final void initPFLUVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLUVB3_IFLAG = false;
}
}

protected final void initPFLUVB4_I(String s) {
if (!s.trim().isEmpty()) {
PFLUVB4_I = Byte.parseByte(s);
} else {
PFLUVB4_I = Byte.MIN_VALUE;
}
}

protected final void initPFLUVB4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLUVB4_IFLAG = false;
}
}

protected final void initPFLUVB5_I(String s) {
if (!s.trim().isEmpty()) {
PFLUVB5_I = Byte.parseByte(s);
} else {
PFLUVB5_I = Byte.MIN_VALUE;
}
}

protected final void initPFLUVB5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLUVB5_IFLAG = false;
}
}

protected final void initPFLUVB6_I(String s) {
if (!s.trim().isEmpty()) {
PFLUVB6_I = Byte.parseByte(s);
} else {
PFLUVB6_I = Byte.MIN_VALUE;
}
}

protected final void initPFLUVB6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PFLUVB6_IFLAG = false;
}
}

protected final void initPMORTC1(String s) {
if (!s.trim().isEmpty()) {
PMORTC1 = Byte.parseByte(s);
} else {
PMORTC1 = Byte.MIN_VALUE;
}
}

protected final void initPOCNAMT1(String s) {
if (!s.trim().isEmpty()) {
POCNAMT1 = Integer.parseInt(s);
} else {
POCNAMT1 = Integer.MIN_VALUE;
}
}

protected final void initPOCNAMT2(String s) {
if (!s.trim().isEmpty()) {
POCNAMT2 = Short.parseShort(s);
} else {
POCNAMT2 = Short.MIN_VALUE;
}
}

protected final void initPOLMVB1_I(String s) {
if (!s.trim().isEmpty()) {
POLMVB1_I = Byte.parseByte(s);
} else {
POLMVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPOLMVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
POLMVB1_IFLAG = false;
}
}

protected final void initPOLMVB2_I(String s) {
if (!s.trim().isEmpty()) {
POLMVB2_I = Byte.parseByte(s);
} else {
POLMVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPOLMVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
POLMVB2_IFLAG = false;
}
}

protected final void initPOPYCH1(String s) {
if (!s.trim().isEmpty()) {
POPYCH1 = Byte.parseByte(s);
} else {
POPYCH1 = Byte.MIN_VALUE;
}
}

protected final void initPORAGE1T(String s) {
if (!s.trim().isEmpty()) {
PORAGE1T = Byte.parseByte(s);
} else {
PORAGE1T = Byte.MIN_VALUE;
}
}

protected final void initPORAGE2T(String s) {
if (!s.trim().isEmpty()) {
PORAGE2T = Byte.parseByte(s);
} else {
PORAGE2T = Byte.MIN_VALUE;
}
}

protected final void initPPCNHOW3(String s) {
if (!s.trim().isEmpty()) {
PPCNHOW3 = Byte.parseByte(s);
} else {
PPCNHOW3 = Byte.MIN_VALUE;
}
}

protected final void initPPCONCH1(String s) {
if (!s.trim().isEmpty()) {
PPCONCH1 = Byte.parseByte(s);
} else {
PPCONCH1 = Byte.MIN_VALUE;
}
}

protected final void initPPDRINCB1(String s) {
if (!s.trim().isEmpty()) {
PPDRINCB1 = Byte.parseByte(s);
} else {
PPDRINCB1 = Byte.MIN_VALUE;
}
}

protected final void initPPLMVB1_I(String s) {
if (!s.trim().isEmpty()) {
PPLMVB1_I = Byte.parseByte(s);
} else {
PPLMVB1_I = Byte.MIN_VALUE;
}
}

protected final void initPPLMVB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPLMVB1_IFLAG = false;
}
}

protected final void initPPLMVB2_I(String s) {
if (!s.trim().isEmpty()) {
PPLMVB2_I = Byte.parseByte(s);
} else {
PPLMVB2_I = Byte.MIN_VALUE;
}
}

protected final void initPPLMVB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPLMVB2_IFLAG = false;
}
}

protected final void initPPLMVB3_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPLMVB3_I = false;
}
}

protected final void initPPLMVB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPLMVB3_IFLAG = false;
}
}

protected final void initPPRGAM1(String s) {
if (!s.trim().isEmpty()) {
PPRGAM1 = Integer.parseInt(s);
} else {
PPRGAM1 = Integer.MIN_VALUE;
}
}

protected final void initPPVALB1_I(String s) {
if (!s.trim().isEmpty()) {
PPVALB1_I = Byte.parseByte(s);
} else {
PPVALB1_I = Byte.MIN_VALUE;
}
}

protected final void initPPVALB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPVALB1_IFLAG = false;
}
}

protected final void initPPVALB2_I(String s) {
if (!s.trim().isEmpty()) {
PPVALB2_I = Byte.parseByte(s);
} else {
PPVALB2_I = Byte.MIN_VALUE;
}
}

protected final void initPPVALB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPVALB2_IFLAG = false;
}
}

protected final void initPPVALB3_I(String s) {
if (!s.trim().isEmpty()) {
PPVALB3_I = Byte.parseByte(s);
} else {
PPVALB3_I = Byte.MIN_VALUE;
}
}

protected final void initPPVALB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
PPVALB3_IFLAG = false;
}
}

protected final void initSAVDEP(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
SAVDEP = false;
}
}

protected final void initSIC2007(String s) {
if (!s.trim().isEmpty()) {
SIC2007 = Double.parseDouble(s);
} else {
SIC2007 = Double.NaN;
}
}

protected final void initSOCFUND1(String s) {
if (!s.trim().isEmpty()) {
SOCFUND1 = Byte.parseByte(s);
} else {
SOCFUND1 = Byte.MIN_VALUE;
}
}

protected final void initSOCFUND1_I(String s) {
if (!s.trim().isEmpty()) {
SOCFUND1_I = Byte.parseByte(s);
} else {
SOCFUND1_I = Byte.MIN_VALUE;
}
}

protected final void initSOCFUND2(String s) {
if (!s.trim().isEmpty()) {
SOCFUND2 = Byte.parseByte(s);
} else {
SOCFUND2 = Byte.MIN_VALUE;
}
}

protected final void initSOCFUND2_I(String s) {
if (!s.trim().isEmpty()) {
SOCFUND2_I = Byte.parseByte(s);
} else {
SOCFUND2_I = Byte.MIN_VALUE;
}
}

protected final void initSOCFUND3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
SOCFUND3 = false;
}
}

protected final void initSOCFUND3_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
SOCFUND3_I = false;
}
}

protected final void initSOCFUND4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
SOCFUND4 = false;
}
}

protected final void initSOCFUND4_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
SOCFUND4_I = false;
}
}

protected final void initSOCFUND_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
SOCFUND_IFLAG = false;
}
}

protected final void initTADDVL1(String s) {
if (!s.trim().isEmpty()) {
TADDVL1 = Integer.parseInt(s);
} else {
TADDVL1 = Integer.MIN_VALUE;
}
}

protected final void initUBUYTOL1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UBUYTOL1 = false;
}
}

protected final void initUBUYTOL10(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL10 = Byte.parseByte(s);
} else {
UBUYTOL10 = Byte.MIN_VALUE;
}
}

protected final void initUBUYTOL11(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL11 = Byte.parseByte(s);
} else {
UBUYTOL11 = Byte.MIN_VALUE;
}
}

protected final void initUBUYTOL12(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL12 = Byte.parseByte(s);
} else {
UBUYTOL12 = Byte.MIN_VALUE;
}
}

protected final void initUBUYTOL2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UBUYTOL2 = false;
}
}

protected final void initUBUYTOL3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UBUYTOL3 = false;
}
}

protected final void initUBUYTOL4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UBUYTOL4 = false;
}
}

protected final void initUBUYTOL5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UBUYTOL5 = false;
}
}

protected final void initUBUYTOL6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UBUYTOL6 = false;
}
}

protected final void initUBUYTOL7(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL7 = Byte.parseByte(s);
} else {
UBUYTOL7 = Byte.MIN_VALUE;
}
}

protected final void initUBUYTOL8(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL8 = Byte.parseByte(s);
} else {
UBUYTOL8 = Byte.MIN_VALUE;
}
}

protected final void initUBUYTOL9(String s) {
if (!s.trim().isEmpty()) {
UBUYTOL9 = Byte.parseByte(s);
} else {
UBUYTOL9 = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBLU_I(String s) {
if (!s.trim().isEmpty()) {
UDEBTBLU_I = Byte.parseByte(s);
} else {
UDEBTBLU_I = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBLU_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UDEBTBLU_IFLAG = false;
}
}

protected final void initUDEBTBL_I(String s) {
if (!s.trim().isEmpty()) {
UDEBTBL_I = Byte.parseByte(s);
} else {
UDEBTBL_I = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UDEBTBL_IFLAG = false;
}
}

protected final void initUDEBTBOR_I(String s) {
if (!s.trim().isEmpty()) {
UDEBTBOR_I = Byte.parseByte(s);
} else {
UDEBTBOR_I = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBOR_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UDEBTBOR_IFLAG = false;
}
}

protected final void initUDEBTBOS_I(String s) {
if (!s.trim().isEmpty()) {
UDEBTBOS_I = Byte.parseByte(s);
} else {
UDEBTBOS_I = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBOS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UDEBTBOS_IFLAG = false;
}
}

protected final void initUDEBTBO_I(String s) {
if (!s.trim().isEmpty()) {
UDEBTBO_I = Byte.parseByte(s);
} else {
UDEBTBO_I = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBO_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UDEBTBO_IFLAG = false;
}
}

protected final void initUDEBTBS_I(String s) {
if (!s.trim().isEmpty()) {
UDEBTBS_I = Byte.parseByte(s);
} else {
UDEBTBS_I = Byte.MIN_VALUE;
}
}

protected final void initUDEBTBS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UDEBTBS_IFLAG = false;
}
}

protected final void initUPROP5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UPROP5 = false;
}
}

protected final void initUPRTYP1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UPRTYP1 = false;
}
}

protected final void initUVALBLU_I(String s) {
if (!s.trim().isEmpty()) {
UVALBLU_I = Byte.parseByte(s);
} else {
UVALBLU_I = Byte.MIN_VALUE;
}
}

protected final void initUVALBLU_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UVALBLU_IFLAG = false;
}
}

protected final void initUVALBL_I(String s) {
if (!s.trim().isEmpty()) {
UVALBL_I = Byte.parseByte(s);
} else {
UVALBL_I = Byte.MIN_VALUE;
}
}

protected final void initUVALBL_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UVALBL_IFLAG = false;
}
}

protected final void initUVALBOR_I(String s) {
if (!s.trim().isEmpty()) {
UVALBOR_I = Byte.parseByte(s);
} else {
UVALBOR_I = Byte.MIN_VALUE;
}
}

protected final void initUVALBOR_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UVALBOR_IFLAG = false;
}
}

protected final void initUVALBOS_I(String s) {
if (!s.trim().isEmpty()) {
UVALBOS_I = Byte.parseByte(s);
} else {
UVALBOS_I = Byte.MIN_VALUE;
}
}

protected final void initUVALBOS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UVALBOS_IFLAG = false;
}
}

protected final void initUVALBO_I(String s) {
if (!s.trim().isEmpty()) {
UVALBO_I = Byte.parseByte(s);
} else {
UVALBO_I = Byte.MIN_VALUE;
}
}

protected final void initUVALBO_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UVALBO_IFLAG = false;
}
}

protected final void initUVALBS_I(String s) {
if (!s.trim().isEmpty()) {
UVALBS_I = Byte.parseByte(s);
} else {
UVALBS_I = Byte.MIN_VALUE;
}
}

protected final void initUVALBS_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
UVALBS_IFLAG = false;
}
}

protected final void initWAGEBEN1(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN1 = Byte.parseByte(s);
} else {
WAGEBEN1 = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN1_I(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN1_I = Byte.parseByte(s);
} else {
WAGEBEN1_I = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN2(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN2 = Byte.parseByte(s);
} else {
WAGEBEN2 = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN2_I(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN2_I = Byte.parseByte(s);
} else {
WAGEBEN2_I = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN3(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN3 = Byte.parseByte(s);
} else {
WAGEBEN3 = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN3_I(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN3_I = Byte.parseByte(s);
} else {
WAGEBEN3_I = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN4(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN4 = Byte.parseByte(s);
} else {
WAGEBEN4 = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN4_I(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN4_I = Byte.parseByte(s);
} else {
WAGEBEN4_I = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
WAGEBEN5 = false;
}
}

protected final void initWAGEBEN5_I(String s) {
if (!s.trim().isEmpty()) {
WAGEBEN5_I = Byte.parseByte(s);
} else {
WAGEBEN5_I = Byte.MIN_VALUE;
}
}

protected final void initWAGEBEN6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
WAGEBEN6 = false;
}
}

protected final void initWAGEBEN6_I(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
WAGEBEN6_I = false;
}
}

protected final void initWAGEBEN_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
WAGEBEN_IFLAG = false;
}
}

protected final void initWPBTHA1(String s) {
if (!s.trim().isEmpty()) {
WPBTHA1 = Byte.parseByte(s);
} else {
WPBTHA1 = Byte.MIN_VALUE;
}
}

protected final void initWPBTHA2(String s) {
if (!s.trim().isEmpty()) {
WPBTHA2 = Byte.parseByte(s);
} else {
WPBTHA2 = Byte.MIN_VALUE;
}
}

protected final void initWPBTHP1(String s) {
if (!s.trim().isEmpty()) {
WPBTHP1 = Byte.parseByte(s);
} else {
WPBTHP1 = Byte.MIN_VALUE;
}
}

protected final void initWPBTHP2(String s) {
if (!s.trim().isEmpty()) {
WPBTHP2 = Byte.parseByte(s);
} else {
WPBTHP2 = Byte.MIN_VALUE;
}
}

protected final void initWPERA1(String s) {
if (!s.trim().isEmpty()) {
WPERA1 = Byte.parseByte(s);
} else {
WPERA1 = Byte.MIN_VALUE;
}
}

protected final void initWPERA2(String s) {
if (!s.trim().isEmpty()) {
WPERA2 = Byte.parseByte(s);
} else {
WPERA2 = Byte.MIN_VALUE;
}
}

protected final void initWPNRA1(String s) {
if (!s.trim().isEmpty()) {
WPNRA1 = Byte.parseByte(s);
} else {
WPNRA1 = Byte.MIN_VALUE;
}
}

protected final void initWPNRA2(String s) {
if (!s.trim().isEmpty()) {
WPNRA2 = Byte.parseByte(s);
} else {
WPNRA2 = Byte.MIN_VALUE;
}
}

protected final void initYEARW1(String s) {
if (!s.trim().isEmpty()) {
YEARW1 = Short.parseShort(s);
} else {
YEARW1 = Short.MIN_VALUE;
}
}

protected final void initYEARW2(String s) {
if (!s.trim().isEmpty()) {
YEARW2 = Short.parseShort(s);
} else {
YEARW2 = Short.MIN_VALUE;
}
}

protected final void initYEARW3(String s) {
if (!s.trim().isEmpty()) {
YEARW3 = Short.parseShort(s);
} else {
YEARW3 = Short.MIN_VALUE;
}
}

public byte getADAMT1() {
return ADAMT1;
}

public byte getADAMT2() {
return ADAMT2;
}

public byte getADAMT3() {
return ADAMT3;
}

public byte getADAVAIL1() {
return ADAVAIL1;
}

public byte getADAVAIL2() {
return ADAVAIL2;
}

public byte getADAVAIL3() {
return ADAVAIL3;
}

public byte getADCONS1() {
return ADCONS1;
}

public byte getADCONS2() {
return ADCONS2;
}

public byte getADCONS3() {
return ADCONS3;
}

public byte getADCOST1() {
return ADCOST1;
}

public byte getADCOST2() {
return ADCOST2;
}

public byte getADCOST3() {
return ADCOST3;
}

public byte getADFUR1() {
return ADFUR1;
}

public byte getADFUR2() {
return ADFUR2;
}

public byte getADFUR3() {
return ADFUR3;
}

public byte getADJOINT1() {
return ADJOINT1;
}

public byte getADJOINT2() {
return ADJOINT2;
}

public byte getADJOINT3() {
return ADJOINT3;
}

public byte getADPAY1() {
return ADPAY1;
}

public byte getADPAY2() {
return ADPAY2;
}

public byte getADPAY3() {
return ADPAY3;
}

public byte getADPROD1() {
return ADPROD1;
}

public byte getADPROD2() {
return ADPROD2;
}

public byte getADPROD3() {
return ADPROD3;
}

public byte getADPURCH1() {
return ADPURCH1;
}

public byte getADPURCH2() {
return ADPURCH2;
}

public byte getADPURCH3() {
return ADPURCH3;
}

public byte getADRECORD1() {
return ADRECORD1;
}

public byte getADRECORD2() {
return ADRECORD2;
}

public byte getADRECORD3() {
return ADRECORD3;
}

public byte getADSAT1() {
return ADSAT1;
}

public byte getADSAT2() {
return ADSAT2;
}

public byte getADSAT3() {
return ADSAT3;
}

public byte getADSATREFLECT1() {
return ADSATREFLECT1;
}

public byte getADSATREFLECT2() {
return ADSATREFLECT2;
}

public byte getADSATREFLECT3() {
return ADSATREFLECT3;
}

public byte getADSAVINV1() {
return ADSAVINV1;
}

public byte getADSAVINV10() {
return ADSAVINV10;
}

public byte getADSAVINV11() {
return ADSAVINV11;
}

public byte getADSAVINV12() {
return ADSAVINV12;
}

public byte getADSAVINV13() {
return ADSAVINV13;
}

public byte getADSAVINV14() {
return ADSAVINV14;
}

public byte getADSAVINV15() {
return ADSAVINV15;
}

public byte getADSAVINV19() {
return ADSAVINV19;
}

public byte getADSAVINV2() {
return ADSAVINV2;
}

public byte getADSAVINV20() {
return ADSAVINV20;
}

public byte getADSAVINV21() {
return ADSAVINV21;
}

public byte getADSAVINV3() {
return ADSAVINV3;
}

public byte getADSAVINV4() {
return ADSAVINV4;
}

public byte getADSAVINV5() {
return ADSAVINV5;
}

public boolean getADSAVINV6() {
return ADSAVINV6;
}

public boolean getADSAVINV7() {
return ADSAVINV7;
}

public byte getADSAVINV8() {
return ADSAVINV8;
}

public byte getADSAVINV9() {
return ADSAVINV9;
}

public byte getADTYP1() {
return ADTYP1;
}

public byte getADTYP2() {
return ADTYP2;
}

public byte getADTYP3() {
return ADTYP3;
}

public byte getADVICE() {
return ADVICE;
}

public byte getADVNUMALL() {
return ADVNUMALL;
}

public byte getADVREAS1() {
return ADVREAS1;
}

public byte getADVREAS2() {
return ADVREAS2;
}

public byte getADVREAS3() {
return ADVREAS3;
}

public byte getADWHO01() {
return ADWHO01;
}

public byte getADWHO02() {
return ADWHO02;
}

public boolean getADWHO15() {
return ADWHO15;
}

public byte getADWHO16() {
return ADWHO16;
}

public byte getADWHO17() {
return ADWHO17;
}

public byte getADWHO31() {
return ADWHO31;
}

public boolean getADWHO32() {
return ADWHO32;
}

public double getAGEASAF() {
return AGEASAF;
}

public double getANNUITY1() {
return ANNUITY1;
}

public double getANNUITY2() {
return ANNUITY2;
}

public boolean getANYOTHERB_IFLAG() {
return ANYOTHERB_IFLAG;
}

public byte getBENINTRO() {
return BENINTRO;
}

public byte getCACTVB_I() {
return CACTVB_I;
}

public boolean getCACTVB_IFLAG() {
return CACTVB_IFLAG;
}

public byte getCAJISA() {
return CAJISA;
}

public short getCASEW4() {
return CASEW4;
}

public byte getCASVB_I() {
return CASVB_I;
}

public boolean getCASVB_IFLAG() {
return CASVB_IFLAG;
}

public byte getCATYPE1() {
return CATYPE1;
}

public byte getCATYPE2() {
return CATYPE2;
}

public byte getDBURDW3() {
return DBURDW3;
}

public byte getDCARRCL01() {
return DCARRCL01;
}

public byte getDCARRCL02() {
return DCARRCL02;
}

public byte getDCARRCL03() {
return DCARRCL03;
}

public boolean getDCARRCL04() {
return DCARRCL04;
}

public byte getDCBE2YR1() {
return DCBE2YR1;
}

public byte getDCBE2YR2() {
return DCBE2YR2;
}

public byte getDCBE2YR3() {
return DCBE2YR3;
}

public byte getDHBEST01_I() {
return DHBEST01_I;
}

public boolean getDHBEST01_IFLAG() {
return DHBEST01_IFLAG;
}

public byte getDHBEST02_I() {
return DHBEST02_I;
}

public boolean getDHBEST02_IFLAG() {
return DHBEST02_IFLAG;
}

public byte getDHBEST03_I() {
return DHBEST03_I;
}

public boolean getDHBEST03_IFLAG() {
return DHBEST03_IFLAG;
}

public byte getDHBEST04_I() {
return DHBEST04_I;
}

public boolean getDHBEST04_IFLAG() {
return DHBEST04_IFLAG;
}

public byte getDHBEST05_I() {
return DHBEST05_I;
}

public boolean getDHBEST05_IFLAG() {
return DHBEST05_IFLAG;
}

public byte getDHBEST06_I() {
return DHBEST06_I;
}

public boolean getDHBEST06_IFLAG() {
return DHBEST06_IFLAG;
}

public byte getDHBEST07_I() {
return DHBEST07_I;
}

public boolean getDHBEST07_IFLAG() {
return DHBEST07_IFLAG;
}

public byte getDHBEST08_I() {
return DHBEST08_I;
}

public boolean getDHBEST08_IFLAG() {
return DHBEST08_IFLAG;
}

public byte getDHBEST09_I() {
return DHBEST09_I;
}

public boolean getDHBEST09_IFLAG() {
return DHBEST09_IFLAG;
}

public byte getDHBEST10_I() {
return DHBEST10_I;
}

public boolean getDHBEST10_IFLAG() {
return DHBEST10_IFLAG;
}

public byte getDHBEST11_I() {
return DHBEST11_I;
}

public boolean getDHBEST11_IFLAG() {
return DHBEST11_IFLAG;
}

public byte getDISBEN1() {
return DISBEN1;
}

public byte getDISBEN1_I() {
return DISBEN1_I;
}

public byte getDISBEN2() {
return DISBEN2;
}

public byte getDISBEN2_I() {
return DISBEN2_I;
}

public byte getDISBEN3() {
return DISBEN3;
}

public byte getDISBEN3_I() {
return DISBEN3_I;
}

public boolean getDISBEN_IFLAG() {
return DISBEN_IFLAG;
}

public byte getDLEST1_I() {
return DLEST1_I;
}

public boolean getDLEST1_IFLAG() {
return DLEST1_IFLAG;
}

public byte getDLEST2_I() {
return DLEST2_I;
}

public boolean getDLEST2_IFLAG() {
return DLEST2_IFLAG;
}

public byte getDLEST3_I() {
return DLEST3_I;
}

public boolean getDLEST3_IFLAG() {
return DLEST3_IFLAG;
}

public byte getDLEST4_I() {
return DLEST4_I;
}

public boolean getDLEST4_IFLAG() {
return DLEST4_IFLAG;
}

public byte getDLEST5_I() {
return DLEST5_I;
}

public boolean getDLEST5_IFLAG() {
return DLEST5_IFLAG;
}

public byte getDSLEST1_I() {
return DSLEST1_I;
}

public boolean getDSLEST1_IFLAG() {
return DSLEST1_IFLAG;
}

public byte getDSLEST2_I() {
return DSLEST2_I;
}

public boolean getDSLEST2_IFLAG() {
return DSLEST2_IFLAG;
}

public byte getDSLEST3_I() {
return DSLEST3_I;
}

public boolean getDSLEST3_IFLAG() {
return DSLEST3_IFLAG;
}

public boolean getDSLEST4_I() {
return DSLEST4_I;
}

public boolean getDSLEST4_IFLAG() {
return DSLEST4_IFLAG;
}

public boolean getDSLEST5_I() {
return DSLEST5_I;
}

public byte getDSNUM1() {
return DSNUM1;
}

public int getDVBENEFITANNUAL_I() {
return DVBENEFITANNUAL_I;
}

public int getDVCOINV1() {
return DVCOINV1;
}

public byte getDVECACT() {
return DVECACT;
}

public byte getDVGRSBAND_I() {
return DVGRSBAND_I;
}

public boolean getDVGRSBAND_IFLAG() {
return DVGRSBAND_IFLAG;
}

public byte getDVMRDF12() {
return DVMRDF12;
}

public byte getDVNETBAND_I() {
return DVNETBAND_I;
}

public boolean getDVNETBAND_IFLAG() {
return DVNETBAND_IFLAG;
}

public double getDVSHODVAL1() {
return DVSHODVAL1;
}

public byte getFINFVB_I() {
return FINFVB_I;
}

public boolean getFINFVB_IFLAG() {
return FINFVB_IFLAG;
}

public byte getFLOANVB_I() {
return FLOANVB_I;
}

public boolean getFLOANVB_IFLAG() {
return FLOANVB_IFLAG;
}

public int getFNSVAL() {
return FNSVAL;
}

public int getFNSVAL_I() {
return FNSVAL_I;
}

public boolean getHASBOND() {
return HASBOND;
}

public byte getHASCC() {
return HASCC;
}

public boolean getHASEMPSH() {
return HASEMPSH;
}

public boolean getHASGILT() {
return HASGILT;
}

public boolean getHASISA() {
return HASISA;
}

public boolean getHASLINS() {
return HASLINS;
}

public boolean getHASNOFA() {
return HASNOFA;
}

public boolean getHASNSP() {
return HASNSP;
}

public boolean getHASOINV() {
return HASOINV;
}

public boolean getHASOTHSH() {
return HASOTHSH;
}

public byte getHASSC() {
return HASSC;
}

public byte getHASSHSAC() {
return HASSHSAC;
}

public boolean getHASUTRUST() {
return HASUTRUST;
}

public byte getHRPDVECACT() {
return HRPDVECACT;
}

public byte getIGFVALB_I() {
return IGFVALB_I;
}

public boolean getIGFVALB_IFLAG() {
return IGFVALB_IFLAG;
}

public byte getILACB_I() {
return ILACB_I;
}

public boolean getILACB_IFLAG() {
return ILACB_IFLAG;
}

public byte getILINB_I() {
return ILINB_I;
}

public boolean getILINB_IFLAG() {
return ILINB_IFLAG;
}

public byte getILOTB_I() {
return ILOTB_I;
}

public boolean getILOTB_IFLAG() {
return ILOTB_IFLAG;
}

public byte getILRDB_I() {
return ILRDB_I;
}

public boolean getILRDB_IFLAG() {
return ILRDB_IFLAG;
}

public byte getILUPB_I() {
return ILUPB_I;
}

public boolean getILUPB_IFLAG() {
return ILUPB_IFLAG;
}

public byte getILWNB_I() {
return ILWNB_I;
}

public boolean getILWNB_IFLAG() {
return ILWNB_IFLAG;
}

public byte getIVALB1_I() {
return IVALB1_I;
}

public boolean getIVALB1_IFLAG() {
return IVALB1_IFLAG;
}

public byte getIVALB2_I() {
return IVALB2_I;
}

public boolean getIVALB2_IFLAG() {
return IVALB2_IFLAG;
}

public byte getIVALB3_I() {
return IVALB3_I;
}

public boolean getIVALB3_IFLAG() {
return IVALB3_IFLAG;
}

public byte getIWHO1() {
return IWHO1;
}

public byte getKIDBEN1() {
return KIDBEN1;
}

public byte getKIDBEN1_I() {
return KIDBEN1_I;
}

public byte getKIDBEN2() {
return KIDBEN2;
}

public byte getKIDBEN2_I() {
return KIDBEN2_I;
}

public boolean getKIDBEN_IFLAG() {
return KIDBEN_IFLAG;
}

public byte getKNOWWPR() {
return KNOWWPR;
}

public byte getLIVWTH12() {
return LIVWTH12;
}

public byte getLNLFT6() {
return LNLFT6;
}

public byte getLNLFT7() {
return LNLFT7;
}

public byte getLNLFT8() {
return LNLFT8;
}

public byte getLNLFT9() {
return LNLFT9;
}

public short getLNOS6() {
return LNOS6;
}

public short getLNOS7() {
return LNOS7;
}

public byte getLNOS8() {
return LNOS8;
}

public byte getLNOS9() {
return LNOS9;
}

public byte getMONTHW1() {
return MONTHW1;
}

public byte getMONTHW2() {
return MONTHW2;
}

public byte getMONTHW3() {
return MONTHW3;
}

public short getNWFLNVAL4() {
return NWFLNVAL4;
}

public byte getOTHERBEN1() {
return OTHERBEN1;
}

public byte getOTHERBEN1_I() {
return OTHERBEN1_I;
}

public byte getOTHERBEN2() {
return OTHERBEN2;
}

public byte getOTHERBEN2_I() {
return OTHERBEN2_I;
}

public boolean getOTHERBEN3() {
return OTHERBEN3;
}

public byte getOTHERBEN3_I() {
return OTHERBEN3_I;
}

public boolean getOTHERBEN4() {
return OTHERBEN4;
}

public boolean getOTHERBEN4_I() {
return OTHERBEN4_I;
}

public boolean getOTHERBEN_IFLAG() {
return OTHERBEN_IFLAG;
}

public byte getOWHYSAV1() {
return OWHYSAV1;
}

public byte getOWHYSAV2() {
return OWHYSAV2;
}

public byte getOWHYSAV3() {
return OWHYSAV3;
}

public byte getOWHYSAV4() {
return OWHYSAV4;
}

public byte getOWHYSAV5() {
return OWHYSAV5;
}

public byte getOWHYSAV6() {
return OWHYSAV6;
}

public byte getOWHYSAV7() {
return OWHYSAV7;
}

public byte getOWHYSAV8() {
return OWHYSAV8;
}

public byte getOWHYSAV9() {
return OWHYSAV9;
}

public byte getPAVCVB1_I() {
return PAVCVB1_I;
}

public boolean getPAVCVB1_IFLAG() {
return PAVCVB1_IFLAG;
}

public byte getPAVCVB2_I() {
return PAVCVB2_I;
}

public boolean getPAVCVB2_IFLAG() {
return PAVCVB2_IFLAG;
}

public byte getPBLMVB1_I() {
return PBLMVB1_I;
}

public boolean getPBLMVB1_IFLAG() {
return PBLMVB1_IFLAG;
}

public byte getPBLMVB2_I() {
return PBLMVB2_I;
}

public boolean getPBLMVB2_IFLAG() {
return PBLMVB2_IFLAG;
}

public byte getPDCVB1_I() {
return PDCVB1_I;
}

public boolean getPDCVB1_IFLAG() {
return PDCVB1_IFLAG;
}

public byte getPDCVB2_I() {
return PDCVB2_I;
}

public boolean getPDCVB2_IFLAG() {
return PDCVB2_IFLAG;
}

public byte getPENBEN1() {
return PENBEN1;
}

public byte getPENBEN1_I() {
return PENBEN1_I;
}

public byte getPENBEN2() {
return PENBEN2;
}

public byte getPENBEN2_I() {
return PENBEN2_I;
}

public byte getPENBEN3() {
return PENBEN3;
}

public byte getPENBEN3_I() {
return PENBEN3_I;
}

public boolean getPENBEN_IFLAG() {
return PENBEN_IFLAG;
}

public byte getPERSONW4() {
return PERSONW4;
}

public byte getPFCUVB1_I() {
return PFCUVB1_I;
}

public boolean getPFCUVB1_IFLAG() {
return PFCUVB1_IFLAG;
}

public byte getPFCUVB2_I() {
return PFCUVB2_I;
}

public boolean getPFCUVB2_IFLAG() {
return PFCUVB2_IFLAG;
}

public byte getPFCUVB3_I() {
return PFCUVB3_I;
}

public boolean getPFCUVB3_IFLAG() {
return PFCUVB3_IFLAG;
}

public byte getPFCUVB4_I() {
return PFCUVB4_I;
}

public boolean getPFCUVB4_IFLAG() {
return PFCUVB4_IFLAG;
}

public byte getPFCUVB5_I() {
return PFCUVB5_I;
}

public boolean getPFCUVB5_IFLAG() {
return PFCUVB5_IFLAG;
}

public byte getPFCUVB6_I() {
return PFCUVB6_I;
}

public boolean getPFCUVB6_IFLAG() {
return PFCUVB6_IFLAG;
}

public byte getPFDDVB1_I() {
return PFDDVB1_I;
}

public boolean getPFDDVB1_IFLAG() {
return PFDDVB1_IFLAG;
}

public byte getPFDDVB2_I() {
return PFDDVB2_I;
}

public boolean getPFDDVB2_IFLAG() {
return PFDDVB2_IFLAG;
}

public byte getPFDDVB3_I() {
return PFDDVB3_I;
}

public boolean getPFDDVB3_IFLAG() {
return PFDDVB3_IFLAG;
}

public byte getPFDDVB4_I() {
return PFDDVB4_I;
}

public boolean getPFDDVB4_IFLAG() {
return PFDDVB4_IFLAG;
}

public boolean getPFDDVB5_I() {
return PFDDVB5_I;
}

public boolean getPFDDVB5_IFLAG() {
return PFDDVB5_IFLAG;
}

public boolean getPFDDVB6_I() {
return PFDDVB6_I;
}

public boolean getPFDDVB6_IFLAG() {
return PFDDVB6_IFLAG;
}

public byte getPFDRAW3() {
return PFDRAW3;
}

public byte getPFLMVB1_I() {
return PFLMVB1_I;
}

public boolean getPFLMVB1_IFLAG() {
return PFLMVB1_IFLAG;
}

public byte getPFLMVB2_I() {
return PFLMVB2_I;
}

public boolean getPFLMVB2_IFLAG() {
return PFLMVB2_IFLAG;
}

public byte getPFLMVB3_I() {
return PFLMVB3_I;
}

public boolean getPFLMVB3_IFLAG() {
return PFLMVB3_IFLAG;
}

public byte getPFLMVB4_I() {
return PFLMVB4_I;
}

public boolean getPFLMVB4_IFLAG() {
return PFLMVB4_IFLAG;
}

public byte getPFLUVB1_I() {
return PFLUVB1_I;
}

public boolean getPFLUVB1_IFLAG() {
return PFLUVB1_IFLAG;
}

public byte getPFLUVB2_I() {
return PFLUVB2_I;
}

public boolean getPFLUVB2_IFLAG() {
return PFLUVB2_IFLAG;
}

public byte getPFLUVB3_I() {
return PFLUVB3_I;
}

public boolean getPFLUVB3_IFLAG() {
return PFLUVB3_IFLAG;
}

public byte getPFLUVB4_I() {
return PFLUVB4_I;
}

public boolean getPFLUVB4_IFLAG() {
return PFLUVB4_IFLAG;
}

public byte getPFLUVB5_I() {
return PFLUVB5_I;
}

public boolean getPFLUVB5_IFLAG() {
return PFLUVB5_IFLAG;
}

public byte getPFLUVB6_I() {
return PFLUVB6_I;
}

public boolean getPFLUVB6_IFLAG() {
return PFLUVB6_IFLAG;
}

public byte getPMORTC1() {
return PMORTC1;
}

public int getPOCNAMT1() {
return POCNAMT1;
}

public short getPOCNAMT2() {
return POCNAMT2;
}

public byte getPOLMVB1_I() {
return POLMVB1_I;
}

public boolean getPOLMVB1_IFLAG() {
return POLMVB1_IFLAG;
}

public byte getPOLMVB2_I() {
return POLMVB2_I;
}

public boolean getPOLMVB2_IFLAG() {
return POLMVB2_IFLAG;
}

public byte getPOPYCH1() {
return POPYCH1;
}

public byte getPORAGE1T() {
return PORAGE1T;
}

public byte getPORAGE2T() {
return PORAGE2T;
}

public byte getPPCNHOW3() {
return PPCNHOW3;
}

public byte getPPCONCH1() {
return PPCONCH1;
}

public byte getPPDRINCB1() {
return PPDRINCB1;
}

public byte getPPLMVB1_I() {
return PPLMVB1_I;
}

public boolean getPPLMVB1_IFLAG() {
return PPLMVB1_IFLAG;
}

public byte getPPLMVB2_I() {
return PPLMVB2_I;
}

public boolean getPPLMVB2_IFLAG() {
return PPLMVB2_IFLAG;
}

public boolean getPPLMVB3_I() {
return PPLMVB3_I;
}

public boolean getPPLMVB3_IFLAG() {
return PPLMVB3_IFLAG;
}

public int getPPRGAM1() {
return PPRGAM1;
}

public byte getPPVALB1_I() {
return PPVALB1_I;
}

public boolean getPPVALB1_IFLAG() {
return PPVALB1_IFLAG;
}

public byte getPPVALB2_I() {
return PPVALB2_I;
}

public boolean getPPVALB2_IFLAG() {
return PPVALB2_IFLAG;
}

public byte getPPVALB3_I() {
return PPVALB3_I;
}

public boolean getPPVALB3_IFLAG() {
return PPVALB3_IFLAG;
}

public boolean getSAVDEP() {
return SAVDEP;
}

public double getSIC2007() {
return SIC2007;
}

public byte getSOCFUND1() {
return SOCFUND1;
}

public byte getSOCFUND1_I() {
return SOCFUND1_I;
}

public byte getSOCFUND2() {
return SOCFUND2;
}

public byte getSOCFUND2_I() {
return SOCFUND2_I;
}

public boolean getSOCFUND3() {
return SOCFUND3;
}

public boolean getSOCFUND3_I() {
return SOCFUND3_I;
}

public boolean getSOCFUND4() {
return SOCFUND4;
}

public boolean getSOCFUND4_I() {
return SOCFUND4_I;
}

public boolean getSOCFUND_IFLAG() {
return SOCFUND_IFLAG;
}

public int getTADDVL1() {
return TADDVL1;
}

public boolean getUBUYTOL1() {
return UBUYTOL1;
}

public byte getUBUYTOL10() {
return UBUYTOL10;
}

public byte getUBUYTOL11() {
return UBUYTOL11;
}

public byte getUBUYTOL12() {
return UBUYTOL12;
}

public boolean getUBUYTOL2() {
return UBUYTOL2;
}

public boolean getUBUYTOL3() {
return UBUYTOL3;
}

public boolean getUBUYTOL4() {
return UBUYTOL4;
}

public boolean getUBUYTOL5() {
return UBUYTOL5;
}

public boolean getUBUYTOL6() {
return UBUYTOL6;
}

public byte getUBUYTOL7() {
return UBUYTOL7;
}

public byte getUBUYTOL8() {
return UBUYTOL8;
}

public byte getUBUYTOL9() {
return UBUYTOL9;
}

public byte getUDEBTBLU_I() {
return UDEBTBLU_I;
}

public boolean getUDEBTBLU_IFLAG() {
return UDEBTBLU_IFLAG;
}

public byte getUDEBTBL_I() {
return UDEBTBL_I;
}

public boolean getUDEBTBL_IFLAG() {
return UDEBTBL_IFLAG;
}

public byte getUDEBTBOR_I() {
return UDEBTBOR_I;
}

public boolean getUDEBTBOR_IFLAG() {
return UDEBTBOR_IFLAG;
}

public byte getUDEBTBOS_I() {
return UDEBTBOS_I;
}

public boolean getUDEBTBOS_IFLAG() {
return UDEBTBOS_IFLAG;
}

public byte getUDEBTBO_I() {
return UDEBTBO_I;
}

public boolean getUDEBTBO_IFLAG() {
return UDEBTBO_IFLAG;
}

public byte getUDEBTBS_I() {
return UDEBTBS_I;
}

public boolean getUDEBTBS_IFLAG() {
return UDEBTBS_IFLAG;
}

public boolean getUPROP5() {
return UPROP5;
}

public boolean getUPRTYP1() {
return UPRTYP1;
}

public byte getUVALBLU_I() {
return UVALBLU_I;
}

public boolean getUVALBLU_IFLAG() {
return UVALBLU_IFLAG;
}

public byte getUVALBL_I() {
return UVALBL_I;
}

public boolean getUVALBL_IFLAG() {
return UVALBL_IFLAG;
}

public byte getUVALBOR_I() {
return UVALBOR_I;
}

public boolean getUVALBOR_IFLAG() {
return UVALBOR_IFLAG;
}

public byte getUVALBOS_I() {
return UVALBOS_I;
}

public boolean getUVALBOS_IFLAG() {
return UVALBOS_IFLAG;
}

public byte getUVALBO_I() {
return UVALBO_I;
}

public boolean getUVALBO_IFLAG() {
return UVALBO_IFLAG;
}

public byte getUVALBS_I() {
return UVALBS_I;
}

public boolean getUVALBS_IFLAG() {
return UVALBS_IFLAG;
}

public byte getWAGEBEN1() {
return WAGEBEN1;
}

public byte getWAGEBEN1_I() {
return WAGEBEN1_I;
}

public byte getWAGEBEN2() {
return WAGEBEN2;
}

public byte getWAGEBEN2_I() {
return WAGEBEN2_I;
}

public byte getWAGEBEN3() {
return WAGEBEN3;
}

public byte getWAGEBEN3_I() {
return WAGEBEN3_I;
}

public byte getWAGEBEN4() {
return WAGEBEN4;
}

public byte getWAGEBEN4_I() {
return WAGEBEN4_I;
}

public boolean getWAGEBEN5() {
return WAGEBEN5;
}

public byte getWAGEBEN5_I() {
return WAGEBEN5_I;
}

public boolean getWAGEBEN6() {
return WAGEBEN6;
}

public boolean getWAGEBEN6_I() {
return WAGEBEN6_I;
}

public boolean getWAGEBEN_IFLAG() {
return WAGEBEN_IFLAG;
}

public byte getWPBTHA1() {
return WPBTHA1;
}

public byte getWPBTHA2() {
return WPBTHA2;
}

public byte getWPBTHP1() {
return WPBTHP1;
}

public byte getWPBTHP2() {
return WPBTHP2;
}

public byte getWPERA1() {
return WPERA1;
}

public byte getWPERA2() {
return WPERA2;
}

public byte getWPNRA1() {
return WPNRA1;
}

public byte getWPNRA2() {
return WPNRA2;
}

public short getYEARW1() {
return YEARW1;
}

public short getYEARW2() {
return YEARW2;
}

public short getYEARW3() {
return YEARW3;
}

}
