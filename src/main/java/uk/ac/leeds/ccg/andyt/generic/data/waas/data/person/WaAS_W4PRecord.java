/**
 * Source code generated by uk.ac.leeds.ccg.andyt.generic.data.waas.process.WaAS_JavaCodeGenerator
 */
package uk.ac.leeds.ccg.andyt.generic.data.waas.data.person;
public class WaAS_W4PRecord extends WaAS_W4W5PRecord {
protected byte ANYOTHERB_I;
protected byte BENTYPE01;
protected byte BENTYPE02;
protected byte BENTYPE03;
protected byte BENTYPE04;
protected byte BENTYPE05;
protected byte BENTYPE06;
protected boolean BENTYPE07;
protected boolean BENTYPE08;
protected boolean BENTYPE09;
protected boolean BENTYPE10;
protected boolean BENTYPE11;
protected boolean BENTYPE12;
protected byte COMBPD;
protected byte CREDTYPE1;
protected byte CREDTYPE2;
protected byte CTCPD;
protected byte CTOGSEP;
protected byte DBURD___W4;
protected int DTLOWE1;
protected int DTLOWE1_I;
protected boolean DTLOWE1_IFLAG;
protected short DTLOWE2;
protected short DTLOWE2_I;
protected byte DTLOWE2_IFLAG;
protected short DTLOWE3;
protected short DTLOWE3_I;
protected byte DTLOWE3_IFLAG;
protected byte DTLOWEB1;
protected byte DTLOWEB1_I;
protected boolean DTLOWEB1_IFLAG;
protected byte DTLOWEB2;
protected byte DTLOWEB2_I;
protected boolean DTLOWEB2_IFLAG;
protected boolean DTLOWEB3;
protected byte DTLOWEB3_I;
protected boolean DTLOWEB3_IFLAG;
protected byte DTLTYPE1;
protected byte DTLTYPE1_I;
protected boolean DTLTYPE1_IFLAG;
protected byte DTLTYPE2;
protected byte DTLTYPE2_I;
protected byte DTLTYPE2_IFLAG;
protected byte DTLTYPE3;
protected byte DTLTYPE3_I;
protected byte DTLTYPE3_IFLAG;
protected byte DVAGEW4BAND;
protected byte DVBENU1;
protected short DVCTCANNUAL;
protected byte DVSAME_I;
protected boolean DVSAME_IFLAG;
protected double DVSPECANNUAL01;
protected double DVSPECANNUAL02;
protected double DVSPECANNUAL03;
protected double DVSPECANNUAL04;
protected short DVSPECANNUAL05;
protected short DVSPECANNUAL06;
protected short DVSPECANNUAL07;
protected short DVSPECANNUAL08;
protected short DVSPECANNUAL09;
protected short DVTOGTCANNUAL;
protected double DVTOTALLBENANNUAL;
protected double DVTOTBENANNUAL;
protected double DVTOTTAXANNUAL;
protected boolean DVUETIM;
protected double DVWTCANNUAL;
protected boolean ETYPE;
protected byte FINVTY01_IFLAG;
protected byte FINVTY02_IFLAG;
protected byte FINVTY03_IFLAG;
protected byte FINVTY04_IFLAG;
protected byte FINVTY05_IFLAG;
protected byte FINVTY06_IFLAG;
protected byte FINVTY07_IFLAG;
protected byte FINVTY08_IFLAG;
protected byte FINVTY09_IFLAG;
protected byte FINVTY10_IFLAG;
protected boolean FINVTY11_IFLAG;
protected int FSHADA;
protected byte FSHADAB;
protected byte FSHADD;
protected byte LVTDAY;
protected double NSSEC;
protected byte OPENSAV;
protected byte OSAFERE2;
protected byte OSAFERET1;
protected byte PESAME_I;
protected byte PESAME_IFLAG;
protected boolean PFANVB1;
protected boolean PFANVB2;
protected boolean PFANVB3;
protected boolean PFANVB4;
protected boolean PFANVB5;
protected boolean PFANVB6;
protected short PFANVI1;
protected short PFANVI2;
protected short PFANVI3;
protected boolean PFANVI4;
protected boolean PFANVI5;
protected boolean PFANVI6;
protected byte PFPENVB1;
protected boolean PFPENVB2;
protected boolean PFPENVB3;
protected boolean PFPENVB4;
protected boolean PFPENVB5;
protected boolean PFPENVB6;
protected int PFPENVI1;
protected short PFPENVI2;
protected short PFPENVI3;
protected short PFPENVI4;
protected boolean PFPENVI5;
protected boolean PFPENVI6;
protected boolean POANVB1;
protected boolean POANVB2;
protected short POANVI1;
protected short POANVI2;
protected byte POPENVB1;
protected boolean POPENVB2;
protected int POPENVI;
protected int POPENVI2;
protected byte PPANVB1;
protected boolean PPANVB2;
protected boolean PPANVB3;
protected int PPANVI1;
protected short PPANVI2;
protected short PPANVI3;
protected boolean PPFAWH16;
protected boolean PPFAWH17;
protected boolean PPFAWH18;
protected byte PSCHY_T;
protected byte RF;
protected boolean RPCRET1;
protected boolean RPCRET2;
protected boolean RPCRET3;
protected byte RPDBCAL_F;
protected byte RS;
protected byte SOURC2PMULT1;
protected byte SOURC2PMULT2;
protected byte SOURC2PMULT3;
protected byte SOURC2PMULT4;
protected byte SOURC2PMULT5;
protected byte SOURC2PMULT6;
protected boolean SOURC2PMULT7;
protected boolean SOURC2PMULT8;
protected boolean SOURC2PMULT9;
protected byte SPECIAL1;
protected byte SPECIAL2;
protected byte SPECIAL3;
protected byte SPECIAL4;
protected boolean SPECIAL5;
protected boolean SPECIAL6;
protected boolean SPECIAL7;
protected boolean SPECIAL8;
protected boolean SPECIAL9;
protected byte SPECINCL1;
protected byte SPECINCL2;
protected byte SPECINCL3;
protected byte SPECINCL4;
protected byte SPECINCL5;
protected byte SPECINCL6;
protected byte SPECINCL7;
protected byte SPECINCL8;
protected byte SPECINCL9;
protected byte SPECPD1;
protected short SPECPD2;
protected byte SPECPD3;
protected byte SPECPD4;
protected byte SPECPD5;
protected byte SPECPD6;
protected byte SPECPD7;
protected byte SPECPD8;
protected byte SPECPD9;
protected byte SPECWHEN1;
protected byte SPECWHEN2;
protected byte SPECWHEN3;
protected byte SPECWHEN4;
protected byte SPECWHEN5;
protected byte SPECWHEN6;
protected byte SPECWHEN7;
protected byte SPECWHEN8;
protected byte SPECWHEN9;
protected byte SPENDM;
protected boolean UPROP1_IFLAG;
protected boolean UPROP2_IFLAG;
protected boolean UPROP3_IFLAG;
protected boolean UPROP4_IFLAG;
protected boolean UPROP5_IFLAG;
protected boolean UPROP6_IFLAG;
protected double W1_LONGWGT;
protected double W3_LONGWGT;
protected double W4XSHHWGT;
protected double W4XSPERSWGT;
protected byte WHOREATT;
protected byte WHORECAR;
protected byte WHOREMOB;
protected byte WTCPD;
protected final void initANYOTHERB_I(String s) {
if (!s.trim().isEmpty()) {
ANYOTHERB_I = Byte.parseByte(s);
} else {
ANYOTHERB_I = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE01(String s) {
if (!s.trim().isEmpty()) {
BENTYPE01 = Byte.parseByte(s);
} else {
BENTYPE01 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE02(String s) {
if (!s.trim().isEmpty()) {
BENTYPE02 = Byte.parseByte(s);
} else {
BENTYPE02 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE03(String s) {
if (!s.trim().isEmpty()) {
BENTYPE03 = Byte.parseByte(s);
} else {
BENTYPE03 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE04(String s) {
if (!s.trim().isEmpty()) {
BENTYPE04 = Byte.parseByte(s);
} else {
BENTYPE04 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE05(String s) {
if (!s.trim().isEmpty()) {
BENTYPE05 = Byte.parseByte(s);
} else {
BENTYPE05 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE06(String s) {
if (!s.trim().isEmpty()) {
BENTYPE06 = Byte.parseByte(s);
} else {
BENTYPE06 = Byte.MIN_VALUE;
}
}

protected final void initBENTYPE07(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE07 = false;
} else {
BENTYPE07 = true;
}
}
}

protected final void initBENTYPE08(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE08 = false;
} else {
BENTYPE08 = true;
}
}
}

protected final void initBENTYPE09(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE09 = false;
} else {
BENTYPE09 = true;
}
}
}

protected final void initBENTYPE10(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE10 = false;
} else {
BENTYPE10 = true;
}
}
}

protected final void initBENTYPE11(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE11 = false;
} else {
BENTYPE11 = true;
}
}
}

protected final void initBENTYPE12(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
BENTYPE12 = false;
} else {
BENTYPE12 = true;
}
}
}

protected final void initCOMBPD(String s) {
if (!s.trim().isEmpty()) {
COMBPD = Byte.parseByte(s);
} else {
COMBPD = Byte.MIN_VALUE;
}
}

protected final void initCREDTYPE1(String s) {
if (!s.trim().isEmpty()) {
CREDTYPE1 = Byte.parseByte(s);
} else {
CREDTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initCREDTYPE2(String s) {
if (!s.trim().isEmpty()) {
CREDTYPE2 = Byte.parseByte(s);
} else {
CREDTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initCTCPD(String s) {
if (!s.trim().isEmpty()) {
CTCPD = Byte.parseByte(s);
} else {
CTCPD = Byte.MIN_VALUE;
}
}

protected final void initCTOGSEP(String s) {
if (!s.trim().isEmpty()) {
CTOGSEP = Byte.parseByte(s);
} else {
CTOGSEP = Byte.MIN_VALUE;
}
}

protected final void initDBURD___W4(String s) {
if (!s.trim().isEmpty()) {
DBURD___W4 = Byte.parseByte(s);
} else {
DBURD___W4 = Byte.MIN_VALUE;
}
}

protected final void initDTLOWE1(String s) {
if (!s.trim().isEmpty()) {
DTLOWE1 = Integer.parseInt(s);
} else {
DTLOWE1 = Integer.MIN_VALUE;
}
}

protected final void initDTLOWE1_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE1_I = Integer.parseInt(s);
} else {
DTLOWE1_I = Integer.MIN_VALUE;
}
}

protected final void initDTLOWE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWE1_IFLAG = false;
} else {
DTLOWE1_IFLAG = true;
}
}
}

protected final void initDTLOWE2(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2 = Short.parseShort(s);
} else {
DTLOWE2 = Short.MIN_VALUE;
}
}

protected final void initDTLOWE2_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2_I = Short.parseShort(s);
} else {
DTLOWE2_I = Short.MIN_VALUE;
}
}

protected final void initDTLOWE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLOWE2_IFLAG = Byte.parseByte(s);
} else {
DTLOWE2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDTLOWE3(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3 = Short.parseShort(s);
} else {
DTLOWE3 = Short.MIN_VALUE;
}
}

protected final void initDTLOWE3_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3_I = Short.parseShort(s);
} else {
DTLOWE3_I = Short.MIN_VALUE;
}
}

protected final void initDTLOWE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLOWE3_IFLAG = Byte.parseByte(s);
} else {
DTLOWE3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB1(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB1 = Byte.parseByte(s);
} else {
DTLOWEB1 = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB1_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB1_I = Byte.parseByte(s);
} else {
DTLOWEB1_I = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB1_IFLAG = false;
} else {
DTLOWEB1_IFLAG = true;
}
}
}

protected final void initDTLOWEB2(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB2 = Byte.parseByte(s);
} else {
DTLOWEB2 = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB2_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB2_I = Byte.parseByte(s);
} else {
DTLOWEB2_I = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB2_IFLAG = false;
} else {
DTLOWEB2_IFLAG = true;
}
}
}

protected final void initDTLOWEB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DTLOWEB3 = false;
} else {
DTLOWEB3 = true;
}
}
}

protected final void initDTLOWEB3_I(String s) {
if (!s.trim().isEmpty()) {
DTLOWEB3_I = Byte.parseByte(s);
} else {
DTLOWEB3_I = Byte.MIN_VALUE;
}
}

protected final void initDTLOWEB3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLOWEB3_IFLAG = false;
} else {
DTLOWEB3_IFLAG = true;
}
}
}

protected final void initDTLTYPE1(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE1 = Byte.parseByte(s);
} else {
DTLTYPE1 = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE1_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE1_I = Byte.parseByte(s);
} else {
DTLTYPE1_I = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DTLTYPE1_IFLAG = false;
} else {
DTLTYPE1_IFLAG = true;
}
}
}

protected final void initDTLTYPE2(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2 = Byte.parseByte(s);
} else {
DTLTYPE2 = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE2_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2_I = Byte.parseByte(s);
} else {
DTLTYPE2_I = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE2_IFLAG = Byte.parseByte(s);
} else {
DTLTYPE2_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE3(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3 = Byte.parseByte(s);
} else {
DTLTYPE3 = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE3_I(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3_I = Byte.parseByte(s);
} else {
DTLTYPE3_I = Byte.MIN_VALUE;
}
}

protected final void initDTLTYPE3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
DTLTYPE3_IFLAG = Byte.parseByte(s);
} else {
DTLTYPE3_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initDVAGEW4BAND(String s) {
if (!s.trim().isEmpty()) {
DVAGEW4BAND = Byte.parseByte(s);
} else {
DVAGEW4BAND = Byte.MIN_VALUE;
}
}

protected final void initDVBENU1(String s) {
if (!s.trim().isEmpty()) {
DVBENU1 = Byte.parseByte(s);
} else {
DVBENU1 = Byte.MIN_VALUE;
}
}

protected final void initDVCTCANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVCTCANNUAL = Short.parseShort(s);
} else {
DVCTCANNUAL = Short.MIN_VALUE;
}
}

protected final void initDVSAME_I(String s) {
if (!s.trim().isEmpty()) {
DVSAME_I = Byte.parseByte(s);
} else {
DVSAME_I = Byte.MIN_VALUE;
}
}

protected final void initDVSAME_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
DVSAME_IFLAG = false;
} else {
DVSAME_IFLAG = true;
}
}
}

protected final void initDVSPECANNUAL01(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL01 = Double.parseDouble(s);
} else {
DVSPECANNUAL01 = Double.NaN;
}
}

protected final void initDVSPECANNUAL02(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL02 = Double.parseDouble(s);
} else {
DVSPECANNUAL02 = Double.NaN;
}
}

protected final void initDVSPECANNUAL03(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL03 = Double.parseDouble(s);
} else {
DVSPECANNUAL03 = Double.NaN;
}
}

protected final void initDVSPECANNUAL04(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL04 = Double.parseDouble(s);
} else {
DVSPECANNUAL04 = Double.NaN;
}
}

protected final void initDVSPECANNUAL05(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL05 = Short.parseShort(s);
} else {
DVSPECANNUAL05 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL06(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL06 = Short.parseShort(s);
} else {
DVSPECANNUAL06 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL07(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL07 = Short.parseShort(s);
} else {
DVSPECANNUAL07 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL08(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL08 = Short.parseShort(s);
} else {
DVSPECANNUAL08 = Short.MIN_VALUE;
}
}

protected final void initDVSPECANNUAL09(String s) {
if (!s.trim().isEmpty()) {
DVSPECANNUAL09 = Short.parseShort(s);
} else {
DVSPECANNUAL09 = Short.MIN_VALUE;
}
}

protected final void initDVTOGTCANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOGTCANNUAL = Short.parseShort(s);
} else {
DVTOGTCANNUAL = Short.MIN_VALUE;
}
}

protected final void initDVTOTALLBENANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTALLBENANNUAL = Double.parseDouble(s);
} else {
DVTOTALLBENANNUAL = Double.NaN;
}
}

protected final void initDVTOTBENANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTBENANNUAL = Double.parseDouble(s);
} else {
DVTOTBENANNUAL = Double.NaN;
}
}

protected final void initDVTOTTAXANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVTOTTAXANNUAL = Double.parseDouble(s);
} else {
DVTOTTAXANNUAL = Double.NaN;
}
}

protected final void initDVUETIM(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
DVUETIM = false;
} else {
DVUETIM = true;
}
}
}

protected final void initDVWTCANNUAL(String s) {
if (!s.trim().isEmpty()) {
DVWTCANNUAL = Double.parseDouble(s);
} else {
DVWTCANNUAL = Double.NaN;
}
}

protected final void initETYPE(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
ETYPE = false;
} else {
ETYPE = true;
}
}
}

protected final void initFINVTY01_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY01_IFLAG = Byte.parseByte(s);
} else {
FINVTY01_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY02_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY02_IFLAG = Byte.parseByte(s);
} else {
FINVTY02_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY03_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY03_IFLAG = Byte.parseByte(s);
} else {
FINVTY03_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY04_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY04_IFLAG = Byte.parseByte(s);
} else {
FINVTY04_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY05_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY05_IFLAG = Byte.parseByte(s);
} else {
FINVTY05_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY06_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY06_IFLAG = Byte.parseByte(s);
} else {
FINVTY06_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY07_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY07_IFLAG = Byte.parseByte(s);
} else {
FINVTY07_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY08_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY08_IFLAG = Byte.parseByte(s);
} else {
FINVTY08_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY09_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY09_IFLAG = Byte.parseByte(s);
} else {
FINVTY09_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY10_IFLAG(String s) {
if (!s.trim().isEmpty()) {
FINVTY10_IFLAG = Byte.parseByte(s);
} else {
FINVTY10_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initFINVTY11_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
FINVTY11_IFLAG = false;
} else {
FINVTY11_IFLAG = true;
}
}
}

protected final void initFSHADA(String s) {
if (!s.trim().isEmpty()) {
FSHADA = Integer.parseInt(s);
} else {
FSHADA = Integer.MIN_VALUE;
}
}

protected final void initFSHADAB(String s) {
if (!s.trim().isEmpty()) {
FSHADAB = Byte.parseByte(s);
} else {
FSHADAB = Byte.MIN_VALUE;
}
}

protected final void initFSHADD(String s) {
if (!s.trim().isEmpty()) {
FSHADD = Byte.parseByte(s);
} else {
FSHADD = Byte.MIN_VALUE;
}
}

protected final void initLVTDAY(String s) {
if (!s.trim().isEmpty()) {
LVTDAY = Byte.parseByte(s);
} else {
LVTDAY = Byte.MIN_VALUE;
}
}

protected final void initNSSEC(String s) {
if (!s.trim().isEmpty()) {
NSSEC = Double.parseDouble(s);
} else {
NSSEC = Double.NaN;
}
}

protected final void initOPENSAV(String s) {
if (!s.trim().isEmpty()) {
OPENSAV = Byte.parseByte(s);
} else {
OPENSAV = Byte.MIN_VALUE;
}
}

protected final void initOSAFERE2(String s) {
if (!s.trim().isEmpty()) {
OSAFERE2 = Byte.parseByte(s);
} else {
OSAFERE2 = Byte.MIN_VALUE;
}
}

protected final void initOSAFERET1(String s) {
if (!s.trim().isEmpty()) {
OSAFERET1 = Byte.parseByte(s);
} else {
OSAFERET1 = Byte.MIN_VALUE;
}
}

protected final void initPESAME_I(String s) {
if (!s.trim().isEmpty()) {
PESAME_I = Byte.parseByte(s);
} else {
PESAME_I = Byte.MIN_VALUE;
}
}

protected final void initPESAME_IFLAG(String s) {
if (!s.trim().isEmpty()) {
PESAME_IFLAG = Byte.parseByte(s);
} else {
PESAME_IFLAG = Byte.MIN_VALUE;
}
}

protected final void initPFANVB1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB1 = false;
} else {
PFANVB1 = true;
}
}
}

protected final void initPFANVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB2 = false;
} else {
PFANVB2 = true;
}
}
}

protected final void initPFANVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB3 = false;
} else {
PFANVB3 = true;
}
}
}

protected final void initPFANVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB4 = false;
} else {
PFANVB4 = true;
}
}
}

protected final void initPFANVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB5 = false;
} else {
PFANVB5 = true;
}
}
}

protected final void initPFANVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVB6 = false;
} else {
PFANVB6 = true;
}
}
}

protected final void initPFANVI1(String s) {
if (!s.trim().isEmpty()) {
PFANVI1 = Short.parseShort(s);
} else {
PFANVI1 = Short.MIN_VALUE;
}
}

protected final void initPFANVI2(String s) {
if (!s.trim().isEmpty()) {
PFANVI2 = Short.parseShort(s);
} else {
PFANVI2 = Short.MIN_VALUE;
}
}

protected final void initPFANVI3(String s) {
if (!s.trim().isEmpty()) {
PFANVI3 = Short.parseShort(s);
} else {
PFANVI3 = Short.MIN_VALUE;
}
}

protected final void initPFANVI4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVI4 = false;
} else {
PFANVI4 = true;
}
}
}

protected final void initPFANVI5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVI5 = false;
} else {
PFANVI5 = true;
}
}
}

protected final void initPFANVI6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFANVI6 = false;
} else {
PFANVI6 = true;
}
}
}

protected final void initPFPENVB1(String s) {
if (!s.trim().isEmpty()) {
PFPENVB1 = Byte.parseByte(s);
} else {
PFPENVB1 = Byte.MIN_VALUE;
}
}

protected final void initPFPENVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB2 = false;
} else {
PFPENVB2 = true;
}
}
}

protected final void initPFPENVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB3 = false;
} else {
PFPENVB3 = true;
}
}
}

protected final void initPFPENVB4(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB4 = false;
} else {
PFPENVB4 = true;
}
}
}

protected final void initPFPENVB5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB5 = false;
} else {
PFPENVB5 = true;
}
}
}

protected final void initPFPENVB6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVB6 = false;
} else {
PFPENVB6 = true;
}
}
}

protected final void initPFPENVI1(String s) {
if (!s.trim().isEmpty()) {
PFPENVI1 = Integer.parseInt(s);
} else {
PFPENVI1 = Integer.MIN_VALUE;
}
}

protected final void initPFPENVI2(String s) {
if (!s.trim().isEmpty()) {
PFPENVI2 = Short.parseShort(s);
} else {
PFPENVI2 = Short.MIN_VALUE;
}
}

protected final void initPFPENVI3(String s) {
if (!s.trim().isEmpty()) {
PFPENVI3 = Short.parseShort(s);
} else {
PFPENVI3 = Short.MIN_VALUE;
}
}

protected final void initPFPENVI4(String s) {
if (!s.trim().isEmpty()) {
PFPENVI4 = Short.parseShort(s);
} else {
PFPENVI4 = Short.MIN_VALUE;
}
}

protected final void initPFPENVI5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVI5 = false;
} else {
PFPENVI5 = true;
}
}
}

protected final void initPFPENVI6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PFPENVI6 = false;
} else {
PFPENVI6 = true;
}
}
}

protected final void initPOANVB1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANVB1 = false;
} else {
POANVB1 = true;
}
}
}

protected final void initPOANVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POANVB2 = false;
} else {
POANVB2 = true;
}
}
}

protected final void initPOANVI1(String s) {
if (!s.trim().isEmpty()) {
POANVI1 = Short.parseShort(s);
} else {
POANVI1 = Short.MIN_VALUE;
}
}

protected final void initPOANVI2(String s) {
if (!s.trim().isEmpty()) {
POANVI2 = Short.parseShort(s);
} else {
POANVI2 = Short.MIN_VALUE;
}
}

protected final void initPOPENVB1(String s) {
if (!s.trim().isEmpty()) {
POPENVB1 = Byte.parseByte(s);
} else {
POPENVB1 = Byte.MIN_VALUE;
}
}

protected final void initPOPENVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
POPENVB2 = false;
} else {
POPENVB2 = true;
}
}
}

protected final void initPOPENVI(String s) {
if (!s.trim().isEmpty()) {
POPENVI = Integer.parseInt(s);
} else {
POPENVI = Integer.MIN_VALUE;
}
}

protected final void initPOPENVI2(String s) {
if (!s.trim().isEmpty()) {
POPENVI2 = Integer.parseInt(s);
} else {
POPENVI2 = Integer.MIN_VALUE;
}
}

protected final void initPPANVB1(String s) {
if (!s.trim().isEmpty()) {
PPANVB1 = Byte.parseByte(s);
} else {
PPANVB1 = Byte.MIN_VALUE;
}
}

protected final void initPPANVB2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANVB2 = false;
} else {
PPANVB2 = true;
}
}
}

protected final void initPPANVB3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPANVB3 = false;
} else {
PPANVB3 = true;
}
}
}

protected final void initPPANVI1(String s) {
if (!s.trim().isEmpty()) {
PPANVI1 = Integer.parseInt(s);
} else {
PPANVI1 = Integer.MIN_VALUE;
}
}

protected final void initPPANVI2(String s) {
if (!s.trim().isEmpty()) {
PPANVI2 = Short.parseShort(s);
} else {
PPANVI2 = Short.MIN_VALUE;
}
}

protected final void initPPANVI3(String s) {
if (!s.trim().isEmpty()) {
PPANVI3 = Short.parseShort(s);
} else {
PPANVI3 = Short.MIN_VALUE;
}
}

protected final void initPPFAWH16(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH16 = false;
} else {
PPFAWH16 = true;
}
}
}

protected final void initPPFAWH17(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH17 = false;
} else {
PPFAWH17 = true;
}
}
}

protected final void initPPFAWH18(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
PPFAWH18 = false;
} else {
PPFAWH18 = true;
}
}
}

protected final void initPSCHY_T(String s) {
if (!s.trim().isEmpty()) {
PSCHY_T = Byte.parseByte(s);
} else {
PSCHY_T = Byte.MIN_VALUE;
}
}

protected final void initRF(String s) {
if (!s.trim().isEmpty()) {
RF = Byte.parseByte(s);
} else {
RF = Byte.MIN_VALUE;
}
}

protected final void initRPCRET1(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
RPCRET1 = false;
} else {
RPCRET1 = true;
}
}
}

protected final void initRPCRET2(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
RPCRET2 = false;
} else {
RPCRET2 = true;
}
}
}

protected final void initRPCRET3(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
RPCRET3 = false;
} else {
RPCRET3 = true;
}
}
}

protected final void initRPDBCAL_F(String s) {
if (!s.trim().isEmpty()) {
RPDBCAL_F = Byte.parseByte(s);
} else {
RPDBCAL_F = Byte.MIN_VALUE;
}
}

protected final void initRS(String s) {
if (!s.trim().isEmpty()) {
RS = Byte.parseByte(s);
} else {
RS = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT1(String s) {
if (!s.trim().isEmpty()) {
SOURC2PMULT1 = Byte.parseByte(s);
} else {
SOURC2PMULT1 = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT2(String s) {
if (!s.trim().isEmpty()) {
SOURC2PMULT2 = Byte.parseByte(s);
} else {
SOURC2PMULT2 = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT3(String s) {
if (!s.trim().isEmpty()) {
SOURC2PMULT3 = Byte.parseByte(s);
} else {
SOURC2PMULT3 = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT4(String s) {
if (!s.trim().isEmpty()) {
SOURC2PMULT4 = Byte.parseByte(s);
} else {
SOURC2PMULT4 = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT5(String s) {
if (!s.trim().isEmpty()) {
SOURC2PMULT5 = Byte.parseByte(s);
} else {
SOURC2PMULT5 = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT6(String s) {
if (!s.trim().isEmpty()) {
SOURC2PMULT6 = Byte.parseByte(s);
} else {
SOURC2PMULT6 = Byte.MIN_VALUE;
}
}

protected final void initSOURC2PMULT7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SOURC2PMULT7 = false;
} else {
SOURC2PMULT7 = true;
}
}
}

protected final void initSOURC2PMULT8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SOURC2PMULT8 = false;
} else {
SOURC2PMULT8 = true;
}
}
}

protected final void initSOURC2PMULT9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SOURC2PMULT9 = false;
} else {
SOURC2PMULT9 = true;
}
}
}

protected final void initSPECIAL1(String s) {
if (!s.trim().isEmpty()) {
SPECIAL1 = Byte.parseByte(s);
} else {
SPECIAL1 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL2(String s) {
if (!s.trim().isEmpty()) {
SPECIAL2 = Byte.parseByte(s);
} else {
SPECIAL2 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL3(String s) {
if (!s.trim().isEmpty()) {
SPECIAL3 = Byte.parseByte(s);
} else {
SPECIAL3 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL4(String s) {
if (!s.trim().isEmpty()) {
SPECIAL4 = Byte.parseByte(s);
} else {
SPECIAL4 = Byte.MIN_VALUE;
}
}

protected final void initSPECIAL5(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL5 = false;
} else {
SPECIAL5 = true;
}
}
}

protected final void initSPECIAL6(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL6 = false;
} else {
SPECIAL6 = true;
}
}
}

protected final void initSPECIAL7(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL7 = false;
} else {
SPECIAL7 = true;
}
}
}

protected final void initSPECIAL8(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL8 = false;
} else {
SPECIAL8 = true;
}
}
}

protected final void initSPECIAL9(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == -7) {
SPECIAL9 = false;
} else {
SPECIAL9 = true;
}
}
}

protected final void initSPECINCL1(String s) {
if (!s.trim().isEmpty()) {
SPECINCL1 = Byte.parseByte(s);
} else {
SPECINCL1 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL2(String s) {
if (!s.trim().isEmpty()) {
SPECINCL2 = Byte.parseByte(s);
} else {
SPECINCL2 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL3(String s) {
if (!s.trim().isEmpty()) {
SPECINCL3 = Byte.parseByte(s);
} else {
SPECINCL3 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL4(String s) {
if (!s.trim().isEmpty()) {
SPECINCL4 = Byte.parseByte(s);
} else {
SPECINCL4 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL5(String s) {
if (!s.trim().isEmpty()) {
SPECINCL5 = Byte.parseByte(s);
} else {
SPECINCL5 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL6(String s) {
if (!s.trim().isEmpty()) {
SPECINCL6 = Byte.parseByte(s);
} else {
SPECINCL6 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL7(String s) {
if (!s.trim().isEmpty()) {
SPECINCL7 = Byte.parseByte(s);
} else {
SPECINCL7 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL8(String s) {
if (!s.trim().isEmpty()) {
SPECINCL8 = Byte.parseByte(s);
} else {
SPECINCL8 = Byte.MIN_VALUE;
}
}

protected final void initSPECINCL9(String s) {
if (!s.trim().isEmpty()) {
SPECINCL9 = Byte.parseByte(s);
} else {
SPECINCL9 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD1(String s) {
if (!s.trim().isEmpty()) {
SPECPD1 = Byte.parseByte(s);
} else {
SPECPD1 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD2(String s) {
if (!s.trim().isEmpty()) {
SPECPD2 = Short.parseShort(s);
} else {
SPECPD2 = Short.MIN_VALUE;
}
}

protected final void initSPECPD3(String s) {
if (!s.trim().isEmpty()) {
SPECPD3 = Byte.parseByte(s);
} else {
SPECPD3 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD4(String s) {
if (!s.trim().isEmpty()) {
SPECPD4 = Byte.parseByte(s);
} else {
SPECPD4 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD5(String s) {
if (!s.trim().isEmpty()) {
SPECPD5 = Byte.parseByte(s);
} else {
SPECPD5 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD6(String s) {
if (!s.trim().isEmpty()) {
SPECPD6 = Byte.parseByte(s);
} else {
SPECPD6 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD7(String s) {
if (!s.trim().isEmpty()) {
SPECPD7 = Byte.parseByte(s);
} else {
SPECPD7 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD8(String s) {
if (!s.trim().isEmpty()) {
SPECPD8 = Byte.parseByte(s);
} else {
SPECPD8 = Byte.MIN_VALUE;
}
}

protected final void initSPECPD9(String s) {
if (!s.trim().isEmpty()) {
SPECPD9 = Byte.parseByte(s);
} else {
SPECPD9 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN1(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN1 = Byte.parseByte(s);
} else {
SPECWHEN1 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN2(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN2 = Byte.parseByte(s);
} else {
SPECWHEN2 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN3(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN3 = Byte.parseByte(s);
} else {
SPECWHEN3 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN4(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN4 = Byte.parseByte(s);
} else {
SPECWHEN4 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN5(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN5 = Byte.parseByte(s);
} else {
SPECWHEN5 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN6(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN6 = Byte.parseByte(s);
} else {
SPECWHEN6 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN7(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN7 = Byte.parseByte(s);
} else {
SPECWHEN7 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN8(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN8 = Byte.parseByte(s);
} else {
SPECWHEN8 = Byte.MIN_VALUE;
}
}

protected final void initSPECWHEN9(String s) {
if (!s.trim().isEmpty()) {
SPECWHEN9 = Byte.parseByte(s);
} else {
SPECWHEN9 = Byte.MIN_VALUE;
}
}

protected final void initSPENDM(String s) {
if (!s.trim().isEmpty()) {
SPENDM = Byte.parseByte(s);
} else {
SPENDM = Byte.MIN_VALUE;
}
}

protected final void initUPROP1_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP1_IFLAG = false;
} else {
UPROP1_IFLAG = true;
}
}
}

protected final void initUPROP2_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP2_IFLAG = false;
} else {
UPROP2_IFLAG = true;
}
}
}

protected final void initUPROP3_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP3_IFLAG = false;
} else {
UPROP3_IFLAG = true;
}
}
}

protected final void initUPROP4_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP4_IFLAG = false;
} else {
UPROP4_IFLAG = true;
}
}
}

protected final void initUPROP5_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP5_IFLAG = false;
} else {
UPROP5_IFLAG = true;
}
}
}

protected final void initUPROP6_IFLAG(String s) {
if (!s.trim().isEmpty()) {
byte b = Byte.parseByte(s);
if (b == 0) {
UPROP6_IFLAG = false;
} else {
UPROP6_IFLAG = true;
}
}
}

protected final void initW1_LONGWGT(String s) {
if (!s.trim().isEmpty()) {
W1_LONGWGT = Double.parseDouble(s);
} else {
W1_LONGWGT = Double.NaN;
}
}

protected final void initW3_LONGWGT(String s) {
if (!s.trim().isEmpty()) {
W3_LONGWGT = Double.parseDouble(s);
} else {
W3_LONGWGT = Double.NaN;
}
}

protected final void initW4XSHHWGT(String s) {
if (!s.trim().isEmpty()) {
W4XSHHWGT = Double.parseDouble(s);
} else {
W4XSHHWGT = Double.NaN;
}
}

protected final void initW4XSPERSWGT(String s) {
if (!s.trim().isEmpty()) {
W4XSPERSWGT = Double.parseDouble(s);
} else {
W4XSPERSWGT = Double.NaN;
}
}

protected final void initWHOREATT(String s) {
if (!s.trim().isEmpty()) {
WHOREATT = Byte.parseByte(s);
} else {
WHOREATT = Byte.MIN_VALUE;
}
}

protected final void initWHORECAR(String s) {
if (!s.trim().isEmpty()) {
WHORECAR = Byte.parseByte(s);
} else {
WHORECAR = Byte.MIN_VALUE;
}
}

protected final void initWHOREMOB(String s) {
if (!s.trim().isEmpty()) {
WHOREMOB = Byte.parseByte(s);
} else {
WHOREMOB = Byte.MIN_VALUE;
}
}

protected final void initWTCPD(String s) {
if (!s.trim().isEmpty()) {
WTCPD = Byte.parseByte(s);
} else {
WTCPD = Byte.MIN_VALUE;
}
}

public byte getANYOTHERB_I() {
return ANYOTHERB_I;
}

public byte getBENTYPE01() {
return BENTYPE01;
}

public byte getBENTYPE02() {
return BENTYPE02;
}

public byte getBENTYPE03() {
return BENTYPE03;
}

public byte getBENTYPE04() {
return BENTYPE04;
}

public byte getBENTYPE05() {
return BENTYPE05;
}

public byte getBENTYPE06() {
return BENTYPE06;
}

public boolean getBENTYPE07() {
return BENTYPE07;
}

public boolean getBENTYPE08() {
return BENTYPE08;
}

public boolean getBENTYPE09() {
return BENTYPE09;
}

public boolean getBENTYPE10() {
return BENTYPE10;
}

public boolean getBENTYPE11() {
return BENTYPE11;
}

public boolean getBENTYPE12() {
return BENTYPE12;
}

public byte getCOMBPD() {
return COMBPD;
}

public byte getCREDTYPE1() {
return CREDTYPE1;
}

public byte getCREDTYPE2() {
return CREDTYPE2;
}

public byte getCTCPD() {
return CTCPD;
}

public byte getCTOGSEP() {
return CTOGSEP;
}

public byte getDBURD___W4() {
return DBURD___W4;
}

public int getDTLOWE1() {
return DTLOWE1;
}

public int getDTLOWE1_I() {
return DTLOWE1_I;
}

public boolean getDTLOWE1_IFLAG() {
return DTLOWE1_IFLAG;
}

public short getDTLOWE2() {
return DTLOWE2;
}

public short getDTLOWE2_I() {
return DTLOWE2_I;
}

public byte getDTLOWE2_IFLAG() {
return DTLOWE2_IFLAG;
}

public short getDTLOWE3() {
return DTLOWE3;
}

public short getDTLOWE3_I() {
return DTLOWE3_I;
}

public byte getDTLOWE3_IFLAG() {
return DTLOWE3_IFLAG;
}

public byte getDTLOWEB1() {
return DTLOWEB1;
}

public byte getDTLOWEB1_I() {
return DTLOWEB1_I;
}

public boolean getDTLOWEB1_IFLAG() {
return DTLOWEB1_IFLAG;
}

public byte getDTLOWEB2() {
return DTLOWEB2;
}

public byte getDTLOWEB2_I() {
return DTLOWEB2_I;
}

public boolean getDTLOWEB2_IFLAG() {
return DTLOWEB2_IFLAG;
}

public boolean getDTLOWEB3() {
return DTLOWEB3;
}

public byte getDTLOWEB3_I() {
return DTLOWEB3_I;
}

public boolean getDTLOWEB3_IFLAG() {
return DTLOWEB3_IFLAG;
}

public byte getDTLTYPE1() {
return DTLTYPE1;
}

public byte getDTLTYPE1_I() {
return DTLTYPE1_I;
}

public boolean getDTLTYPE1_IFLAG() {
return DTLTYPE1_IFLAG;
}

public byte getDTLTYPE2() {
return DTLTYPE2;
}

public byte getDTLTYPE2_I() {
return DTLTYPE2_I;
}

public byte getDTLTYPE2_IFLAG() {
return DTLTYPE2_IFLAG;
}

public byte getDTLTYPE3() {
return DTLTYPE3;
}

public byte getDTLTYPE3_I() {
return DTLTYPE3_I;
}

public byte getDTLTYPE3_IFLAG() {
return DTLTYPE3_IFLAG;
}

public byte getDVAGEW4BAND() {
return DVAGEW4BAND;
}

public byte getDVBENU1() {
return DVBENU1;
}

public short getDVCTCANNUAL() {
return DVCTCANNUAL;
}

public byte getDVSAME_I() {
return DVSAME_I;
}

public boolean getDVSAME_IFLAG() {
return DVSAME_IFLAG;
}

public double getDVSPECANNUAL01() {
return DVSPECANNUAL01;
}

public double getDVSPECANNUAL02() {
return DVSPECANNUAL02;
}

public double getDVSPECANNUAL03() {
return DVSPECANNUAL03;
}

public double getDVSPECANNUAL04() {
return DVSPECANNUAL04;
}

public short getDVSPECANNUAL05() {
return DVSPECANNUAL05;
}

public short getDVSPECANNUAL06() {
return DVSPECANNUAL06;
}

public short getDVSPECANNUAL07() {
return DVSPECANNUAL07;
}

public short getDVSPECANNUAL08() {
return DVSPECANNUAL08;
}

public short getDVSPECANNUAL09() {
return DVSPECANNUAL09;
}

public short getDVTOGTCANNUAL() {
return DVTOGTCANNUAL;
}

public double getDVTOTALLBENANNUAL() {
return DVTOTALLBENANNUAL;
}

public double getDVTOTBENANNUAL() {
return DVTOTBENANNUAL;
}

public double getDVTOTTAXANNUAL() {
return DVTOTTAXANNUAL;
}

public boolean getDVUETIM() {
return DVUETIM;
}

public double getDVWTCANNUAL() {
return DVWTCANNUAL;
}

public boolean getETYPE() {
return ETYPE;
}

public byte getFINVTY01_IFLAG() {
return FINVTY01_IFLAG;
}

public byte getFINVTY02_IFLAG() {
return FINVTY02_IFLAG;
}

public byte getFINVTY03_IFLAG() {
return FINVTY03_IFLAG;
}

public byte getFINVTY04_IFLAG() {
return FINVTY04_IFLAG;
}

public byte getFINVTY05_IFLAG() {
return FINVTY05_IFLAG;
}

public byte getFINVTY06_IFLAG() {
return FINVTY06_IFLAG;
}

public byte getFINVTY07_IFLAG() {
return FINVTY07_IFLAG;
}

public byte getFINVTY08_IFLAG() {
return FINVTY08_IFLAG;
}

public byte getFINVTY09_IFLAG() {
return FINVTY09_IFLAG;
}

public byte getFINVTY10_IFLAG() {
return FINVTY10_IFLAG;
}

public boolean getFINVTY11_IFLAG() {
return FINVTY11_IFLAG;
}

public int getFSHADA() {
return FSHADA;
}

public byte getFSHADAB() {
return FSHADAB;
}

public byte getFSHADD() {
return FSHADD;
}

public byte getLVTDAY() {
return LVTDAY;
}

public double getNSSEC() {
return NSSEC;
}

public byte getOPENSAV() {
return OPENSAV;
}

public byte getOSAFERE2() {
return OSAFERE2;
}

public byte getOSAFERET1() {
return OSAFERET1;
}

public byte getPESAME_I() {
return PESAME_I;
}

public byte getPESAME_IFLAG() {
return PESAME_IFLAG;
}

public boolean getPFANVB1() {
return PFANVB1;
}

public boolean getPFANVB2() {
return PFANVB2;
}

public boolean getPFANVB3() {
return PFANVB3;
}

public boolean getPFANVB4() {
return PFANVB4;
}

public boolean getPFANVB5() {
return PFANVB5;
}

public boolean getPFANVB6() {
return PFANVB6;
}

public short getPFANVI1() {
return PFANVI1;
}

public short getPFANVI2() {
return PFANVI2;
}

public short getPFANVI3() {
return PFANVI3;
}

public boolean getPFANVI4() {
return PFANVI4;
}

public boolean getPFANVI5() {
return PFANVI5;
}

public boolean getPFANVI6() {
return PFANVI6;
}

public byte getPFPENVB1() {
return PFPENVB1;
}

public boolean getPFPENVB2() {
return PFPENVB2;
}

public boolean getPFPENVB3() {
return PFPENVB3;
}

public boolean getPFPENVB4() {
return PFPENVB4;
}

public boolean getPFPENVB5() {
return PFPENVB5;
}

public boolean getPFPENVB6() {
return PFPENVB6;
}

public int getPFPENVI1() {
return PFPENVI1;
}

public short getPFPENVI2() {
return PFPENVI2;
}

public short getPFPENVI3() {
return PFPENVI3;
}

public short getPFPENVI4() {
return PFPENVI4;
}

public boolean getPFPENVI5() {
return PFPENVI5;
}

public boolean getPFPENVI6() {
return PFPENVI6;
}

public boolean getPOANVB1() {
return POANVB1;
}

public boolean getPOANVB2() {
return POANVB2;
}

public short getPOANVI1() {
return POANVI1;
}

public short getPOANVI2() {
return POANVI2;
}

public byte getPOPENVB1() {
return POPENVB1;
}

public boolean getPOPENVB2() {
return POPENVB2;
}

public int getPOPENVI() {
return POPENVI;
}

public int getPOPENVI2() {
return POPENVI2;
}

public byte getPPANVB1() {
return PPANVB1;
}

public boolean getPPANVB2() {
return PPANVB2;
}

public boolean getPPANVB3() {
return PPANVB3;
}

public int getPPANVI1() {
return PPANVI1;
}

public short getPPANVI2() {
return PPANVI2;
}

public short getPPANVI3() {
return PPANVI3;
}

public boolean getPPFAWH16() {
return PPFAWH16;
}

public boolean getPPFAWH17() {
return PPFAWH17;
}

public boolean getPPFAWH18() {
return PPFAWH18;
}

public byte getPSCHY_T() {
return PSCHY_T;
}

public byte getRF() {
return RF;
}

public boolean getRPCRET1() {
return RPCRET1;
}

public boolean getRPCRET2() {
return RPCRET2;
}

public boolean getRPCRET3() {
return RPCRET3;
}

public byte getRPDBCAL_F() {
return RPDBCAL_F;
}

public byte getRS() {
return RS;
}

public byte getSOURC2PMULT1() {
return SOURC2PMULT1;
}

public byte getSOURC2PMULT2() {
return SOURC2PMULT2;
}

public byte getSOURC2PMULT3() {
return SOURC2PMULT3;
}

public byte getSOURC2PMULT4() {
return SOURC2PMULT4;
}

public byte getSOURC2PMULT5() {
return SOURC2PMULT5;
}

public byte getSOURC2PMULT6() {
return SOURC2PMULT6;
}

public boolean getSOURC2PMULT7() {
return SOURC2PMULT7;
}

public boolean getSOURC2PMULT8() {
return SOURC2PMULT8;
}

public boolean getSOURC2PMULT9() {
return SOURC2PMULT9;
}

public byte getSPECIAL1() {
return SPECIAL1;
}

public byte getSPECIAL2() {
return SPECIAL2;
}

public byte getSPECIAL3() {
return SPECIAL3;
}

public byte getSPECIAL4() {
return SPECIAL4;
}

public boolean getSPECIAL5() {
return SPECIAL5;
}

public boolean getSPECIAL6() {
return SPECIAL6;
}

public boolean getSPECIAL7() {
return SPECIAL7;
}

public boolean getSPECIAL8() {
return SPECIAL8;
}

public boolean getSPECIAL9() {
return SPECIAL9;
}

public byte getSPECINCL1() {
return SPECINCL1;
}

public byte getSPECINCL2() {
return SPECINCL2;
}

public byte getSPECINCL3() {
return SPECINCL3;
}

public byte getSPECINCL4() {
return SPECINCL4;
}

public byte getSPECINCL5() {
return SPECINCL5;
}

public byte getSPECINCL6() {
return SPECINCL6;
}

public byte getSPECINCL7() {
return SPECINCL7;
}

public byte getSPECINCL8() {
return SPECINCL8;
}

public byte getSPECINCL9() {
return SPECINCL9;
}

public byte getSPECPD1() {
return SPECPD1;
}

public short getSPECPD2() {
return SPECPD2;
}

public byte getSPECPD3() {
return SPECPD3;
}

public byte getSPECPD4() {
return SPECPD4;
}

public byte getSPECPD5() {
return SPECPD5;
}

public byte getSPECPD6() {
return SPECPD6;
}

public byte getSPECPD7() {
return SPECPD7;
}

public byte getSPECPD8() {
return SPECPD8;
}

public byte getSPECPD9() {
return SPECPD9;
}

public byte getSPECWHEN1() {
return SPECWHEN1;
}

public byte getSPECWHEN2() {
return SPECWHEN2;
}

public byte getSPECWHEN3() {
return SPECWHEN3;
}

public byte getSPECWHEN4() {
return SPECWHEN4;
}

public byte getSPECWHEN5() {
return SPECWHEN5;
}

public byte getSPECWHEN6() {
return SPECWHEN6;
}

public byte getSPECWHEN7() {
return SPECWHEN7;
}

public byte getSPECWHEN8() {
return SPECWHEN8;
}

public byte getSPECWHEN9() {
return SPECWHEN9;
}

public byte getSPENDM() {
return SPENDM;
}

public boolean getUPROP1_IFLAG() {
return UPROP1_IFLAG;
}

public boolean getUPROP2_IFLAG() {
return UPROP2_IFLAG;
}

public boolean getUPROP3_IFLAG() {
return UPROP3_IFLAG;
}

public boolean getUPROP4_IFLAG() {
return UPROP4_IFLAG;
}

public boolean getUPROP5_IFLAG() {
return UPROP5_IFLAG;
}

public boolean getUPROP6_IFLAG() {
return UPROP6_IFLAG;
}

public double getW1_LONGWGT() {
return W1_LONGWGT;
}

public double getW3_LONGWGT() {
return W3_LONGWGT;
}

public double getW4XSHHWGT() {
return W4XSHHWGT;
}

public double getW4XSPERSWGT() {
return W4XSPERSWGT;
}

public byte getWHOREATT() {
return WHOREATT;
}

public byte getWHORECAR() {
return WHORECAR;
}

public byte getWHOREMOB() {
return WHOREMOB;
}

public byte getWTCPD() {
return WTCPD;
}

public WaAS_W4PRecord(String line) {
s = line.split("\t");
initPERSONW1(s[0]);
initYEARW1(s[1]);
initMONTHW1(s[2]);
initPERSONW2(s[3]);
initYEARW2(s[4]);
initMONTHW2(s[5]);
initPERSONW3(s[6]);
initYEARW3(s[7]);
initMONTHW3(s[8]);
initPERSONW4(s[9]);
initYEAR(s[10]);
initMONTH(s[11]);
initW4XSHHWGT(s[12]);
initW4XSPERSWGT(s[13]);
initTYPE(s[14]);
initP_FLAG1(s[15]);
initP_FLAG3(s[16]);
initP_FLAG4(s[17]);
initW1_LONGWGT(s[18]);
initW3_LONGWGT(s[19]);
initIOUT1(s[20]);
initHOUT(s[21]);
initUPROP1(s[22]);
initUPROP2(s[23]);
initUPROP3(s[24]);
initUPROP4(s[25]);
initUPROP5(s[26]);
initUNMTYP(s[27]);
initUNUMHS(s[28]);
initUBUYLET(s[29]);
initUNUMBD(s[30]);
initUNUMLA(s[31]);
initUNUMOV(s[32]);
initUNUMRE(s[33]);
initUPRTYP1(s[34]);
initUPRTYP2(s[35]);
initUPRTYP3(s[36]);
initUPRTYP4(s[37]);
initUPRTYP5(s[38]);
initUPRTYP6(s[39]);
initUPRTYP7(s[40]);
initUPRTYP8(s[41]);
initUPRTYP9(s[42]);
initUPRTYP10(s[43]);
initUPRTYP11(s[44]);
initUPRTYP12(s[45]);
initUPRTYP13(s[46]);
initUPRTYP14(s[47]);
initUPRTYP15(s[48]);
initUPRTYP16(s[49]);
initUPRTYP17(s[50]);
initUPRTYP18(s[51]);
initUPRSH1(s[52]);
initUPRSH2(s[53]);
initUPRSH3(s[54]);
initUPRSH4(s[55]);
initUPRSH5(s[56]);
initUBUYTOL1(s[57]);
initUBUYTOL2(s[58]);
initUBUYTOL3(s[59]);
initUBUYTOL4(s[60]);
initUBUYTOL5(s[61]);
initUBUYTOL6(s[62]);
initUBUYTOL7(s[63]);
initUBUYTOL8(s[64]);
initUBUYTOL9(s[65]);
initUBUYTOL10(s[66]);
initUBUYTOL11(s[67]);
initUBUYTOL12(s[68]);
initUDEBTBS_I(s[69]);
initUDEBTBS_IFLAG(s[70]);
initUDEBTBL_I(s[71]);
initUDEBTBL_IFLAG(s[72]);
initUDEBTBO_I(s[73]);
initUDEBTBO_IFLAG(s[74]);
initUDEBTBLU_I(s[75]);
initUDEBTBLU_IFLAG(s[76]);
initUDEBTBOS_I(s[77]);
initUDEBTBOS_IFLAG(s[78]);
initUDEBTBOR_I(s[79]);
initUDEBTBOR_IFLAG(s[80]);
initUDEBTS_I(s[81]);
initUDEBTS_IFLAG(s[82]);
initUDEBTL_I(s[83]);
initUDEBTL_IFLAG(s[84]);
initUDEBTO_I(s[85]);
initUDEBTO_IFLAG(s[86]);
initUDEBTLU_I(s[87]);
initUDEBTLU_IFLAG(s[88]);
initUDEBTOS_I(s[89]);
initUDEBTOS_IFLAG(s[90]);
initUDEBTOR_I(s[91]);
initUDEBTOR_IFLAG(s[92]);
initUPROP1_I(s[93]);
initUPROP1_IFLAG(s[94]);
initUPROP2_I(s[95]);
initUPROP2_IFLAG(s[96]);
initUPROP3_I(s[97]);
initUPROP3_IFLAG(s[98]);
initUPROP4_I(s[99]);
initUPROP4_IFLAG(s[100]);
initUPROP5_I(s[101]);
initUPROP5_IFLAG(s[102]);
initUPROP6_I(s[103]);
initUPROP6_IFLAG(s[104]);
initUNUMHS_I(s[105]);
initUNUMHS_IFLAG(s[106]);
initUBUYLET_I(s[107]);
initUBUYLET_IFLAG(s[108]);
initUNUMBD_I(s[109]);
initUNUMBD_IFLAG(s[110]);
initUNUMLA_I(s[111]);
initUNUMLA_IFLAG(s[112]);
initUNUMOV_I(s[113]);
initUNUMOV_IFLAG(s[114]);
initUNUMRE_I(s[115]);
initUNUMRE_IFLAG(s[116]);
initUVALBS_I(s[117]);
initUVALBS_IFLAG(s[118]);
initUVALBL_I(s[119]);
initUVALBL_IFLAG(s[120]);
initUVALBO_I(s[121]);
initUVALBO_IFLAG(s[122]);
initUVALBLU_I(s[123]);
initUVALBLU_IFLAG(s[124]);
initUVALBOS_I(s[125]);
initUVALBOS_IFLAG(s[126]);
initUVALBOR_I(s[127]);
initUVALBOR_IFLAG(s[128]);
initUVALS_I(s[129]);
initUVALS_IFLAG(s[130]);
initUVALL_I(s[131]);
initUVALL_IFLAG(s[132]);
initUVALO_I(s[133]);
initUVALO_IFLAG(s[134]);
initUVALLU_I(s[135]);
initUVALLU_IFLAG(s[136]);
initUVALOS_I(s[137]);
initUVALOS_IFLAG(s[138]);
initUVALOR_I(s[139]);
initUVALOR_IFLAG(s[140]);
initUGDVBS_I(s[141]);
initUGDVBS_IFLAG(s[142]);
initUGDVBL_I(s[143]);
initUGDVBL_IFLAG(s[144]);
initUGDVBOS_I(s[145]);
initUGDVBOS_IFLAG(s[146]);
initDVHSEDEBT(s[147]);
initDVBLTDEBT(s[148]);
initDVBLDDEBT(s[149]);
initDVLUKDEBT(s[150]);
initDVLOSDEBT(s[151]);
initDVOPRDEBT(s[152]);
initDVHSEVAL(s[153]);
initDVBLTVAL(s[154]);
initDVBLDVAL(s[155]);
initDVLUKVAL(s[156]);
initDVLOSVAL(s[157]);
initDVOPRVAL(s[158]);
initOTHMORT(s[159]);
initHOUSGDST(s[160]);
initBUYLGDST(s[161]);
initHOUSGDSOST(s[162]);
initPHYSHOUSGDST(s[163]);
initPHYSBUYLGDST(s[164]);
initPHYSHOUSGDSOST(s[165]);
initUVALS(s[166]);
initUVALBS(s[167]);
initUDEBTS(s[168]);
initUDEBTBS(s[169]);
initUGDVBS(s[170]);
initUVALL(s[171]);
initUVALBL(s[172]);
initUDEBTL(s[173]);
initUDEBTBL(s[174]);
initUGDVBL(s[175]);
initUVALO(s[176]);
initUVALBO(s[177]);
initUDEBTO(s[178]);
initUDEBTBO(s[179]);
initUVALLU(s[180]);
initUVALBLU(s[181]);
initUDEBTLU(s[182]);
initUDEBTBLU(s[183]);
initUVALOS(s[184]);
initUVALBOS(s[185]);
initUDEBTOS(s[186]);
initUDEBTBOS(s[187]);
initUGDVBOS(s[188]);
initUVALOR(s[189]);
initUVALBOR(s[190]);
initUDEBTOR(s[191]);
initUDEBTBOR(s[192]);
initTRUST(s[193]);
initFSACSH_I(s[194]);
initFSNUMIN_I(s[195]);
initFSINVAL_I(s[196]);
initFSSHVAL_I(s[197]);
initFSNUMSH_I(s[198]);
initFINVTY01_I(s[199]);
initFINVTY02_I(s[200]);
initFINVTY03_I(s[201]);
initFINVTY04_I(s[202]);
initFINVTY05_I(s[203]);
initFINVTY06_I(s[204]);
initFINVTY07_I(s[205]);
initFINVTY08_I(s[206]);
initFINVTY09_I(s[207]);
initFINVTY10_I(s[208]);
initFINVTY11_I(s[209]);
initFCACSH_I(s[210]);
initFCNUMSH_I(s[211]);
initFCNUMIN_I(s[212]);
initFCOVDSH_I(s[213]);
initFCOVNSH_I(s[214]);
initDCOSHV1_I(s[215]);
initDCOSHV2_I(s[216]);
initDCOSHV3_I(s[217]);
initFCSHVAL_I(s[218]);
initFCOVDIN_I(s[219]);
initFCOVNIN_I(s[220]);
initDCOINV1_I(s[221]);
initDCOINV2_I(s[222]);
initDCOINV3_I(s[223]);
initDCOINV4_I(s[224]);
initDCOINV5_I(s[225]);
initFCINVAL_I(s[226]);
initFISA1_I(s[227]);
initFISA2_I(s[228]);
initFCISAV_I(s[229]);
initFIISAV_I(s[230]);
initFKISAV_I(s[231]);
initFBONDV_I(s[232]);
initFCOLLV_I(s[233]);
initFESHA_I(s[234]);
initFESHAV_I(s[235]);
initFEOPTV_I(s[236]);
initFSHARE1_I(s[237]);
initFSHARE2_I(s[238]);
initFSHARE3_I(s[239]);
initFSHUKV_I(s[240]);
initFSHOSV_I(s[241]);
initFNSVAL_I(s[242]);
initFGILTS1_I(s[243]);
initFGILTS2_I(s[244]);
initFGILTS3_I(s[245]);
initFGILTS4_I(s[246]);
initFGLTUKV_I(s[247]);
initFGLTFOV_I(s[248]);
initFINS_I(s[249]);
initFINSV_I(s[250]);
initFLPROD1_I(s[251]);
initFLPROD2_I(s[252]);
initFLPROD3_I(s[253]);
initFLPROD4_I(s[254]);
initFLFENV_I(s[255]);
initFLFSIV_I(s[256]);
initFLFFSV_I(s[257]);
initFLFTEV_I(s[258]);
initFINVOTV_I(s[259]);
initFSACSH_IFLAG(s[260]);
initFSNUMIN_IFLAG(s[261]);
initFSSHVAL_IFLAG(s[262]);
initFSINVAL_IFLAG(s[263]);
initFSNUMSH_IFLAG(s[264]);
initFINVTY01_IFLAG(s[265]);
initFINVTY02_IFLAG(s[266]);
initFINVTY03_IFLAG(s[267]);
initFINVTY04_IFLAG(s[268]);
initFINVTY05_IFLAG(s[269]);
initFINVTY06_IFLAG(s[270]);
initFINVTY07_IFLAG(s[271]);
initFINVTY08_IFLAG(s[272]);
initFINVTY09_IFLAG(s[273]);
initFINVTY10_IFLAG(s[274]);
initFINVTY11_IFLAG(s[275]);
initFCACSH_IFLAG(s[276]);
initFCNUMSH_IFLAG(s[277]);
initFCNUMIN_IFLAG(s[278]);
initFCOVDSH_IFLAG(s[279]);
initFCOVNSH_IFLAG(s[280]);
initDCOSHV1_IFLAG(s[281]);
initDCOSHV2_IFLAG(s[282]);
initDCOSHV3_IFLAG(s[283]);
initFCSHVAL_IFLAG(s[284]);
initFCOVDIN_IFLAG(s[285]);
initFCOVNIN_IFLAG(s[286]);
initDCOINV1_IFLAG(s[287]);
initDCOINV2_IFLAG(s[288]);
initDCOINV3_IFLAG(s[289]);
initDCOINV4_IFLAG(s[290]);
initDCOINV5_IFLAG(s[291]);
initFCINVAL_IFLAG(s[292]);
initFISA1_IFLAG(s[293]);
initFISA2_IFLAG(s[294]);
initFCISAV_IFLAG(s[295]);
initFIISAV_IFLAG(s[296]);
initFKISAV_IFLAG(s[297]);
initFBONDV_IFLAG(s[298]);
initFCOLLV_IFLAG(s[299]);
initFESHA_IFLAG(s[300]);
initFESHAV_IFLAG(s[301]);
initFEOPTV_IFLAG(s[302]);
initFSHARE1_IFLAG(s[303]);
initFSHARE2_IFLAG(s[304]);
initFSHARE3_IFLAG(s[305]);
initFSHUKV_IFLAG(s[306]);
initFSHOSV_IFLAG(s[307]);
initFNSVAL_IFLAG(s[308]);
initFGILTS1_IFLAG(s[309]);
initFGILTS2_IFLAG(s[310]);
initFGILTS3_IFLAG(s[311]);
initFGILTS4_IFLAG(s[312]);
initFGLTUKV_IFLAG(s[313]);
initFGLTFOV_IFLAG(s[314]);
initFINS_IFLAG(s[315]);
initFINSV_IFLAG(s[316]);
initFLPROD1_IFLAG(s[317]);
initFLPROD2_IFLAG(s[318]);
initFLPROD3_IFLAG(s[319]);
initFLPROD4_IFLAG(s[320]);
initFLFENV_IFLAG(s[321]);
initFLFSIV_IFLAG(s[322]);
initFLFFSV_IFLAG(s[323]);
initFLFTEV_IFLAG(s[324]);
initFINVOTV_IFLAG(s[325]);
initPINC(s[326]);
initCURRAC(s[327]);
initHASSHAC(s[328]);
initCACRNUM(s[329]);
initDVSHCVAL(s[330]);
initCAODNUM(s[331]);
initDVSHODVAL1(s[332]);
initDVSHODVAL2(s[333]);
initDVSHODVAL3(s[334]);
initDVFCINVAL(s[335]);
initDVCOINV1(s[336]);
initDVCOINV2(s[337]);
initDVCOINV3(s[338]);
initDVCOINV4(s[339]);
initDVCOINV5(s[340]);
initDVCACRVAL_SUM(s[341]);
initDVCAODVAL_SUM(s[342]);
initDVCAVAL_SUM(s[343]);
initDLANY_I(s[344]);
initDLNUM_I(s[345]);
initDLTYPE1_I(s[346]);
initDLTYPE2_I(s[347]);
initDLTYPE3_I(s[348]);
initDLTYPE4_I(s[349]);
initDLTYPE5_I(s[350]);
initDLINS1_I(s[351]);
initDLINS2_I(s[352]);
initDLINS3_I(s[353]);
initDLINS4_I(s[354]);
initDLINS5_I(s[355]);
initDLEST1_I(s[356]);
initDLEST2_I(s[357]);
initDLEST3_I(s[358]);
initDLEST4_I(s[359]);
initDLEST5_I(s[360]);
initDLOFT1_I(s[361]);
initDLOFT2_I(s[362]);
initDLOFT3_I(s[363]);
initDLOFT4_I(s[364]);
initDLOFT5_I(s[365]);
initDLWHNY1_I(s[366]);
initDLWHNY2_I(s[367]);
initDLWHNY3_I(s[368]);
initDLWHNY4_I(s[369]);
initDLWHNY5_I(s[370]);
initDLWHNM1_I(s[371]);
initDLWHNM2_I(s[372]);
initDLWHNM3_I(s[373]);
initDLWHNM4_I(s[374]);
initDLWHNM5_I(s[375]);
initDSLAMT1_I(s[376]);
initDSLAMT2_I(s[377]);
initDSLAMT3_I(s[378]);
initDSLAMT4_I(s[379]);
initDSLAMT5_I(s[380]);
initDSLEST1_I(s[381]);
initDSLEST2_I(s[382]);
initDSLEST3_I(s[383]);
initDSLEST4_I(s[384]);
initDSLEST5_I(s[385]);
initNWLN_I(s[386]);
initNWLNNO_I(s[387]);
initDTLTYPE1_I(s[388]);
initDTLTYPE2_I(s[389]);
initDTLTYPE3_I(s[390]);
initDTLOWE1_I(s[391]);
initDTLOWE2_I(s[392]);
initDTLOWE3_I(s[393]);
initDTLOWEB1_I(s[394]);
initDTLOWEB2_I(s[395]);
initDTLOWEB3_I(s[396]);
initDLBEH1_I(s[397]);
initDLBEH2_I(s[398]);
initDLBEH3_I(s[399]);
initDLBEH4_I(s[400]);
initDLBEH5_I(s[401]);
initDLOWE1_I(s[402]);
initDLOWE2_I(s[403]);
initDLOWE3_I(s[404]);
initDLOWE4_I(s[405]);
initDLOWE5_I(s[406]);
initDLANY_IFLAG(s[407]);
initDLNUM_IFLAG(s[408]);
initDLTYPE1_IFLAG(s[409]);
initDLTYPE2_IFLAG(s[410]);
initDLTYPE3_IFLAG(s[411]);
initDLTYPE4_IFLAG(s[412]);
initDLTYPE5_IFLAG(s[413]);
initDLINS1_IFLAG(s[414]);
initDLINS2_IFLAG(s[415]);
initDLINS3_IFLAG(s[416]);
initDLINS4_IFLAG(s[417]);
initDLINS5_IFLAG(s[418]);
initDLEST1_IFLAG(s[419]);
initDLEST2_IFLAG(s[420]);
initDLEST3_IFLAG(s[421]);
initDLEST4_IFLAG(s[422]);
initDLEST5_IFLAG(s[423]);
initDLOFT1_IFLAG(s[424]);
initDLOFT2_IFLAG(s[425]);
initDLOFT3_IFLAG(s[426]);
initDLOFT4_IFLAG(s[427]);
initDLOFT5_IFLAG(s[428]);
initDLWHNY1_IFLAG(s[429]);
initDLWHNY2_IFLAG(s[430]);
initDLWHNY3_IFLAG(s[431]);
initDLWHNY4_IFLAG(s[432]);
initDLWHNY5_IFLAG(s[433]);
initDLWHNM1_IFLAG(s[434]);
initDLWHNM2_IFLAG(s[435]);
initDLWHNM3_IFLAG(s[436]);
initDLWHNM4_IFLAG(s[437]);
initDLWHNM5_IFLAG(s[438]);
initDSLAMT1_IFLAG(s[439]);
initDSLAMT2_IFLAG(s[440]);
initDSLAMT3_IFLAG(s[441]);
initDSLAMT4_IFLAG(s[442]);
initDSLAMT5_IFLAG(s[443]);
initDSLEST1_IFLAG(s[444]);
initDSLEST2_IFLAG(s[445]);
initDSLEST3_IFLAG(s[446]);
initDSLEST4_IFLAG(s[447]);
initNWLN_IFLAG(s[448]);
initNWLNNO_IFLAG(s[449]);
initDTLTYPE1_IFLAG(s[450]);
initDTLTYPE2_IFLAG(s[451]);
initDTLTYPE3_IFLAG(s[452]);
initDTLOWE1_IFLAG(s[453]);
initDTLOWE2_IFLAG(s[454]);
initDTLOWE3_IFLAG(s[455]);
initDTLOWEB1_IFLAG(s[456]);
initDTLOWEB2_IFLAG(s[457]);
initDTLOWEB3_IFLAG(s[458]);
initDLBEH1_IFLAG(s[459]);
initDLBEH2_IFLAG(s[460]);
initDLBEH3_IFLAG(s[461]);
initDLBEH4_IFLAG(s[462]);
initDLBEH5_IFLAG(s[463]);
initDLOWE1_IFLAG(s[464]);
initDLOWE2_IFLAG(s[465]);
initDLOWE3_IFLAG(s[466]);
initDLOWE4_IFLAG(s[467]);
initDLOWE5_IFLAG(s[468]);
initDHBANY01_I(s[469]);
initDHBANY02_I(s[470]);
initDHBANY03_I(s[471]);
initDHBANY04_I(s[472]);
initDHBANY05_I(s[473]);
initDHBANY06_I(s[474]);
initDHBANY07_I(s[475]);
initDHBEST01_I(s[476]);
initDHBEST02_I(s[477]);
initDHBEST03_I(s[478]);
initDHBEST04_I(s[479]);
initDHBEST05_I(s[480]);
initDHBEST06_I(s[481]);
initDHBEST07_I(s[482]);
initDHBEST08_I(s[483]);
initDHBEST09_I(s[484]);
initDHBEST10_I(s[485]);
initDHBEST11_I(s[486]);
initDHBAMT01_I(s[487]);
initDHBAMT02_I(s[488]);
initDHBAMT03_I(s[489]);
initDHBAMT04_I(s[490]);
initDHBAMT05_I(s[491]);
initDHBAMT06_I(s[492]);
initDHBAMT07_I(s[493]);
initDHBAMT08_I(s[494]);
initDHBAMT09_I(s[495]);
initDHBAMT10_I(s[496]);
initDHBAMT11_I(s[497]);
initCACTF_I(s[498]);
initCAJISA_I(s[499]);
initCASAV_I(s[500]);
initCACTVB_I(s[501]);
initCACTV_I(s[502]);
initCASVB_I(s[503]);
initCASVV_I(s[504]);
initFINFSAV1_I(s[505]);
initFINFSAV2_I(s[506]);
initFINFSAV3_I(s[507]);
initFINFSAV4_I(s[508]);
initFLOANVB_I(s[509]);
initFINFVB_I(s[510]);
initFINFLV_I(s[511]);
initFINFV_I(s[512]);
initDHBANY01_IFLAG(s[513]);
initDHBANY02_IFLAG(s[514]);
initDHBANY03_IFLAG(s[515]);
initDHBANY04_IFLAG(s[516]);
initDHBANY05_IFLAG(s[517]);
initDHBANY06_IFLAG(s[518]);
initDHBANY07_IFLAG(s[519]);
initDHBEST01_IFLAG(s[520]);
initDHBEST02_IFLAG(s[521]);
initDHBEST03_IFLAG(s[522]);
initDHBEST04_IFLAG(s[523]);
initDHBEST05_IFLAG(s[524]);
initDHBEST06_IFLAG(s[525]);
initDHBEST07_IFLAG(s[526]);
initDHBEST08_IFLAG(s[527]);
initDHBEST09_IFLAG(s[528]);
initDHBEST10_IFLAG(s[529]);
initDHBEST11_IFLAG(s[530]);
initDHBAMT01_IFLAG(s[531]);
initDHBAMT02_IFLAG(s[532]);
initDHBAMT03_IFLAG(s[533]);
initDHBAMT04_IFLAG(s[534]);
initDHBAMT05_IFLAG(s[535]);
initDHBAMT06_IFLAG(s[536]);
initDHBAMT07_IFLAG(s[537]);
initDHBAMT08_IFLAG(s[538]);
initDHBAMT09_IFLAG(s[539]);
initDHBAMT10_IFLAG(s[540]);
initDHBAMT11_IFLAG(s[541]);
initCACTF_IFLAG(s[542]);
initCAJISA_IFLAG(s[543]);
initCASAV_IFLAG(s[544]);
initCACTVB_IFLAG(s[545]);
initCACTV_IFLAG(s[546]);
initCASVB_IFLAG(s[547]);
initCASVV_IFLAG(s[548]);
initFINFSAV1_IFLAG(s[549]);
initFINFSAV2_IFLAG(s[550]);
initFINFSAV3_IFLAG(s[551]);
initFINFSAV4_IFLAG(s[552]);
initFLOANVB_IFLAG(s[553]);
initFINFVB_IFLAG(s[554]);
initFINFLV_IFLAG(s[555]);
initFINFV_IFLAG(s[556]);
initSAVDEP(s[557]);
initHASSHSAC(s[558]);
initSAVNUM(s[559]);
initDVSHSVAL(s[560]);
initDVFSINVAL(s[561]);
initDVSAVAL_SUM(s[562]);
initDVELARR(s[563]);
initDVGASARR(s[564]);
initDVCTARR(s[565]);
initDVTELARR(s[566]);
initDVWATARR(s[567]);
initDVRNTARR(s[568]);
initDVCHMARR(s[569]);
initDVCRTARR(s[570]);
initDVTAXARR(s[571]);
initDVVATARR(s[572]);
initDVOTHARR(s[573]);
initDVANYARR(s[574]);
initTOTBILLARR_SUM(s[575]);
initHASISA(s[576]);
initHASBOND(s[577]);
initHASUTRUST(s[578]);
initHASEMPSH(s[579]);
initHASOTHSH(s[580]);
initHASNSP(s[581]);
initHASGILT(s[582]);
initHASLINS(s[583]);
initHASOINV(s[584]);
initHASNOFA(s[585]);
initDVCISAV(s[586]);
initDVIISAV(s[587]);
initDVKISAV(s[588]);
initDVFNSVAL(s[589]);
initDVFSHUKV(s[590]);
initDVFLFENV(s[591]);
initDVFLFSIV(s[592]);
initDVFLFFSV(s[593]);
initDVFLFTEV(s[594]);
initDVFBONDV(s[595]);
initDVFEOPTV(s[596]);
initDVFESHAV(s[597]);
initDVFCOLLV(s[598]);
initDVFSHOSV(s[599]);
initDVFGLTUKV(s[600]);
initDVFGLTFOV(s[601]);
initDVFINVOTV(s[602]);
initDVFINFLV(s[603]);
initDVFINFV(s[604]);
initDVCACTV(s[605]);
initDVCASVV(s[606]);
initDVISAVAL_SUM(s[607]);
initDVINSV_SUM(s[608]);
initDVFESHARES_SUM(s[609]);
initDVFINFVAL_SUM(s[610]);
initNWFLNVAL1(s[611]);
initNWILNVAL1(s[612]);
initNWFLNVAL2(s[613]);
initNWILNVAL2(s[614]);
initNWFLNVAL3(s[615]);
initNWILNVAL3(s[616]);
initNWFLNVAL4(s[617]);
initDVNWFLN_SUM(s[618]);
initDVNWILN_SUM(s[619]);
initLNLFT1(s[620]);
initLNLFT2(s[621]);
initLNLFT3(s[622]);
initLNLFT4(s[623]);
initLNLFT5(s[624]);
initLNLFT6(s[625]);
initLNLFT7(s[626]);
initLNLFT8(s[627]);
initLNLFT9(s[628]);
initLNOS1(s[629]);
initLNOS2(s[630]);
initLNOS3(s[631]);
initLNOS4(s[632]);
initLNOS5(s[633]);
initLNOS6(s[634]);
initLNOS7(s[635]);
initLNOS8(s[636]);
initLNOS9(s[637]);
initFLNOS1(s[638]);
initFLNOS2(s[639]);
initFLNOS3(s[640]);
initFLNOS4(s[641]);
initDVHASLF(s[642]);
initDVHASPLINF(s[643]);
initDVDLOWE1(s[644]);
initDVDLOWE2(s[645]);
initDVDLOWE3(s[646]);
initDVDLOWE4(s[647]);
initLNARR_SUM(s[648]);
initDVHASLNAR(s[649]);
initDMOANY_I(s[650]);
initDMONUM_I(s[651]);
initDMOINS1_I(s[652]);
initDMOINS2_I(s[653]);
initDMOOFT1_I(s[654]);
initDMOOFT2_I(s[655]);
initDMOWHNY1_I(s[656]);
initDMOWHNY2_I(s[657]);
initDMOWHNM1_I(s[658]);
initDMOWHNM2_I(s[659]);
initDMOBEH1_I(s[660]);
initDMOBEH2_I(s[661]);
initDMOOWE1_I(s[662]);
initDMOOWE2_I(s[663]);
initDMOANY_IFLAG(s[664]);
initDMONUM_IFLAG(s[665]);
initDMOINS1_IFLAG(s[666]);
initDMOINS2_IFLAG(s[667]);
initDMOOFT1_IFLAG(s[668]);
initDMOOFT2_IFLAG(s[669]);
initDMOWHNY1_IFLAG(s[670]);
initDMOWHNY2_IFLAG(s[671]);
initDMOWHNM1_IFLAG(s[672]);
initDMOWHNM2_IFLAG(s[673]);
initDMOBEH1_IFLAG(s[674]);
initDMOBEH2_IFLAG(s[675]);
initDMOOWE1_IFLAG(s[676]);
initDMOOWE2_IFLAG(s[677]);
initMOLFT1(s[678]);
initMOLFT2(s[679]);
initMOOS1(s[680]);
initMOOS2(s[681]);
initTOTMO_SUM(s[682]);
initDVDMOOWE1(s[683]);
initDVDMOOWE2(s[684]);
initMOARR_SUM(s[685]);
initDVHASMOAR(s[686]);
initCCAC1_I(s[687]);
initCCAC1_IFLAG(s[688]);
initDCAMOS1_I(s[689]);
initDCAMOS1_IFLAG(s[690]);
initCCAC2_I(s[691]);
initCCAC2_IFLAG(s[692]);
initDCAMOS2_I(s[693]);
initDCAMOS2_IFLAG(s[694]);
initCCAC3_I(s[695]);
initCCAC3_IFLAG(s[696]);
initDCAMOS3_I(s[697]);
initDCAMOS3_IFLAG(s[698]);
initSCAC1_I(s[699]);
initSCAC1_IFLAG(s[700]);
initDSAMOS1_I(s[701]);
initDSAMOS1_IFLAG(s[702]);
initSCAC2_I(s[703]);
initSCAC2_IFLAG(s[704]);
initDSAMOS2_I(s[705]);
initDSAMOS2_IFLAG(s[706]);
initSCAC3_I(s[707]);
initSCAC3_IFLAG(s[708]);
initDSAMOS3_I(s[709]);
initDSAMOS3_IFLAG(s[710]);
initTOTSC_SUM(s[711]);
initHASSC(s[712]);
initTOTCC_SUM(s[713]);
initHASCC(s[714]);
initOSLC1(s[715]);
initOSLC2(s[716]);
initOSLC3(s[717]);
initNSLC1(s[718]);
initNSLC2(s[719]);
initNSLC3(s[720]);
initOSLBNK1(s[721]);
initOSLBNK2(s[722]);
initOSLBNK3(s[723]);
initNSLBNK1(s[724]);
initNSLBNK2(s[725]);
initNSLBNK3(s[726]);
initTOTSLC_SUM(s[727]);
initTOTSLBNK_SUM(s[728]);
initDVHASSLC(s[729]);
initDVHASSLBNK(s[730]);
initDHPBEH1_I(s[731]);
initDHPBEH2_I(s[732]);
initDHPOWE1_I(s[733]);
initDHPOWE2_I(s[734]);
initDHPANY1_I(s[735]);
initDHPANY2_I(s[736]);
initDHPANY3_I(s[737]);
initDHPNUM_I(s[738]);
initDHPOFT1_I(s[739]);
initDHPOFT2_I(s[740]);
initDHPINS1_I(s[741]);
initDHPINS2_I(s[742]);
initDHPWHNY1_I(s[743]);
initDHPWHNM1_I(s[744]);
initDHPWHNY2_I(s[745]);
initDHPWHNM2_I(s[746]);
initDHPBEH1_IFLAG(s[747]);
initDHPBEH2_IFLAG(s[748]);
initDHPOWE1_IFLAG(s[749]);
initDHPOWE2_IFLAG(s[750]);
initDHPANY1_IFLAG(s[751]);
initDHPANY2_IFLAG(s[752]);
initDHPANY3_IFLAG(s[753]);
initDHPNUM_IFLAG(s[754]);
initDHPOFT1_IFLAG(s[755]);
initDHPOFT2_IFLAG(s[756]);
initDHPINS1_IFLAG(s[757]);
initDHPINS2_IFLAG(s[758]);
initDHPWHNY1_IFLAG(s[759]);
initDHPWHNM1_IFLAG(s[760]);
initDHPWHNY2_IFLAG(s[761]);
initDHPWHNM2_IFLAG(s[762]);
initDCNUM2(s[763]);
initDCANY(s[764]);
initDCANU(s[765]);
initDCNUM1(s[766]);
initDCCOS1(s[767]);
initDCCSP1(s[768]);
initDCNAM1(s[769]);
initDCONM1(s[770]);
initDCONM2(s[771]);
initDCRSP1(s[772]);
initDCREC1(s[773]);
initDCPER1(s[774]);
initDCAMC1(s[775]);
initDCAMP1(s[776]);
initDCAMD1(s[777]);
initDCESB1(s[778]);
initDCINZ1(s[779]);
initDC12BEH1(s[780]);
initDC12OWE1(s[781]);
initDCBE2YR1(s[782]);
initDCARRCL01(s[783]);
initDCARRCL02(s[784]);
initDCARRCL03(s[785]);
initDCARRCL04(s[786]);
initDCCOS2(s[787]);
initDCCSP2(s[788]);
initDCNAM2(s[789]);
initDCONM3(s[790]);
initDCONM4(s[791]);
initDCRSP2(s[792]);
initDCREC2(s[793]);
initDCPER2(s[794]);
initDCAMC2(s[795]);
initDCAMP2(s[796]);
initDCAMD2(s[797]);
initDCESB2(s[798]);
initDCINZ2(s[799]);
initDC12BEH2(s[800]);
initDC12OWE2(s[801]);
initDCBE2YR2(s[802]);
initDCCOS3(s[803]);
initDCCSP3(s[804]);
initDCNAM3(s[805]);
initDCONM5(s[806]);
initDCONM6(s[807]);
initDCRSP3(s[808]);
initDCREC3(s[809]);
initDCPER3(s[810]);
initDCAMC3(s[811]);
initDCAMP3(s[812]);
initDCAMD3(s[813]);
initDCESB3(s[814]);
initDCINZ3(s[815]);
initDC12BEH3(s[816]);
initDC12OWE3(s[817]);
initDCBE2YR3(s[818]);
initDVCCARDNUM_I(s[819]);
initDVCCARDNUM_IFLAG(s[820]);
initDVCCARDYN_I(s[821]);
initDVCCARDYN_IFLAG(s[822]);
initDSNUM2(s[823]);
initDSANY1(s[824]);
initDSANY2(s[825]);
initDSANU1(s[826]);
initDSANU2(s[827]);
initDSNUM1(s[828]);
initDSCOS1(s[829]);
initDSCSP1(s[830]);
initDSNAM1(s[831]);
initDSONM1(s[832]);
initDSONM2(s[833]);
initDSREC1(s[834]);
initDSPER1(s[835]);
initDSAMC1(s[836]);
initDSAMP1(s[837]);
initDSAMD1(s[838]);
initDSESB1(s[839]);
initDS12BEH1(s[840]);
initDS12OWE1(s[841]);
initDSCOS2(s[842]);
initDSCSP2(s[843]);
initDSNAM2(s[844]);
initDSONM3(s[845]);
initDSONM4(s[846]);
initDSREC2(s[847]);
initDSPER2(s[848]);
initDSAMC2(s[849]);
initDSAMP2(s[850]);
initDSAMD2(s[851]);
initDSESB2(s[852]);
initDS12BEH2(s[853]);
initDS12OWE2(s[854]);
initDSCOS3(s[855]);
initDSCSP3(s[856]);
initDSNAM3(s[857]);
initDSONM5(s[858]);
initDSONM6(s[859]);
initDSREC3(s[860]);
initDSPER3(s[861]);
initDSAMC3(s[862]);
initDSAMP3(s[863]);
initDSAMD3(s[864]);
initDSESB3(s[865]);
initDS12BEH3(s[866]);
initDS12OWE3(s[867]);
initDVSCARDNUM_I(s[868]);
initDVSCARDNUM_IFLAG(s[869]);
initDVSCARDYN_I(s[870]);
initDVSCARDYN_IFLAG(s[871]);
initPRESMON(s[872]);
initPRESYR(s[873]);
initDMOANY(s[874]);
initDMONUM(s[875]);
initDMOINS1(s[876]);
initDMOEST1(s[877]);
initDMOOFT1(s[878]);
initDMOWHNY1(s[879]);
initDMOWHNM1(s[880]);
initDMOWEST1(s[881]);
initDMOINT1(s[882]);
initDMOBEH1(s[883]);
initDMOOWE1(s[884]);
initDMOINS2(s[885]);
initDMOEST2(s[886]);
initDMOOFT2(s[887]);
initDMOWHNY2(s[888]);
initDMOWHNM2(s[889]);
initDMOWEST2(s[890]);
initDMOINT2(s[891]);
initDMOBEH2(s[892]);
initDMOOWE2(s[893]);
initDHPANY1(s[894]);
initDHPANY2(s[895]);
initDHPANY3(s[896]);
initDHPNUM(s[897]);
initDHPINS1(s[898]);
initDHPEST1(s[899]);
initDHPOFT1(s[900]);
initDHPWHNY1(s[901]);
initDHPWHNM1(s[902]);
initDHPWEST1(s[903]);
initDHPINT1(s[904]);
initDHPBEH1(s[905]);
initDHPOWE1(s[906]);
initDHPINS2(s[907]);
initDHPEST2(s[908]);
initDHPOFT2(s[909]);
initDHPWHNY2(s[910]);
initDHPWHNM2(s[911]);
initDHPWEST2(s[912]);
initDHPINT2(s[913]);
initDHPBEH2(s[914]);
initDHPOWE2(s[915]);
initDLONM(s[916]);
initDLOLD1(s[917]);
initDLOLD2(s[918]);
initDLOLD3(s[919]);
initDLOLD4(s[920]);
initDLOLD5(s[921]);
initDLANY(s[922]);
initDLNNM(s[923]);
initDLNUM(s[924]);
initDLTYPE1(s[925]);
initDSLPAY1(s[926]);
initDSLAMT1(s[927]);
initDSLEST1(s[928]);
initDLWHY1(s[929]);
initDLWHY2(s[930]);
initDLWHY3(s[931]);
initDLWHY4(s[932]);
initDLWHY5(s[933]);
initDLWHY6(s[934]);
initDLWHY7(s[935]);
initDLSEC1(s[936]);
initDLINS1(s[937]);
initDLEST1(s[938]);
initDLOFT1(s[939]);
initDLWHNY1(s[940]);
initDLWHNM1(s[941]);
initDLWEST1(s[942]);
initDLINT1(s[943]);
initDLBEH1(s[944]);
initDLOWE1(s[945]);
initDLTYPE2(s[946]);
initDSLPAY2(s[947]);
initDSLAMT2(s[948]);
initDSLEST2(s[949]);
initDLWHY8(s[950]);
initDLWHY9(s[951]);
initDLWHY10(s[952]);
initDLSEC2(s[953]);
initDLINS2(s[954]);
initDLEST2(s[955]);
initDLOFT2(s[956]);
initDLWHNY2(s[957]);
initDLWHNM2(s[958]);
initDLWEST2(s[959]);
initDLINT2(s[960]);
initDLBEH2(s[961]);
initDLOWE2(s[962]);
initDLTYPE3(s[963]);
initDSLPAY3(s[964]);
initDSLAMT3(s[965]);
initDSLEST3(s[966]);
initDLWHY15(s[967]);
initDLWHY16(s[968]);
initDLSEC3(s[969]);
initDLINS3(s[970]);
initDLEST3(s[971]);
initDLOFT3(s[972]);
initDLWHNY3(s[973]);
initDLWHNM3(s[974]);
initDLWEST3(s[975]);
initDLINT3(s[976]);
initDLBEH3(s[977]);
initDLOWE3(s[978]);
initDLTYPE4(s[979]);
initDSLPAY4(s[980]);
initDSLAMT4(s[981]);
initDSLEST4(s[982]);
initDLWHY22(s[983]);
initDLWHY23(s[984]);
initDLSEC4(s[985]);
initDLINS4(s[986]);
initDLEST4(s[987]);
initDLOFT4(s[988]);
initDLWHNY4(s[989]);
initDLWHNM4(s[990]);
initDLWEST4(s[991]);
initDLINT4(s[992]);
initDLBEH4(s[993]);
initDLOWE4(s[994]);
initDLTYPE5(s[995]);
initDSLPAY5(s[996]);
initDSLAMT5(s[997]);
initDSLEST5(s[998]);
initDLWHY29(s[999]);
initDLWHY30(s[1000]);
initDLSEC5(s[1001]);
initDLINS5(s[1002]);
initDLEST5(s[1003]);
initDLOFT5(s[1004]);
initDLWHNY5(s[1005]);
initDLWHNM5(s[1006]);
initDLWEST5(s[1007]);
initDLINT5(s[1008]);
initDLBEH5(s[1009]);
initDLOWE5(s[1010]);
initNWLN(s[1011]);
initNWLNNO(s[1012]);
initDTLTYPE1(s[1013]);
initDTLOWE1(s[1014]);
initDTLOWEB1(s[1015]);
initDTLTYPE2(s[1016]);
initDTLOWE2(s[1017]);
initDTLOWEB2(s[1018]);
initDTLTYPE3(s[1019]);
initDTLOWE3(s[1020]);
initDTLOWEB3(s[1021]);
initDHBFIX(s[1022]);
initDHBANY01(s[1023]);
initDHBANY02(s[1024]);
initDHBANY03(s[1025]);
initDHBANY04(s[1026]);
initDHBANY05(s[1027]);
initDHBANY06(s[1028]);
initDHBANY07(s[1029]);
initDHBANY08(s[1030]);
initDHBANY09(s[1031]);
initDHBANY10(s[1032]);
initDHBANY11(s[1033]);
initDHBAMT01(s[1034]);
initDHBAMT02(s[1035]);
initDHBAMT03(s[1036]);
initDHBAMT04(s[1037]);
initDHBAMT05(s[1038]);
initDHBAMT06(s[1039]);
initDHBAMT07(s[1040]);
initDHBAMT08(s[1041]);
initDHBAMT09(s[1042]);
initDHBAMT10(s[1043]);
initDHBAMT11(s[1044]);
initDHBEST01(s[1045]);
initDHBEST02(s[1046]);
initDHBEST03(s[1047]);
initDHBEST04(s[1048]);
initDHBEST05(s[1049]);
initDHBEST06(s[1050]);
initDHBEST07(s[1051]);
initDHBEST08(s[1052]);
initDHBEST09(s[1053]);
initDHBEST10(s[1054]);
initDHBEST11(s[1055]);
initFINVTY01(s[1056]);
initFINVTY02(s[1057]);
initFINVTY03(s[1058]);
initFINVTY04(s[1059]);
initFINVTY05(s[1060]);
initFINVTY06(s[1061]);
initFINVTY07(s[1062]);
initFINVTY08(s[1063]);
initFINVTY09(s[1064]);
initFINVTY10(s[1065]);
initFINVTY11(s[1066]);
initDCOSHV1(s[1067]);
initDCOSHVB1(s[1068]);
initDCOSHV2(s[1069]);
initDCOSHVB2(s[1070]);
initDCOSHV3(s[1071]);
initDCOSHVB3(s[1072]);
initDCOSHV4(s[1073]);
initDCOSHVB4(s[1074]);
initDCOSHV5(s[1075]);
initDCOSHVB5(s[1076]);
initDCOINV1(s[1077]);
initDCOINVB1(s[1078]);
initDCOINV2(s[1079]);
initDCOINVB2(s[1080]);
initDCOINV3(s[1081]);
initDCOINVB3(s[1082]);
initDCOINV4(s[1083]);
initDCOINVB4(s[1084]);
initDCOINV5(s[1085]);
initDCOINVB5(s[1086]);
initFCACSH(s[1087]);
initFCNUMSH(s[1088]);
initFCNUMIN(s[1089]);
initFCSUPPR(s[1090]);
initFCOVDSH(s[1091]);
initFCOVNSH(s[1092]);
initFCSHVAL(s[1093]);
initFCSHVLB(s[1094]);
initFCOVDIN(s[1095]);
initFCOVNIN(s[1096]);
initFCOVDIF(s[1097]);
initFCINVAL(s[1098]);
initFCINVLB(s[1099]);
initFSACSH(s[1100]);
initFSNUMSH(s[1101]);
initFSNUMIN(s[1102]);
initFSSUPPR(s[1103]);
initFSTYPSH1(s[1104]);
initFSTYPSH2(s[1105]);
initFSTYPSH3(s[1106]);
initFSTYPSH4(s[1107]);
initFSTYPIN1(s[1108]);
initFSTYPIN2(s[1109]);
initFSTYPIN3(s[1110]);
initFSTYPIN4(s[1111]);
initFSSHVAL(s[1112]);
initFSSHVLB(s[1113]);
initFSINVAL(s[1114]);
initFSINVLB(s[1115]);
initFSOSHAV(s[1116]);
initFSOSVLB(s[1117]);
initFISA1(s[1118]);
initFISA2(s[1119]);
initFCISAV(s[1120]);
initFCISAB(s[1121]);
initFIISAV(s[1122]);
initFIISAB(s[1123]);
initFKISAV(s[1124]);
initFKISAB(s[1125]);
initNEWFCMX(s[1126]);
initFCISAWD(s[1127]);
initFCIWNUM(s[1128]);
initFCIWDAB(s[1129]);
initFCISCE(s[1130]);
initFBONDTY1(s[1131]);
initFBONDTY2(s[1132]);
initFBONDTY3(s[1133]);
initFBONDV(s[1134]);
initFBONDVB(s[1135]);
initFCOLLV(s[1136]);
initFCOLLVB(s[1137]);
initFESHA(s[1138]);
initFESHAV(s[1139]);
initFESHVB(s[1140]);
initFEOPTV(s[1141]);
initFEOPVB(s[1142]);
initFSHARE1(s[1143]);
initFSHARE2(s[1144]);
initFSHARE3(s[1145]);
initFSHUKV(s[1146]);
initFSHUKVB(s[1147]);
initFSHOSV(s[1148]);
initFSHOSVB(s[1149]);
initFSHADD(s[1150]);
initFSHADA(s[1151]);
initFSHADAB(s[1152]);
initFNSAV1(s[1153]);
initFNSAV2(s[1154]);
initFNSAV3(s[1155]);
initFNSAV4(s[1156]);
initFNSVAL(s[1157]);
initFNSVB(s[1158]);
initFGILTS1(s[1159]);
initFGILTS2(s[1160]);
initFGILTS3(s[1161]);
initFGILTS4(s[1162]);
initFGLTUKV(s[1163]);
initFGUKVB(s[1164]);
initFGLTFOV(s[1165]);
initFGFOVB(s[1166]);
initFLFENV(s[1167]);
initFLFENVB(s[1168]);
initFLFSIV(s[1169]);
initFLFSIVB(s[1170]);
initFLFFSV(s[1171]);
initFLFFSVB(s[1172]);
initFLFTEV(s[1173]);
initFLFTEVB(s[1174]);
initFINS(s[1175]);
initFINSV(s[1176]);
initFLPROD1(s[1177]);
initFLPROD2(s[1178]);
initFLPROD3(s[1179]);
initFLPROD4(s[1180]);
initFINVOTV(s[1181]);
initFINVOVB(s[1182]);
initFINCVB(s[1183]);
initFINFSAV1(s[1184]);
initFINFSAV2(s[1185]);
initFINFSAV3(s[1186]);
initFINFSAV4(s[1187]);
initFINFLV(s[1188]);
initFLOANVB(s[1189]);
initFINFV(s[1190]);
initFINFVB(s[1191]);
initFSAVED(s[1192]);
initFWITHD(s[1193]);
initFSAVAB(s[1194]);
initHPNYR1(s[1195]);
initHPNMN1(s[1196]);
initHPLFT1(s[1197]);
initHPNYR2(s[1198]);
initHPNMN2(s[1199]);
initHPLFT2(s[1200]);
initHPOS1(s[1201]);
initHPOS2(s[1202]);
initDVHASHP(s[1203]);
initDVDHPOWE1(s[1204]);
initDVDHPOWE2(s[1205]);
initHPARR_SUM(s[1206]);
initDVHPAR(s[1207]);
initTOTNSLC_SUM(s[1208]);
initTOTNSLBNK_SUM(s[1209]);
initTOTOSLC_SUM(s[1210]);
initTOTOSLBNK_SUM(s[1211]);
initTOTNLOS_SUM(s[1212]);
initTOTARR_EXCMORT_SUM(s[1213]);
initHFINW_EXCENDW_SUM(s[1214]);
initDVFFASSETS_SUM(s[1215]);
initDVHASNLF(s[1216]);
initDVHASNLI(s[1217]);
initSELECTAD(s[1218]);
initCACTF(s[1219]);
initCAJISA(s[1220]);
initCACTV(s[1221]);
initCACTVB(s[1222]);
initCATYPE1(s[1223]);
initCATYPE2(s[1224]);
initCAOPEN(s[1225]);
initCACONTR1(s[1226]);
initCACONTR2(s[1227]);
initCACONTR3(s[1228]);
initCACONTR4(s[1229]);
initCACONTR5(s[1230]);
initCACONTR6(s[1231]);
initCASAV(s[1232]);
initCASVV(s[1233]);
initCASVB(s[1234]);
initCACONTRAM1(s[1235]);
initCACONTRAMB1(s[1236]);
initCACONTRAM2(s[1237]);
initCACONTRAMB2(s[1238]);
initCACONTRAM3(s[1239]);
initCACONTRAMB3(s[1240]);
initCACONTRAM4(s[1241]);
initCACONTRAMB4(s[1242]);
initCACONTRAM5(s[1243]);
initCACONTRAMB5(s[1244]);
initCACONTRAM6(s[1245]);
initCACONTRAMB6(s[1246]);
initNUMCHSAV(s[1247]);
initFINCV_IFLAG(s[1248]);
initTOTLNS_SUM(s[1249]);
initTOTFLNS_SUM(s[1250]);
initTOTHP_SUM(s[1251]);
initTOTLOS_SUM(s[1252]);
initHFINL_SUM(s[1253]);
initPFULRET(s[1254]);
initPEARLRS(s[1255]);
initOLONG(s[1256]);
initOLONGYR(s[1257]);
initOSAFERET1(s[1258]);
initOSAFERE2(s[1259]);
initOUNDER(s[1260]);
initOPENS01(s[1261]);
initOPENS02(s[1262]);
initOPENS03(s[1263]);
initOPENS04(s[1264]);
initOPENS05(s[1265]);
initOPENS06(s[1266]);
initOPENS07(s[1267]);
initOPENS08(s[1268]);
initOPENS09(s[1269]);
initOPENS10(s[1270]);
initOPENS11(s[1271]);
initOPENS12(s[1272]);
initOPENS13(s[1273]);
initOPENS14(s[1274]);
initOPENS15(s[1275]);
initOEXPINC01(s[1276]);
initOEXPINC02(s[1277]);
initOEXPINC03(s[1278]);
initOEXPINC04(s[1279]);
initOEXPINC05(s[1280]);
initOEXPINC06(s[1281]);
initOEXPINC07(s[1282]);
initOEXPINC08(s[1283]);
initOEXPINC09(s[1284]);
initOEXPINC10(s[1285]);
initOEXPINC11(s[1286]);
initOEXPINC12(s[1287]);
initOEXPINC13(s[1288]);
initOEXPINC14(s[1289]);
initOEXPINC15(s[1290]);
initOLARGE(s[1291]);
initOPENSAV(s[1292]);
initOSTANDL(s[1293]);
initOWAIT(s[1294]);
initOLEFT(s[1295]);
initOLEFTDO(s[1296]);
initOSAV2Y(s[1297]);
initOWHYSAV1(s[1298]);
initOWHYSAV2(s[1299]);
initOWHYSAV3(s[1300]);
initOWHYSAV4(s[1301]);
initOWHYSAV5(s[1302]);
initOWHYSAV6(s[1303]);
initOWHYSAV7(s[1304]);
initOWHYSAV8(s[1305]);
initOWHYSAV9(s[1306]);
initONOSAVE1(s[1307]);
initONOSAVE2(s[1308]);
initONOSAVE3(s[1309]);
initONOSAVE4(s[1310]);
initONOSAVE5(s[1311]);
initONOSAVE6(s[1312]);
initOINTEND(s[1313]);
initOSAVEXT(s[1314]);
initKNOWWPR(s[1315]);
initPSIT(s[1316]);
initPSITF(s[1317]);
initPNOWKRS(s[1318]);
initPAGESTP(s[1319]);
initPEXPRET(s[1320]);
initPAGERET(s[1321]);
initDBURD(s[1322]);
initDBURDA(s[1323]);
initDBURDW1(s[1324]);
initDBURDW2(s[1325]);
initDBURDW3(s[1326]);
initDBURD___W4(s[1327]);
initDADVMTH(s[1328]);
initDADVACT1(s[1329]);
initDADVACT2(s[1330]);
initDADVACT3(s[1331]);
initOTRUST01(s[1332]);
initOTRUST02(s[1333]);
initOTRUST03(s[1334]);
initOTRUST04(s[1335]);
initOTRUST05(s[1336]);
initOTRUST06(s[1337]);
initOTRUST07(s[1338]);
initOTRUST08(s[1339]);
initOTRUST09(s[1340]);
initOTRUST10(s[1341]);
initOTRUST11(s[1342]);
initOTRUST12(s[1343]);
initOTRUST13(s[1344]);
initOTRUST14(s[1345]);
initOTRUST15(s[1346]);
initOSITUAT(s[1347]);
initOSITCH(s[1348]);
initOIMPRS1(s[1349]);
initOIMPRS2(s[1350]);
initOIMPRS3(s[1351]);
initOIMPRS4(s[1352]);
initOIMPRS5(s[1353]);
initOIMPRS6(s[1354]);
initOWRSRS01(s[1355]);
initOWRSRS02(s[1356]);
initOWRSRS03(s[1357]);
initOWRSRS04(s[1358]);
initOWRSRS05(s[1359]);
initOWRSRS06(s[1360]);
initOWRSRS07(s[1361]);
initORETINC(s[1362]);
initOCSVR1(s[1363]);
initOCSVR2(s[1364]);
initOCSVR3(s[1365]);
initOCSVR4(s[1366]);
initOCSVR5(s[1367]);
initOCSVR6(s[1368]);
initOCSVR7(s[1369]);
initOCSVR8(s[1370]);
initOTHASCH(s[1371]);
initOTHASVL(s[1372]);
initOTHASVB(s[1373]);
initCOMMI(s[1374]);
initORUNOUT(s[1375]);
initORUNDO01(s[1376]);
initORUNDO02(s[1377]);
initORUNDO03(s[1378]);
initORUNDO04(s[1379]);
initORUNDO05(s[1380]);
initORUNDO06(s[1381]);
initORUNDO07(s[1382]);
initORUNDO08(s[1383]);
initIFBANKACC(s[1384]);
initKNOWBALANCE(s[1385]);
initOFTCHECKED(s[1386]);
initKNOHOWMUCH(s[1387]);
initINCDROP(s[1388]);
initFNDCASH1(s[1389]);
initFNDCASH2(s[1390]);
initFNDCASH3(s[1391]);
initFNDCASH4(s[1392]);
initFNDCASH5(s[1393]);
initORGNSED(s[1394]);
initRNYDAY(s[1395]);
initLVTDAY(s[1396]);
initSPENDM(s[1397]);
initGSTDNW(s[1398]);
initPRODTS(s[1399]);
initSOURC2PMULT1(s[1400]);
initSOURC2PMULT2(s[1401]);
initSOURC2PMULT3(s[1402]);
initSOURC2PMULT4(s[1403]);
initSOURC2PMULT5(s[1404]);
initSOURC2PMULT6(s[1405]);
initSOURC2PMULT7(s[1406]);
initSOURC2PMULT8(s[1407]);
initSOURC2PMULT9(s[1408]);
initSOURC2P(s[1409]);
initCHOICP(s[1410]);
initEYE1(s[1411]);
initEYE2(s[1412]);
initEYE3(s[1413]);
initEYE4(s[1414]);
initEYE5(s[1415]);
initEYE6(s[1416]);
initEYE7(s[1417]);
initEYE8(s[1418]);
initINDFREQ(s[1419]);
initADVICE(s[1420]);
initADVNUMALL(s[1421]);
initADJOINT1(s[1422]);
initADJOINT2(s[1423]);
initADJOINT3(s[1424]);
initADWHO01(s[1425]);
initADWHO02(s[1426]);
initADWHO15(s[1427]);
initADWHO16(s[1428]);
initADWHO17(s[1429]);
initADWHO31(s[1430]);
initADWHO32(s[1431]);
initADRECORD1(s[1432]);
initADRECORD2(s[1433]);
initADRECORD3(s[1434]);
initADVREAS1(s[1435]);
initADVREAS2(s[1436]);
initADVREAS3(s[1437]);
initADSAVINV1(s[1438]);
initADSAVINV2(s[1439]);
initADSAVINV3(s[1440]);
initADSAVINV4(s[1441]);
initADSAVINV5(s[1442]);
initADSAVINV6(s[1443]);
initADSAVINV7(s[1444]);
initADSAVINV8(s[1445]);
initADSAVINV9(s[1446]);
initADSAVINV10(s[1447]);
initADSAVINV11(s[1448]);
initADSAVINV12(s[1449]);
initADSAVINV13(s[1450]);
initADSAVINV14(s[1451]);
initADSAVINV15(s[1452]);
initADSAVINV19(s[1453]);
initADSAVINV20(s[1454]);
initADSAVINV21(s[1455]);
initADCONS1(s[1456]);
initADCONS2(s[1457]);
initADCONS3(s[1458]);
initADTYP1(s[1459]);
initADTYP2(s[1460]);
initADTYP3(s[1461]);
initADSAT1(s[1462]);
initADSAT2(s[1463]);
initADSAT3(s[1464]);
initADSATREFLECT1(s[1465]);
initADSATREFLECT2(s[1466]);
initADSATREFLECT3(s[1467]);
initADPROD1(s[1468]);
initADPROD2(s[1469]);
initADPROD3(s[1470]);
initADPURCH1(s[1471]);
initADPURCH2(s[1472]);
initADPURCH3(s[1473]);
initADAVAIL1(s[1474]);
initADAVAIL2(s[1475]);
initADAVAIL3(s[1476]);
initADPAY1(s[1477]);
initADPAY2(s[1478]);
initADPAY3(s[1479]);
initADAMT1(s[1480]);
initADAMT2(s[1481]);
initADAMT3(s[1482]);
initADCOST1(s[1483]);
initADCOST2(s[1484]);
initADCOST3(s[1485]);
initADFUR1(s[1486]);
initADFUR2(s[1487]);
initADFUR3(s[1488]);
initORISKA(s[1489]);
initORISKC(s[1490]);
initOSAFESAV(s[1491]);
initORISKS(s[1492]);
initQHEALTH1(s[1493]);
initCUTDOWN(s[1494]);
initLSILL(s[1495]);
initILLLIM(s[1496]);
initDISTYPE1(s[1497]);
initDISTYPE2(s[1498]);
initDISTYPE3(s[1499]);
initDISTYPE4(s[1500]);
initDISTYPE5(s[1501]);
initDISTYPE6(s[1502]);
initDISTYPE7(s[1503]);
initDISTYPE8(s[1504]);
initDISTYPE9(s[1505]);
initDISEVER(s[1506]);
initSATIS(s[1507]);
initWORTH(s[1508]);
initHAPPY(s[1509]);
initANXIOUS(s[1510]);
initPENIND1(s[1511]);
initPENIND2(s[1512]);
initPENIND3(s[1513]);
initPENIND4(s[1514]);
initPENIND5(s[1515]);
initPENIND6(s[1516]);
initRPDBCAL_F(s[1517]);
initDVHASPFCUR(s[1518]);
initDVHASPFOCC(s[1519]);
initDVHASPFGRP(s[1520]);
initDVHASPFPRIV(s[1521]);
initDVHASPFSIPP(s[1522]);
initDVHASPFRAC(s[1523]);
initSCNDSCH(s[1524]);
initRF(s[1525]);
initRS(s[1526]);
initPDCVB1_I(s[1527]);
initPDCVB1_IFLAG(s[1528]);
initPDCVB2_I(s[1529]);
initPDCVB2_IFLAG(s[1530]);
initPDCVAL1_I(s[1531]);
initPDCVAL1_IFLAG(s[1532]);
initPDCVAL2_I(s[1533]);
initPDCVAL2_IFLAG(s[1534]);
initPOADD1_I(s[1535]);
initPOADD1_IFLAG(s[1536]);
initPOADD2_I(s[1537]);
initPOADD2_IFLAG(s[1538]);
initPOADD3_I(s[1539]);
initPOADD3_IFLAG(s[1540]);
initPOADD4_I(s[1541]);
initPOADD4_IFLAG(s[1542]);
initPOADD5_I(s[1543]);
initPOADD5_IFLAG(s[1544]);
initPOADD6_I(s[1545]);
initPOADD6_IFLAG(s[1546]);
initPAVCVB1_I(s[1547]);
initPAVCVB1_IFLAG(s[1548]);
initPAVCVB2_I(s[1549]);
initPAVCVB2_IFLAG(s[1550]);
initPAVCUV1_I(s[1551]);
initPAVCUV1_IFLAG(s[1552]);
initPAVCUV2_I(s[1553]);
initPAVCUV2_IFLAG(s[1554]);
initDVHASAVC(s[1555]);
initDVPAVCUV(s[1556]);
initDVHASDC(s[1557]);
initDVVALDCOS(s[1558]);
initDVPPVAL(s[1559]);
initDVHASPP(s[1560]);
initDVHASDB(s[1561]);
initFRSTSCH(s[1562]);
initACCFRAC1(s[1563]);
initACCFRAC2(s[1564]);
initVALPBLUM1(s[1565]);
initVALPBLUM2(s[1566]);
initDVVALDBLUM(s[1567]);
initDVPENINC1(s[1568]);
initDVPENINC2(s[1569]);
initASAF1T(s[1570]);
initTOPDVDBOPEN1T(s[1571]);
initBOTDVDBOPEN1T(s[1572]);
initDVDBOPEN1T(s[1573]);
initTOPDVDBOPEN2T(s[1574]);
initBOTDVDBOPEN2T(s[1575]);
initDVDBOPEN2T(s[1576]);
initDVVALDBT(s[1577]);
initPESAME(s[1578]);
initPEMOFF(s[1579]);
initPEMELG(s[1580]);
initPEMMEM(s[1581]);
initPCONT(s[1582]);
initPANYO(s[1583]);
initPNUMOS(s[1584]);
initPOCNMSC(s[1585]);
initPPRNMSC(s[1586]);
initPSCHM_F(s[1587]);
initPSCHM_S(s[1588]);
initPSCHM_T(s[1589]);
initPSCHY_T(s[1590]);
initPOCTYP1(s[1591]);
initPOJOIN1(s[1592]);
initWPBTHA1(s[1593]);
initWPBTHP1(s[1594]);
initWPERA1(s[1595]);
initWPNRA1(s[1596]);
initPORAGE1(s[1597]);
initPOMETH1(s[1598]);
initPOPYCH1(s[1599]);
initPOCONH1(s[1600]);
initPOCNPR1(s[1601]);
initPOCNFR1(s[1602]);
initPOCNFG1(s[1603]);
initPOLSYR1(s[1604]);
initPOYRAM1(s[1605]);
initPOEMP1(s[1606]);
initPOEMPH1(s[1607]);
initPOEMAM1(s[1608]);
initPOEMPR1(s[1609]);
initPOEMFR1(s[1610]);
initPOEMFG1(s[1611]);
initPOADD1(s[1612]);
initPOADD2(s[1613]);
initPOADD3(s[1614]);
initPDBCAL1(s[1615]);
initPBFRAC1(s[1616]);
initPBQUAL1(s[1617]);
initPBLUMV1(s[1618]);
initPBINCH1(s[1619]);
initPBINCF1(s[1620]);
initPBINCA1(s[1621]);
initPBDOCS1(s[1622]);
initPBSTYR1(s[1623]);
initPBSTMN1(s[1624]);
initPAVCUV1(s[1625]);
initPAVCVB1(s[1626]);
initPAVDOC1(s[1627]);
initPASTYR1(s[1628]);
initPASTMN1(s[1629]);
initPDCVAL1(s[1630]);
initPDCVB1(s[1631]);
initPCDOCS1(s[1632]);
initPCSTYR1(s[1633]);
initPCSTMN1(s[1634]);
initPOLUM1(s[1635]);
initPOLMV1(s[1636]);
initPOLMVB1(s[1637]);
initPOLMUS1(s[1638]);
initPOLMUS2(s[1639]);
initPOLMUS3(s[1640]);
initPOLMUS4(s[1641]);
initPOLMUS5(s[1642]);
initPOLMUS6(s[1643]);
initPOCASH1(s[1644]);
initPOCNAMT1(s[1645]);
initPOANN1(s[1646]);
initPOANJT1(s[1647]);
initPOANIF1(s[1648]);
initPOANEH1(s[1649]);
initPOANGA1(s[1650]);
initPOANVI1(s[1651]);
initPOANVB1(s[1652]);
initPODRVI1(s[1653]);
initPODRVB1(s[1654]);
initPODRINC1(s[1655]);
initPODRINCB1(s[1656]);
initPOPENVI(s[1657]);
initPOPENVB1(s[1658]);
initPOFAN1(s[1659]);
initPOFAN2(s[1660]);
initPOFAN3(s[1661]);
initPOFAN4(s[1662]);
initPOFAN5(s[1663]);
initPOFAN6(s[1664]);
initPOFAWH1(s[1665]);
initPOFAWH2(s[1666]);
initPOFAWH6(s[1667]);
initPOFAAG1(s[1668]);
initPOCTYP2(s[1669]);
initPOJOIN2(s[1670]);
initWPBTHA2(s[1671]);
initWPBTHP2(s[1672]);
initWPERA2(s[1673]);
initWPNRA2(s[1674]);
initPORAGE2(s[1675]);
initPOMETH2(s[1676]);
initPOPYCH2(s[1677]);
initPOCONH2(s[1678]);
initPOCNPR2(s[1679]);
initPOCNFR2(s[1680]);
initPOCNFG2(s[1681]);
initPOLSYR2(s[1682]);
initPOYRAM2(s[1683]);
initPOEMP2(s[1684]);
initPOEMPH2(s[1685]);
initPOEMAM2(s[1686]);
initPOEMPR2(s[1687]);
initPOEMFR2(s[1688]);
initPOEMFG2(s[1689]);
initPOADD4(s[1690]);
initPDBCAL2(s[1691]);
initPBFRAC2(s[1692]);
initPBQUAL2(s[1693]);
initPBLUMV2(s[1694]);
initPBLMVB2(s[1695]);
initPBINCH2(s[1696]);
initPBINCF2(s[1697]);
initPBINCA2(s[1698]);
initPBDOCS2(s[1699]);
initPBSTYR2(s[1700]);
initPBSTMN2(s[1701]);
initPAVCUV2(s[1702]);
initPAVCVB2(s[1703]);
initPAVDOC2(s[1704]);
initPASTYR2(s[1705]);
initPASTMN2(s[1706]);
initPDCVAL2(s[1707]);
initPDCVB2(s[1708]);
initPCDOCS2(s[1709]);
initPCSTYR2(s[1710]);
initPCSTMN2(s[1711]);
initPOLUM2(s[1712]);
initPOLMV2(s[1713]);
initPOLMUS7(s[1714]);
initPOLMUS8(s[1715]);
initPOCASH2(s[1716]);
initPOCNAMT2(s[1717]);
initPOANN5(s[1718]);
initPOANVI2(s[1719]);
initPOANVB2(s[1720]);
initPODRVI2(s[1721]);
initPODRVB2(s[1722]);
initPODRINC2(s[1723]);
initPODRINCB2(s[1724]);
initPOPENVI2(s[1725]);
initPOPENVB2(s[1726]);
initPOFAN7(s[1727]);
initPOFAN8(s[1728]);
initPOFAAG2(s[1729]);
initPPYRST1(s[1730]);
initPPORG1(s[1731]);
initPPTYP1(s[1732]);
initPPSIPP1(s[1733]);
initPPPAY1(s[1734]);
initPPRGH1(s[1735]);
initPPRGAM1(s[1736]);
initPPRGPE1(s[1737]);
initPPRGFR1(s[1738]);
initPPRGFG1(s[1739]);
initPPLSTA1(s[1740]);
initPPLSTP1(s[1741]);
initPPEVRG1(s[1742]);
initPPYSTP1(s[1743]);
initPPYSTP2(s[1744]);
initPPCONCH1(s[1745]);
initPPCNHOW1(s[1746]);
initPPCNLRS1(s[1747]);
initPPCNLRS2(s[1748]);
initPPCNLRS3(s[1749]);
initPPCNDRS1(s[1750]);
initPPCNDRS2(s[1751]);
initPPEMP1(s[1752]);
initPPEMPH1(s[1753]);
initPPEMAM1(s[1754]);
initPPEMPR1(s[1755]);
initPPEMFR1(s[1756]);
initPPEIRH1(s[1757]);
initPPEIRA1(s[1758]);
initPPEIRF1(s[1759]);
initPPVINT1(s[1760]);
initPPVAL1(s[1761]);
initPPVALB1(s[1762]);
initPPDOCS1(s[1763]);
initPPSTYR1(s[1764]);
initPPSTMN1(s[1765]);
initPMORTC1(s[1766]);
initPPLUM1(s[1767]);
initPPLMV1(s[1768]);
initPPLMVB1(s[1769]);
initPPLMUS1(s[1770]);
initPPCASH1(s[1771]);
initPPANN1(s[1772]);
initPPANN2(s[1773]);
initPPANJT1(s[1774]);
initPPANIF1(s[1775]);
initPPANEH1(s[1776]);
initPPANGA1(s[1777]);
initPPANVI1(s[1778]);
initPPANVB1(s[1779]);
initPPDRVI1(s[1780]);
initPPDRVB1(s[1781]);
initPPDRINC1(s[1782]);
initPPDRINCB1(s[1783]);
initPPFAN1(s[1784]);
initPPFAN2(s[1785]);
initPPFAWH1(s[1786]);
initPPFAWH2(s[1787]);
initPPFAWH3(s[1788]);
initPPFAWH6(s[1789]);
initPPFAAG1(s[1790]);
initPPACCU1(s[1791]);
initPPYRST2(s[1792]);
initPPORG2(s[1793]);
initPPTYP2(s[1794]);
initPPSIPP2(s[1795]);
initPPPAY2(s[1796]);
initPPRGH2(s[1797]);
initPPRGAM2(s[1798]);
initPPRGPE2(s[1799]);
initPPRGFR2(s[1800]);
initPPRGFG2(s[1801]);
initPPLSTA2(s[1802]);
initPPLSTP2(s[1803]);
initPPEVRG2(s[1804]);
initPPYSTP8(s[1805]);
initPPYSTP9(s[1806]);
initPPYSTP10(s[1807]);
initPPYSTP11(s[1808]);
initPPYSTP12(s[1809]);
initPPYSTP13(s[1810]);
initPPYSTP14(s[1811]);
initPPCONCH2(s[1812]);
initPPCNHOW2(s[1813]);
initPPCNLRS5(s[1814]);
initPPCNDRS10(s[1815]);
initPPCNDRS11(s[1816]);
initPPEMP2(s[1817]);
initPPEMPH2(s[1818]);
initPPEMAM2(s[1819]);
initPPEMPR2(s[1820]);
initPPEMFR2(s[1821]);
initPPEIRH2(s[1822]);
initPPEIRA2(s[1823]);
initPPEIRF2(s[1824]);
initPPVINT2(s[1825]);
initPPVAL2(s[1826]);
initPPVALB2(s[1827]);
initPPDOCS2(s[1828]);
initPPSTYR2(s[1829]);
initPPSTMN2(s[1830]);
initPMORTC2(s[1831]);
initPPLUM2(s[1832]);
initPPLMV2(s[1833]);
initPPLMVB2(s[1834]);
initPPLMUS2(s[1835]);
initPPCASH2(s[1836]);
initPPANN5(s[1837]);
initPPANJT2(s[1838]);
initPPANIF2(s[1839]);
initPPANEH2(s[1840]);
initPPANGA2(s[1841]);
initPPANVI2(s[1842]);
initPPANVB2(s[1843]);
initPPDRVI2(s[1844]);
initPPDRVB2(s[1845]);
initPPDRINC2(s[1846]);
initPPDRINCB2(s[1847]);
initPPFAN6(s[1848]);
initPPACCU2(s[1849]);
initPPYRST3(s[1850]);
initPPORG3(s[1851]);
initPPTYP3(s[1852]);
initPPSIPP3(s[1853]);
initPPPAY3(s[1854]);
initPPRGH3(s[1855]);
initPPRGAM3(s[1856]);
initPPRGPE3(s[1857]);
initPPLSTA3(s[1858]);
initPPLSTP3(s[1859]);
initPPEVRG3(s[1860]);
initPPYSTP19(s[1861]);
initPPCONCH3(s[1862]);
initPPCNHOW3(s[1863]);
initPPCNDRS19(s[1864]);
initPPEMP3(s[1865]);
initPPEMPH3(s[1866]);
initPPEMAM3(s[1867]);
initPPEMPR3(s[1868]);
initPPEMFR3(s[1869]);
initPPEIRH3(s[1870]);
initPPEIRA3(s[1871]);
initPPEIRF3(s[1872]);
initPPVINT3(s[1873]);
initPPVAL3(s[1874]);
initPPVALB3(s[1875]);
initPPDOCS3(s[1876]);
initPPSTYR3(s[1877]);
initPPSTMN3(s[1878]);
initPMORTC3(s[1879]);
initPPLUM3(s[1880]);
initPPLMV3(s[1881]);
initPPLMVB3(s[1882]);
initPPLMUS3(s[1883]);
initPPCASH3(s[1884]);
initPPANN9(s[1885]);
initPPANN10(s[1886]);
initPPANN11(s[1887]);
initPPANN12(s[1888]);
initPPANJT3(s[1889]);
initPPANIF3(s[1890]);
initPPANEH3(s[1891]);
initPPANGA3(s[1892]);
initPPANVI3(s[1893]);
initPPANVB3(s[1894]);
initPPFAN11(s[1895]);
initPPFAWH15(s[1896]);
initPPFAWH16(s[1897]);
initPPFAWH17(s[1898]);
initPPFAWH18(s[1899]);
initPPACCU3(s[1900]);
initPFNEW(s[1901]);
initPFNEWNO(s[1902]);
initPEVERC(s[1903]);
initPEVERNC(s[1904]);
initPRETAIN(s[1905]);
initPFNUM(s[1906]);
initPFEN(s[1907]);
initPFEN_I(s[1908]);
initPFEN_IFLAG(s[1909]);
initPFENNUM(s[1910]);
initPFENNUM_I(s[1911]);
initPFENNUM_IFLAG(s[1912]);
initRPFCRET1(s[1913]);
initRPFCRET2(s[1914]);
initRPFCRET3(s[1915]);
initRPFCRET4(s[1916]);
initRPFCRET5(s[1917]);
initRPFCRET6(s[1918]);
initRPCRET1(s[1919]);
initRPCRET2(s[1920]);
initRPCRET3(s[1921]);
initPFTYP1(s[1922]);
initPFOCTY1(s[1923]);
initPFLUM1(s[1924]);
initPFLMV1(s[1925]);
initPFLMVB1(s[1926]);
initPFLMUS1(s[1927]);
initPFLUMALL1(s[1928]);
initPFCASH1(s[1929]);
initPFANN1(s[1930]);
initPFREM1(s[1931]);
initPFANJT1(s[1932]);
initPFANIF1(s[1933]);
initPFANEH1(s[1934]);
initPFANGA1(s[1935]);
initPFANVI1(s[1936]);
initPFANVB1(s[1937]);
initPFDRVI1(s[1938]);
initPFDRVB1(s[1939]);
initPFDRINC1(s[1940]);
initPFPENVI1(s[1941]);
initPFPENVB1(s[1942]);
initPFFAN1(s[1943]);
initPFFAN2(s[1944]);
initPFFAWH1(s[1945]);
initPFFAWH6(s[1946]);
initPFFAAG1(s[1947]);
initPFREC1(s[1948]);
initPFDRAW1(s[1949]);
initPFDDV1(s[1950]);
initPFDDVB1(s[1951]);
initPFCURV1(s[1952]);
initPFCUVB1(s[1953]);
initPFLUMV1(s[1954]);
initPFLUVB1(s[1955]);
initPFINCP1(s[1956]);
initPFINCA1(s[1957]);
initPFDOCS1(s[1958]);
initPFSTMY1(s[1959]);
initPFSTMM1(s[1960]);
initPFSTAT1(s[1961]);
initPFTYP2(s[1962]);
initPFOCTY2(s[1963]);
initPFLUM2(s[1964]);
initPFLMV2(s[1965]);
initPFLMVB2(s[1966]);
initPFLMUS2(s[1967]);
initPFLUMALL2(s[1968]);
initPFCASH2(s[1969]);
initPFANN6(s[1970]);
initPFREM2(s[1971]);
initPFANJT2(s[1972]);
initPFANIF2(s[1973]);
initPFANEH2(s[1974]);
initPFANGA2(s[1975]);
initPFANVI2(s[1976]);
initPFANVB2(s[1977]);
initPFPENVI2(s[1978]);
initPFPENVB2(s[1979]);
initPFFAN6(s[1980]);
initPFFAAG2(s[1981]);
initPFREC2(s[1982]);
initPFDRAW2(s[1983]);
initPFDDV2(s[1984]);
initPFDDVB2(s[1985]);
initPFCURV2(s[1986]);
initPFCUVB2(s[1987]);
initPFLUMV2(s[1988]);
initPFLUVB2(s[1989]);
initPFINCP2(s[1990]);
initPFINCA2(s[1991]);
initPFDOCS2(s[1992]);
initPFSTMY2(s[1993]);
initPFSTMM2(s[1994]);
initPFSTAT2(s[1995]);
initPFTYP3(s[1996]);
initPFOCTY3(s[1997]);
initPFLUM3(s[1998]);
initPFLMV3(s[1999]);
initPFLMVB3(s[2000]);
initPFLMUS3(s[2001]);
initPFLUMALL3(s[2002]);
initPFCASH3(s[2003]);
initPFREM3(s[2004]);
initPFANVI3(s[2005]);
initPFANVB3(s[2006]);
initPFPENVI3(s[2007]);
initPFPENVB3(s[2008]);
initPFFAN11(s[2009]);
initPFFAWH16(s[2010]);
initPFREC3(s[2011]);
initPFDRAW3(s[2012]);
initPFDDV3(s[2013]);
initPFDDVB3(s[2014]);
initPFCURV3(s[2015]);
initPFCUVB3(s[2016]);
initPFLUMV3(s[2017]);
initPFLUVB3(s[2018]);
initPFINCP3(s[2019]);
initPFINCA3(s[2020]);
initPFDOCS3(s[2021]);
initPFSTMY3(s[2022]);
initPFSTMM3(s[2023]);
initPFSTAT3(s[2024]);
initPFTYP4(s[2025]);
initPFOCTY4(s[2026]);
initPFLUM4(s[2027]);
initPFLMV4(s[2028]);
initPFLMUS4(s[2029]);
initPFLUMALL4(s[2030]);
initPFCASH4(s[2031]);
initPFANN16(s[2032]);
initPFREM4(s[2033]);
initPFANJT4(s[2034]);
initPFANIF4(s[2035]);
initPFANEH4(s[2036]);
initPFANGA4(s[2037]);
initPFANVI4(s[2038]);
initPFANVB4(s[2039]);
initPFPENVI4(s[2040]);
initPFPENVB4(s[2041]);
initPFFAN16(s[2042]);
initPFREC4(s[2043]);
initPFCURV4(s[2044]);
initPFCUVB4(s[2045]);
initPFLUMV4(s[2046]);
initPFLUVB4(s[2047]);
initPFINCP4(s[2048]);
initPFINCA4(s[2049]);
initPFDOCS4(s[2050]);
initPFSTMY4(s[2051]);
initPFSTMM4(s[2052]);
initPFSTAT4(s[2053]);
initPFTYP5(s[2054]);
initPFOCTY5(s[2055]);
initPFLUM5(s[2056]);
initPFANVI5(s[2057]);
initPFANVB5(s[2058]);
initPFPENVI5(s[2059]);
initPFPENVB5(s[2060]);
initPFREC5(s[2061]);
initPFCURV5(s[2062]);
initPFCUVB5(s[2063]);
initPFLUMV5(s[2064]);
initPFLUVB5(s[2065]);
initPFINCP5(s[2066]);
initPFINCA5(s[2067]);
initPFDOCS5(s[2068]);
initPFSTMY5(s[2069]);
initPFSTMM5(s[2070]);
initPFSTAT5(s[2071]);
initPFTYP6(s[2072]);
initPFOCTY6(s[2073]);
initPFLUM6(s[2074]);
initPFLMV6(s[2075]);
initPFANVI6(s[2076]);
initPFANVB6(s[2077]);
initPFPENVI6(s[2078]);
initPFPENVB6(s[2079]);
initPFREC6(s[2080]);
initPFCURV6(s[2081]);
initPFCUVB6(s[2082]);
initPFLUMV6(s[2083]);
initPFLUVB6(s[2084]);
initPFINCP6(s[2085]);
initPFINCA6(s[2086]);
initPFDOCS6(s[2087]);
initPFSTMY6(s[2088]);
initPFSTMM6(s[2089]);
initPFSTAT6(s[2090]);
initPWID(s[2091]);
initPWIDFUT(s[2092]);
initPWLUM(s[2093]);
initPWLUVAL(s[2094]);
initPWEXPH(s[2095]);
initPWEXPA(s[2096]);
initPSPSE(s[2097]);
initPSPLUM(s[2098]);
initPSPLUVAL(s[2099]);
initPSPEXPH(s[2100]);
initPSPEXPA(s[2101]);
initPWACCU(s[2102]);
initPFLUVB1_I(s[2103]);
initPFLUVB2_I(s[2104]);
initPFLUVB3_I(s[2105]);
initPFLUVB4_I(s[2106]);
initPFLUVB5_I(s[2107]);
initPFLUVB6_I(s[2108]);
initPFLUVB1_IFLAG(s[2109]);
initPFLUVB2_IFLAG(s[2110]);
initPFLUVB3_IFLAG(s[2111]);
initPFLUVB4_IFLAG(s[2112]);
initPFLUVB5_IFLAG(s[2113]);
initPFLUVB6_IFLAG(s[2114]);
initPFLUMV1_I(s[2115]);
initPFLUMV2_I(s[2116]);
initPFLUMV3_I(s[2117]);
initPFLUMV4_I(s[2118]);
initPFLUMV5_I(s[2119]);
initPFLUMV6_I(s[2120]);
initPFLUMV1_IFLAG(s[2121]);
initPFLUMV2_IFLAG(s[2122]);
initPFLUMV3_IFLAG(s[2123]);
initPFLUMV4_IFLAG(s[2124]);
initPFLUMV5_IFLAG(s[2125]);
initPFLUMV6_IFLAG(s[2126]);
initPFCURV1_I(s[2127]);
initPFCURV2_I(s[2128]);
initPFCURV3_I(s[2129]);
initPFCURV4_I(s[2130]);
initPFCURV5_I(s[2131]);
initPFCURV6_I(s[2132]);
initPFCURV1_IFLAG(s[2133]);
initPFCURV2_IFLAG(s[2134]);
initPFCURV3_IFLAG(s[2135]);
initPFCURV4_IFLAG(s[2136]);
initPFCURV5_IFLAG(s[2137]);
initPFCURV6_IFLAG(s[2138]);
initPORAGE1T(s[2139]);
initPORAGE2T(s[2140]);
initANNUITY1(s[2141]);
initANNUITY2(s[2142]);
initMNTHSCAPE(s[2143]);
initRETFRAC(s[2144]);
initDVPINPVAL(s[2145]);
initDVWID(s[2146]);
initDVSPS(s[2147]);
initDVSPEN(s[2148]);
initDVDBINCALL(s[2149]);
initDVVALPBLUM(s[2150]);
initDVPFCURVAL(s[2151]);
initDVDBRWEALTHVAL(s[2152]);
initTOTPEN(s[2153]);
initPEVERC_I(s[2154]);
initPEVERC_IFLAG(s[2155]);
initPEVERNC_I(s[2156]);
initPEVERNC_IFLAG(s[2157]);
initPRETAIN_I(s[2158]);
initPRETAIN_IFLAG(s[2159]);
initPFNUM_I(s[2160]);
initPFNUM_IFLAG(s[2161]);
initPFNEW_I(s[2162]);
initPFNEW_IFLAG(s[2163]);
initPFNEWNO_I(s[2164]);
initPFNEWNO_IFLAG(s[2165]);
initALLRET_I(s[2166]);
initPFTYP1_I(s[2167]);
initPFTYP1_IFLAG(s[2168]);
initPFTYP2_I(s[2169]);
initPFTYP2_IFLAG(s[2170]);
initPFTYP3_I(s[2171]);
initPFTYP3_IFLAG(s[2172]);
initPFTYP4_I(s[2173]);
initPFTYP4_IFLAG(s[2174]);
initPFTYP5_I(s[2175]);
initPFTYP5_IFLAG(s[2176]);
initPFTYP6_I(s[2177]);
initPFTYP6_IFLAG(s[2178]);
initPFOCTY1_I(s[2179]);
initPFOCTY1_IFLAG(s[2180]);
initPFOCTY2_I(s[2181]);
initPFOCTY2_IFLAG(s[2182]);
initPFOCTY3_I(s[2183]);
initPFOCTY3_IFLAG(s[2184]);
initPFOCTY4_I(s[2185]);
initPFOCTY4_IFLAG(s[2186]);
initPFOCTY5_I(s[2187]);
initPFOCTY5_IFLAG(s[2188]);
initPFOCTY6_I(s[2189]);
initPFOCTY6_IFLAG(s[2190]);
initPFLUM1_I(s[2191]);
initPFLUM1_IFLAG(s[2192]);
initPFLUM2_I(s[2193]);
initPFLUM2_IFLAG(s[2194]);
initPFLUM3_I(s[2195]);
initPFLUM3_IFLAG(s[2196]);
initPFLUM4_I(s[2197]);
initPFLUM4_IFLAG(s[2198]);
initPFLUM5_I(s[2199]);
initPFLUM5_IFLAG(s[2200]);
initPFLUM6_I(s[2201]);
initPFLUM6_IFLAG(s[2202]);
initPFLUMALL1_I(s[2203]);
initPFLUMALL1_IFLAG(s[2204]);
initPFLUMALL2_I(s[2205]);
initPFLUMALL2_IFLAG(s[2206]);
initPFLUMALL3_I(s[2207]);
initPFLUMALL3_IFLAG(s[2208]);
initPFLUMALL4_I(s[2209]);
initPFLUMALL4_IFLAG(s[2210]);
initPFCASH1_I(s[2211]);
initPFCASH1_IFLAG(s[2212]);
initPFCASH2_I(s[2213]);
initPFCASH2_IFLAG(s[2214]);
initPFCASH3_I(s[2215]);
initPFCASH3_IFLAG(s[2216]);
initPFCASH4_I(s[2217]);
initPFCASH4_IFLAG(s[2218]);
initPFREM1_I(s[2219]);
initPFREM1_IFLAG(s[2220]);
initPFREM2_I(s[2221]);
initPFREM2_IFLAG(s[2222]);
initPFREM3_I(s[2223]);
initPFREM3_IFLAG(s[2224]);
initPFREM4_I(s[2225]);
initPFREM4_IFLAG(s[2226]);
initPFREC1_I(s[2227]);
initPFREC1_IFLAG(s[2228]);
initPFREC2_I(s[2229]);
initPFREC2_IFLAG(s[2230]);
initPFREC3_I(s[2231]);
initPFREC3_IFLAG(s[2232]);
initPFREC4_I(s[2233]);
initPFREC4_IFLAG(s[2234]);
initPFREC5_I(s[2235]);
initPFREC5_IFLAG(s[2236]);
initPFREC6_I(s[2237]);
initPFREC6_IFLAG(s[2238]);
initPFDRAW1_I(s[2239]);
initPFDRAW1_IFLAG(s[2240]);
initPFDRAW2_I(s[2241]);
initPFDRAW2_IFLAG(s[2242]);
initPFDRAW3_I(s[2243]);
initPFDRAW3_IFLAG(s[2244]);
initPFINCP1_I(s[2245]);
initPFINCP1_IFLAG(s[2246]);
initPFINCP2_I(s[2247]);
initPFINCP2_IFLAG(s[2248]);
initPFINCP3_I(s[2249]);
initPFINCP3_IFLAG(s[2250]);
initPFINCP4_I(s[2251]);
initPFINCP4_IFLAG(s[2252]);
initPFINCP5_I(s[2253]);
initPFINCP5_IFLAG(s[2254]);
initPFINCP6_I(s[2255]);
initPFINCP6_IFLAG(s[2256]);
initPFINCA1_I(s[2257]);
initPFINCA1_IFLAG(s[2258]);
initPFINCA2_I(s[2259]);
initPFINCA2_IFLAG(s[2260]);
initPFINCA3_I(s[2261]);
initPFINCA3_IFLAG(s[2262]);
initPFINCA4_I(s[2263]);
initPFINCA4_IFLAG(s[2264]);
initPFINCA5_I(s[2265]);
initPFINCA5_IFLAG(s[2266]);
initPFINCA6_I(s[2267]);
initOTHSRC1_I(s[2268]);
initOTHSRC1_IFLAG(s[2269]);
initOTHSRC2_I(s[2270]);
initOTHSRC2_IFLAG(s[2271]);
initOTHSRC3_I(s[2272]);
initOTHSRC3_IFLAG(s[2273]);
initOTHSRC4_I(s[2274]);
initOTHSRC4_IFLAG(s[2275]);
initPSPEXPH_I(s[2276]);
initPSPEXPH_IFLAG(s[2277]);
initPSPSE_I(s[2278]);
initPSPSE_IFLAG(s[2279]);
initPWEXPH_I(s[2280]);
initPWEXPH_IFLAG(s[2281]);
initPWIDFUT_I(s[2282]);
initPWIDFUT_IFLAG(s[2283]);
initXMARSTA_I(s[2284]);
initXMARSTA_IFLAG(s[2285]);
initMARBEF_I(s[2286]);
initMARBEF_IFLAG(s[2287]);
initPWEXPA_I(s[2288]);
initPWEXPA_IFLAG(s[2289]);
initPSPEXPA_I(s[2290]);
initPSPEXPA_IFLAG(s[2291]);
initDVOIGOEANNUAL_IFLAG(s[2292]);
initDVOIGOSANNUAL_IFLAG(s[2293]);
initDVOIGPPANNUAL_IFLAG(s[2294]);
initAGEASAF(s[2295]);
initPINCINP(s[2296]);
initPFCUVB1_I(s[2297]);
initPFCUVB1_IFLAG(s[2298]);
initPFCUVB2_I(s[2299]);
initPFCUVB2_IFLAG(s[2300]);
initPFCUVB3_I(s[2301]);
initPFCUVB3_IFLAG(s[2302]);
initPFCUVB4_I(s[2303]);
initPFCUVB4_IFLAG(s[2304]);
initPFCUVB5_I(s[2305]);
initPFCUVB5_IFLAG(s[2306]);
initPFCUVB6_I(s[2307]);
initPFCUVB6_IFLAG(s[2308]);
initPFDDVB1_I(s[2309]);
initPFDDVB1_IFLAG(s[2310]);
initPFDDVB2_I(s[2311]);
initPFDDVB2_IFLAG(s[2312]);
initPFDDVB3_I(s[2313]);
initPFDDVB3_IFLAG(s[2314]);
initPFDDVB4_I(s[2315]);
initPFDDVB4_IFLAG(s[2316]);
initPFDDVB5_I(s[2317]);
initPFDDVB5_IFLAG(s[2318]);
initPFDDVB6_I(s[2319]);
initPFDDVB6_IFLAG(s[2320]);
initPFDDV1_I(s[2321]);
initPFDDV1_IFLAG(s[2322]);
initPFDDV2_I(s[2323]);
initPFDDV2_IFLAG(s[2324]);
initPFDDV3_I(s[2325]);
initPFDDV3_IFLAG(s[2326]);
initPFDDV4_I(s[2327]);
initPFDDV4_IFLAG(s[2328]);
initPESAME_I(s[2329]);
initPESAME_IFLAG(s[2330]);
initPEMOFF_I(s[2331]);
initPEMOFF_IFLAG(s[2332]);
initPEMELG_I(s[2333]);
initPEMELG_IFLAG(s[2334]);
initPEMMEM_I(s[2335]);
initPEMMEM_IFLAG(s[2336]);
initPCONT_I(s[2337]);
initPCONT_IFLAG(s[2338]);
initPANYO_I(s[2339]);
initPANYO_IFLAG(s[2340]);
initPNUMOS_I(s[2341]);
initPNUMOS_IFLAG(s[2342]);
initPSCHM_F_I(s[2343]);
initPSCHM_F_IFLAG(s[2344]);
initPSCHM_S_I(s[2345]);
initPSCHM_S_IFLAG(s[2346]);
initPSCHM_T_I(s[2347]);
initPSCHM_T_IFLAG(s[2348]);
initPOCNMSC_I(s[2349]);
initPOCNMSC_IFLAG(s[2350]);
initPOCTYP1_I(s[2351]);
initPOCTYP1_IFLAG(s[2352]);
initPOCTYP2_I(s[2353]);
initPOCTYP2_IFLAG(s[2354]);
initPBFRAC1_I(s[2355]);
initPBFRAC1_IFLAG(s[2356]);
initPBFRAC2_I(s[2357]);
initPBFRAC2_IFLAG(s[2358]);
initPBQUAL1_I(s[2359]);
initPBQUAL1_IFLAG(s[2360]);
initPBQUAL2_I(s[2361]);
initPBQUAL2_IFLAG(s[2362]);
initPBLMVB1_I(s[2363]);
initPBLMVB1_IFLAG(s[2364]);
initPBLMVB2_I(s[2365]);
initPBLMVB2_IFLAG(s[2366]);
initPBLUMV1_I(s[2367]);
initPBLUMV1_IFLAG(s[2368]);
initPBLUMV2_I(s[2369]);
initPBLUMV2_IFLAG(s[2370]);
initASAF2T(s[2371]);
initPOWER1T(s[2372]);
initPOWER2T(s[2373]);
initPPRNMSC_I(s[2374]);
initPPRNMSC_IFLAG(s[2375]);
initPPVALB1_I(s[2376]);
initPPVALB1_IFLAG(s[2377]);
initPPVALB2_I(s[2378]);
initPPVALB2_IFLAG(s[2379]);
initPPVALB3_I(s[2380]);
initPPVALB3_IFLAG(s[2381]);
initPPVAL1_I(s[2382]);
initPPVAL1_IFLAG(s[2383]);
initPPVAL2_I(s[2384]);
initPPVAL2_IFLAG(s[2385]);
initPPVAL3_I(s[2386]);
initPPVAL3_IFLAG(s[2387]);
initDVDBLUMP1(s[2388]);
initDVDBLUMP2(s[2389]);
initDVDBLUMP3(s[2390]);
initDVDBLUMP4(s[2391]);
initDVDBLUMP5(s[2392]);
initDVDBLUMP6(s[2393]);
initDVDBINC1(s[2394]);
initDVDBINC2(s[2395]);
initDVDBINC3(s[2396]);
initDVDBINC4(s[2397]);
initDVDBINC5(s[2398]);
initDVDBINC6(s[2399]);
initDVHASPFD(s[2400]);
initDVPFDDV(s[2401]);
initPOLUM1_I(s[2402]);
initPOLUM1_IFLAG(s[2403]);
initPOLUM2_I(s[2404]);
initPOLUM2_IFLAG(s[2405]);
initPOLMVB1_I(s[2406]);
initPOLMVB1_IFLAG(s[2407]);
initPOLMVB2_I(s[2408]);
initPOLMVB2_IFLAG(s[2409]);
initPOLMV1_I(s[2410]);
initPOLMV1_IFLAG(s[2411]);
initPOLMV2_I(s[2412]);
initPOLMV2_IFLAG(s[2413]);
initPPLUM1_I(s[2414]);
initPPLUM1_IFLAG(s[2415]);
initPPLUM2_I(s[2416]);
initPPLUM2_IFLAG(s[2417]);
initPPLUM3_I(s[2418]);
initPPLUM3_IFLAG(s[2419]);
initPPLMVB1_I(s[2420]);
initPPLMVB1_IFLAG(s[2421]);
initPPLMVB2_I(s[2422]);
initPPLMVB2_IFLAG(s[2423]);
initPPLMVB3_I(s[2424]);
initPPLMVB3_IFLAG(s[2425]);
initPPLMV1_I(s[2426]);
initPPLMV1_IFLAG(s[2427]);
initPPLMV2_I(s[2428]);
initPPLMV2_IFLAG(s[2429]);
initPPLMV3_I(s[2430]);
initPPLMV3_IFLAG(s[2431]);
initPFLMV1_I(s[2432]);
initPFLMV1_IFLAG(s[2433]);
initPFLMV2_I(s[2434]);
initPFLMV2_IFLAG(s[2435]);
initPFLMV3_I(s[2436]);
initPFLMV3_IFLAG(s[2437]);
initPFLMV4_I(s[2438]);
initPFLMV4_IFLAG(s[2439]);
initPFLMVB1_I(s[2440]);
initPFLMVB1_IFLAG(s[2441]);
initPFLMVB2_I(s[2442]);
initPFLMVB2_IFLAG(s[2443]);
initPFLMVB3_I(s[2444]);
initPFLMVB3_IFLAG(s[2445]);
initPFLMVB4_I(s[2446]);
initPFLMVB4_IFLAG(s[2447]);
initDVSAME(s[2448]);
initPBLMVB1(s[2449]);
initALLRET(s[2450]);
initBTYPE1(s[2451]);
initBDIRNI1(s[2452]);
initBOWN1(s[2453]);
initBPROPN1(s[2454]);
initBACCSA1(s[2455]);
initBACCSB1(s[2456]);
initBPART1(s[2457]);
initBACCBEG1(s[2458]);
initBDOCS1(s[2459]);
initBPROFIT1(s[2460]);
initBPRFLOSS1(s[2461]);
initBTAX1(s[2462]);
initBNATINS1(s[2463]);
initBBEFORE1(s[2464]);
initBCARRY1(s[2465]);
initBSIZE1(s[2466]);
initBEMPN1(s[2467]);
initBYEAR1(s[2468]);
initBSTART1(s[2469]);
initBFUND1(s[2470]);
initBFUND2(s[2471]);
initBRETIRE1(s[2472]);
initBDEBTS1(s[2473]);
initBOWED1(s[2474]);
initBVAL1(s[2475]);
initBVALB1(s[2476]);
initBTYPE2(s[2477]);
initBDIRNI2(s[2478]);
initBOWN2(s[2479]);
initBPROPN2(s[2480]);
initBACCSA2(s[2481]);
initBACCSB2(s[2482]);
initBPART2(s[2483]);
initBACCBEG2(s[2484]);
initBDOCS2(s[2485]);
initBPROFIT2(s[2486]);
initBPRFLOSS2(s[2487]);
initBTAX2(s[2488]);
initBNATINS2(s[2489]);
initBBEFORE2(s[2490]);
initBSIZE2(s[2491]);
initBEMPN2(s[2492]);
initBYEAR2(s[2493]);
initBSTART2(s[2494]);
initBFUND9(s[2495]);
initBFUND10(s[2496]);
initBRETIRE2(s[2497]);
initBDEBTS2(s[2498]);
initBOWED2(s[2499]);
initBVAL2(s[2500]);
initBVALB2(s[2501]);
initBTYPE3(s[2502]);
initBDIRNI3(s[2503]);
initBOWN3(s[2504]);
initBPROPN3(s[2505]);
initBACCSA3(s[2506]);
initBACCSB3(s[2507]);
initBPART3(s[2508]);
initBACCBEG3(s[2509]);
initBDOCS3(s[2510]);
initBPROFIT3(s[2511]);
initBPRFLOSS3(s[2512]);
initBTAX3(s[2513]);
initBNATINS3(s[2514]);
initBBEFORE3(s[2515]);
initBCARRY3(s[2516]);
initBSIZE3(s[2517]);
initBEMPN3(s[2518]);
initBYEAR3(s[2519]);
initBSTART3(s[2520]);
initBFUND17(s[2521]);
initBRETIRE3(s[2522]);
initBDEBTS3(s[2523]);
initBOWED3(s[2524]);
initBVAL3(s[2525]);
initBVALB3(s[2526]);
initBPAST(s[2527]);
initBSELLYR(s[2528]);
initBSELLAM(s[2529]);
initBSELLAB(s[2530]);
initBSELLTX(s[2531]);
initBMOREBUS(s[2532]);
initBWORTH(s[2533]);
initBWORTHB(s[2534]);
initBTYPE1_I(s[2535]);
initBTYPE1_IFLAG(s[2536]);
initBDIRNI1_I(s[2537]);
initBDIRNI1_IFLAG(s[2538]);
initBENINTRO(s[2539]);
initBENTYPE01(s[2540]);
initBENTYPE02(s[2541]);
initBENTYPE03(s[2542]);
initBENTYPE04(s[2543]);
initBENTYPE05(s[2544]);
initBENTYPE06(s[2545]);
initBENTYPE07(s[2546]);
initBENTYPE08(s[2547]);
initBENTYPE09(s[2548]);
initBENTYPE10(s[2549]);
initBENTYPE11(s[2550]);
initBENTYPE12(s[2551]);
initSOCFUND1(s[2552]);
initSOCFUND2(s[2553]);
initSOCFUND3(s[2554]);
initSOCFUND4(s[2555]);
initSOCFUND1_I(s[2556]);
initSOCFUND2_I(s[2557]);
initSOCFUND3_I(s[2558]);
initSOCFUND4_I(s[2559]);
initSOCFUND_IFLAG(s[2560]);
initDISBEN1(s[2561]);
initDISBEN2(s[2562]);
initDISBEN3(s[2563]);
initDISBEN1_I(s[2564]);
initDISBEN2_I(s[2565]);
initDISBEN3_I(s[2566]);
initDISBEN_IFLAG(s[2567]);
initPENBEN1(s[2568]);
initPENBEN2(s[2569]);
initPENBEN3(s[2570]);
initPENBEN1_I(s[2571]);
initPENBEN2_I(s[2572]);
initPENBEN3_I(s[2573]);
initPENBEN_IFLAG(s[2574]);
initKIDBEN1(s[2575]);
initKIDBEN2(s[2576]);
initKIDBEN1_I(s[2577]);
initKIDBEN2_I(s[2578]);
initKIDBEN_IFLAG(s[2579]);
initWAGEBEN1(s[2580]);
initWAGEBEN2(s[2581]);
initWAGEBEN3(s[2582]);
initWAGEBEN4(s[2583]);
initWAGEBEN5(s[2584]);
initWAGEBEN6(s[2585]);
initWAGEBEN1_I(s[2586]);
initWAGEBEN2_I(s[2587]);
initWAGEBEN3_I(s[2588]);
initWAGEBEN4_I(s[2589]);
initWAGEBEN5_I(s[2590]);
initWAGEBEN6_I(s[2591]);
initWAGEBEN_IFLAG(s[2592]);
initOTHERBEN1(s[2593]);
initOTHERBEN2(s[2594]);
initOTHERBEN3(s[2595]);
initOTHERBEN4(s[2596]);
initOTHERBEN1_I(s[2597]);
initOTHERBEN2_I(s[2598]);
initOTHERBEN3_I(s[2599]);
initOTHERBEN4_I(s[2600]);
initOTHERBEN_IFLAG(s[2601]);
initANYOTHERB_I(s[2602]);
initANYOTHERB_IFLAG(s[2603]);
initBTOGSEP(s[2604]);
initBPAYNUM(s[2605]);
initBTOGPD(s[2606]);
initBSEPPD01(s[2607]);
initBSEPPD02(s[2608]);
initBSEPPD03(s[2609]);
initBSEPPD04(s[2610]);
initBSEPPD05(s[2611]);
initBSEPPD06(s[2612]);
initBSEPPD07(s[2613]);
initBSEPPD08(s[2614]);
initCREDTYPE1(s[2615]);
initCREDTYPE2(s[2616]);
initCTOGSEP(s[2617]);
initWTCPD(s[2618]);
initCTCPD(s[2619]);
initCOMBPD(s[2620]);
initSPECIAL1(s[2621]);
initSPECIAL2(s[2622]);
initSPECIAL3(s[2623]);
initSPECIAL4(s[2624]);
initSPECIAL5(s[2625]);
initSPECIAL6(s[2626]);
initSPECIAL7(s[2627]);
initSPECIAL8(s[2628]);
initSPECIAL9(s[2629]);
initWHORECAR(s[2630]);
initWHOREMOB(s[2631]);
initWHOREATT(s[2632]);
initSPECPD1(s[2633]);
initSPECWHEN1(s[2634]);
initSPECINCL1(s[2635]);
initSPECPD2(s[2636]);
initSPECWHEN2(s[2637]);
initSPECINCL2(s[2638]);
initSPECPD3(s[2639]);
initSPECWHEN3(s[2640]);
initSPECINCL3(s[2641]);
initSPECPD4(s[2642]);
initSPECWHEN4(s[2643]);
initSPECINCL4(s[2644]);
initSPECPD5(s[2645]);
initSPECWHEN5(s[2646]);
initSPECINCL5(s[2647]);
initSPECPD6(s[2648]);
initSPECWHEN6(s[2649]);
initSPECINCL6(s[2650]);
initSPECPD7(s[2651]);
initSPECWHEN7(s[2652]);
initSPECINCL7(s[2653]);
initSPECPD8(s[2654]);
initSPECWHEN8(s[2655]);
initSPECINCL8(s[2656]);
initSPECPD9(s[2657]);
initSPECWHEN9(s[2658]);
initSPECINCL9(s[2659]);
initPAYPER(s[2660]);
initPAYESP(s[2661]);
initPAYESM(s[2662]);
initGRSESP(s[2663]);
initGRSESM(s[2664]);
initPAYINC1(s[2665]);
initPAYINC2(s[2666]);
initPAYINC3(s[2667]);
initPAYINC4(s[2668]);
initPAYINC5(s[2669]);
initPAYINC6(s[2670]);
initPAYINC7(s[2671]);
initSMTPEN(s[2672]);
initPAYSLP(s[2673]);
initPAYBON(s[2674]);
initBONTAX(s[2675]);
initBONTAX_I(s[2676]);
initBONTAX_IFLAG(s[2677]);
initEMSHAR1(s[2678]);
initEMSHAR2(s[2679]);
initEMSHAR3(s[2680]);
initSEPER(s[2681]);
initSEAMK(s[2682]);
initSEESW(s[2683]);
initSEESM(s[2684]);
initGROSSPER(s[2685]);
initGRSAMK(s[2686]);
initGRSEESW(s[2687]);
initGRSEESM(s[2688]);
initSEPEL(s[2689]);
initSJOB2(s[2690]);
initSJEMP1(s[2691]);
initSJEMP2(s[2692]);
initDVGRSBAND_I(s[2693]);
initDVGRSBAND_IFLAG(s[2694]);
initDVNETBAND_I(s[2695]);
initDVNETBAND_IFLAG(s[2696]);
initRENTPAY(s[2697]);
initOTHSRC1(s[2698]);
initOTHSRC2(s[2699]);
initOTHSRC3(s[2700]);
initREGLRPY1(s[2701]);
initREGLRPY2(s[2702]);
initDVTOTALLBENANNUAL(s[2703]);
initSJOB2_I(s[2704]);
initSJOB2_IFLAG(s[2705]);
initSJEMP1_I(s[2706]);
initSJEMP1_IFLAG(s[2707]);
initDVNETEMPSECJOB_IFLAG(s[2708]);
initDVGRSEMPSECJOB_IFLAG(s[2709]);
initPAYBON_I(s[2710]);
initPAYBON_IFLAG(s[2711]);
initDVNETBONAMT_IFLAG(s[2712]);
initDVGRSBONAMT_IFLAG(s[2713]);
initDVSENETPAY_IFLAG(s[2714]);
initDVSEGRSPAY_IFLAG(s[2715]);
initDVGRSSESECJOB_IFLAG(s[2716]);
initDVNIEMP(s[2717]);
initDVGRSBONAMT(s[2718]);
initIHRECNT(s[2719]);
initIHRCNUM(s[2720]);
initIWAT1(s[2721]);
initIWAT2(s[2722]);
initIWAT3(s[2723]);
initIWAT4(s[2724]);
initIWAT5(s[2725]);
initIWAT6(s[2726]);
initIWHO1(s[2727]);
initIVALB1(s[2728]);
initIHSE1(s[2729]);
initIHSE2(s[2730]);
initIHSE3(s[2731]);
initIGDS1(s[2732]);
initIGDS2(s[2733]);
initIGDS3(s[2734]);
initIGDS4(s[2735]);
initIGDS5(s[2736]);
initIWAT7(s[2737]);
initIWHO2(s[2738]);
initIVALB2(s[2739]);
initIHSE7(s[2740]);
initIHSE8(s[2741]);
initIHSE9(s[2742]);
initIHSE10(s[2743]);
initIHSE11(s[2744]);
initIHSE12(s[2745]);
initIGDS8(s[2746]);
initIGDS9(s[2747]);
initIGDS10(s[2748]);
initIGDS11(s[2749]);
initIWAT13(s[2750]);
initIWHO3(s[2751]);
initIVALB3(s[2752]);
initIGDS15(s[2753]);
initILGIFT(s[2754]);
initIGFVALB(s[2755]);
initNEWGIFT(s[2756]);
initILOAN(s[2757]);
initILNUSE01(s[2758]);
initILNUSE02(s[2759]);
initILNUSE03(s[2760]);
initILNUSE04(s[2761]);
initILNUSE05(s[2762]);
initILNVAL(s[2763]);
initILNVALB(s[2764]);
initILNPBK(s[2765]);
initILNPBAM(s[2766]);
initILUMP(s[2767]);
initILUMTY1(s[2768]);
initILUMTY2(s[2769]);
initILUMTY3(s[2770]);
initILIFB(s[2771]);
initILUPP(s[2772]);
initILUPB(s[2773]);
initILACB(s[2774]);
initILINB(s[2775]);
initILRDB(s[2776]);
initILWNB(s[2777]);
initILOTB(s[2778]);
initTINTRO(s[2779]);
initTSETT(s[2780]);
initTSNUM1(s[2781]);
initTSNEW(s[2782]);
initTSNUM2(s[2783]);
initTJNT1(s[2784]);
initTJNT2(s[2785]);
initTACC1(s[2786]);
initTBEN1(s[2787]);
initTBEN2(s[2788]);
initTBEN3(s[2789]);
initTBEN4(s[2790]);
initTBEN5(s[2791]);
initTVAL1(s[2792]);
initTVALB1(s[2793]);
initTDUP1(s[2794]);
initTDUPA1(s[2795]);
initTADDVL1(s[2796]);
initTADDVB1(s[2797]);
initTJNT3(s[2798]);
initTJNT4(s[2799]);
initTACC2(s[2800]);
initTBEN9(s[2801]);
initTBEN10(s[2802]);
initTBEN11(s[2803]);
initTBEN12(s[2804]);
initTVAL2(s[2805]);
initTVALB2(s[2806]);
initTDUP2(s[2807]);
initTDUPA2(s[2808]);
initTADDVL2(s[2809]);
initTADDVB2(s[2810]);
initTBENEF(s[2811]);
initTBENNUM(s[2812]);
initTWHO1(s[2813]);
initTWHO2(s[2814]);
initTBINC1(s[2815]);
initTBREC1(s[2816]);
initTBRECB1(s[2817]);
initTBCAP1(s[2818]);
initTBCKNO1(s[2819]);
initTBCAPY1(s[2820]);
initTBVALB1(s[2821]);
initTWHO7(s[2822]);
initTWHO8(s[2823]);
initTBINC2(s[2824]);
initTBREC2(s[2825]);
initTBRECB2(s[2826]);
initTBCAP2(s[2827]);
initTBCKNO2(s[2828]);
initTBCAPY2(s[2829]);
initTBVALB2(s[2830]);
initRENTPAY_I(s[2831]);
initRENTPAY_IFLAG(s[2832]);
initDVRENTAMTANNUAL_IFLAG(s[2833]);
initDVOINRRANNUAL_IFLAG(s[2834]);
initDVOINGTANNUAL_IFLAG(s[2835]);
initREGLRPY1_I(s[2836]);
initREGLRPY2_I(s[2837]);
initREGLRPY1_IFLAG(s[2838]);
initREGLRPY2_IFLAG(s[2839]);
initDVOINEGANNUAL_IFLAG(s[2840]);
initDVOINFRANNUAL_IFLAG(s[2841]);
initDVOINMAANNUAL_IFLAG(s[2842]);
initDVOINROANNUAL_IFLAG(s[2843]);
initDVOINOPANNUAL_IFLAG(s[2844]);
initIHRECNT_I(s[2845]);
initIHRECNT_IFLAG(s[2846]);
initIHRCNUM_I(s[2847]);
initIHRCNUM_IFLAG(s[2848]);
initIVALB1_I(s[2849]);
initIVALB1_IFLAG(s[2850]);
initIVALB2_I(s[2851]);
initIVALB2_IFLAG(s[2852]);
initIVALB3_I(s[2853]);
initIVALB3_IFLAG(s[2854]);
initIVAL1_IFLAG(s[2855]);
initIVAL2_IFLAG(s[2856]);
initIVAL3_IFLAG(s[2857]);
initILGIFT_I(s[2858]);
initILGIFT_IFLAG(s[2859]);
initIGFVALB_I(s[2860]);
initIGFVALB_IFLAG(s[2861]);
initIGIFVAL_IFLAG(s[2862]);
initILUMP_I(s[2863]);
initILUMP_IFLAG(s[2864]);
initILUMTY1_I(s[2865]);
initILUMTY1_IFLAG(s[2866]);
initILIFB_I(s[2867]);
initILIFB_IFLAG(s[2868]);
initILIFE_IFLAG(s[2869]);
initILUPB_I(s[2870]);
initILUPB_IFLAG(s[2871]);
initILUPP_I(s[2872]);
initILUPP_IFLAG(s[2873]);
initILACB_I(s[2874]);
initILACB_IFLAG(s[2875]);
initILACC_IFLAG(s[2876]);
initILINB_I(s[2877]);
initILINB_IFLAG(s[2878]);
initILINS_IFLAG(s[2879]);
initILRDB_I(s[2880]);
initILRDB_IFLAG(s[2881]);
initILRED_IFLAG(s[2882]);
initILWNB_I(s[2883]);
initILWNB_IFLAG(s[2884]);
initILWIN_IFLAG(s[2885]);
initILOTB_I(s[2886]);
initILOTB_IFLAG(s[2887]);
initILOTH_IFLAG(s[2888]);
initSAMEJOB1(s[2889]);
initSAMEJOB2(s[2890]);
initSAMEJOB3(s[2891]);
initSAMEJOB4(s[2892]);
initSAMEJOB5(s[2893]);
initSAMEJOB6(s[2894]);
initSECTOR(s[2895]);
initSECTR2(s[2896]);
initETYPE(s[2897]);
initSVISE(s[2898]);
initEMPNO(s[2899]);
initEMPN(s[2900]);
initONETEN(s[2901]);
initDVEMPNO(s[2902]);
initSOLO(s[2903]);
initDVSENO(s[2904]);
initSEMN(s[2905]);
initFTPTWK(s[2906]);
initWKHRS(s[2907]);
initWKHRSIR(s[2908]);
initEMPSTY(s[2909]);
initSEMPSTY(s[2910]);
initPERMJB(s[2911]);
initTEA(s[2912]);
initPNOWK(s[2913]);
initPNOWKLN(s[2914]);
initENROLL(s[2915]);
initATTEND(s[2916]);
initCOURSE(s[2917]);
initFTSTUD(s[2918]);
initJOBNO(s[2919]);
initXINSOL(s[2920]);
initXINTYP(s[2921]);
initXINCSE(s[2922]);
initFBSITU(s[2923]);
initFBSIBS(s[2924]);
initFBTEN(s[2925]);
initFBFAED(s[2926]);
initFBMOED(s[2927]);
initFTHECST(s[2928]);
initMTHECST(s[2929]);
initDWELLTYP(s[2930]);
initGOR(s[2931]);
initCURSTAT(s[2932]);
initDVAGEW4BAND(s[2933]);
initXMARSTA(s[2934]);
initMARBEF(s[2935]);
initLIVWTH12(s[2936]);
initHHLDR(s[2937]);
initDVAGE4(s[2938]);
initDVAGE5(s[2939]);
initDVAGE6(s[2940]);
initDVAGE9(s[2941]);
initWORKAGE(s[2942]);
initNUMADULT(s[2943]);
initNUMCHILD(s[2944]);
initNUMCIVPTR(s[2945]);
initNUMSSEX(s[2946]);
initNUMCPART(s[2947]);
initNUMCH18(s[2948]);
initPENFLAG(s[2949]);
initFTED(s[2950]);
initFTED19(s[2951]);
initQUALCHK(s[2952]);
initHIHNUM(s[2953]);
initDVHRPNUM(s[2954]);
initHRPPART(s[2955]);
initR01(s[2956]);
initR02(s[2957]);
initR03(s[2958]);
initR04(s[2959]);
initR05(s[2960]);
initR06(s[2961]);
initR07(s[2962]);
initR08(s[2963]);
initR09(s[2964]);
initR10(s[2965]);
initR11(s[2966]);
initRESPDNT(s[2967]);
initPARTNER(s[2968]);
initPARTNO(s[2969]);
initISDEP(s[2970]);
initISNDEP(s[2971]);
initNUMDEPCH(s[2972]);
initHASCHD(s[2973]);
initHASDEP(s[2974]);
initHASNDEP(s[2975]);
initSINGPAR(s[2976]);
initPERSPROX(s[2977]);
initPROXYNUM(s[2978]);
initWRKING(s[2979]);
initSCHEMEET(s[2980]);
initJBAWAY(s[2981]);
initOWNBUS(s[2982]);
initRELBUS(s[2983]);
initLOOKED(s[2984]);
initSTARTJ(s[2985]);
initLKTIME(s[2986]);
initYINACT(s[2987]);
initDVILO3A(s[2988]);
initDVILO4A(s[2989]);
initWKBETW(s[2990]);
initMRECJB(s[2991]);
initSAMJOB(s[2992]);
initSAMEMP(s[2993]);
initPERNOWK(s[2994]);
initNUMJOB(s[2995]);
initDTJBL(s[2996]);
initDVJB12ML(s[2997]);
initDVUETIM(s[2998]);
initSTAT(s[2999]);
initEDATTN1(s[3000]);
initEDATTN2(s[3001]);
initEDATTN3(s[3002]);
initDVHSIZE(s[3003]);
initDVMRDF(s[3004]);
initDVMRDF12(s[3005]);
initSEX(s[3006]);
initDVSAME_I(s[3007]);
initDVSAME_IFLAG(s[3008]);
initWRKING_I(s[3009]);
initWRKING_IFLAG(s[3010]);
initSCHEMEET_I(s[3011]);
initSCHEMEET_IFLAG(s[3012]);
initJBAWAY_I(s[3013]);
initJBAWAY_IFLAG(s[3014]);
initOWNBUS_I(s[3015]);
initOWNBUS_IFLAG(s[3016]);
initRELBUS_I(s[3017]);
initRELBUS_IFLAG(s[3018]);
initLOOKED_I(s[3019]);
initLOOKED_IFLAG(s[3020]);
initSTARTJ_I(s[3021]);
initSTARTJ_IFLAG(s[3022]);
initDVILO3A_I(s[3023]);
initDVILO3A_IFLAG(s[3024]);
initEVERWK_I(s[3025]);
initEVERWK_IFLAG(s[3026]);
initSTAT_I(s[3027]);
initSTAT_IFLAG(s[3028]);
initNOUNITS(s[3029]);
initDVBENU1(s[3030]);
initDVNUMBU(s[3031]);
initES2000(s[3032]);
initNSSEC(s[3033]);
initNSSECB(s[3034]);
initNSSEC5(s[3035]);
initNSSEC3(s[3036]);
initNSSEC8(s[3037]);
initHPROX(s[3038]);
initNUMCOUPLES(s[3039]);
initCOUPLENUM(s[3040]);
initPARTNSSEC(s[3041]);
initPARTNSSECB(s[3042]);
initPARTNSSEC8(s[3043]);
initPARTNSSEC5(s[3044]);
initPARTNSSEC3(s[3045]);
initEDLEVEL(s[3046]);
initEVERWK(s[3047]);
initDVECACT(s[3048]);
initHRPDVECACT(s[3049]);
initDVAGE17(s[3050]);
initDVAGE7(s[3051]);
initCASEW1(s[3052]);
initCASEW2(s[3053]);
initCASEW3(s[3054]);
initCASEW4(s[3055]);
initDVSEPANNUAL01(s[3056]);
initDVSEPANNUAL02(s[3057]);
initDVSEPANNUAL03(s[3058]);
initDVSEPANNUAL04(s[3059]);
initDVSEPANNUAL05(s[3060]);
initDVSEPANNUAL06(s[3061]);
initDVSEPANNUAL07(s[3062]);
initDVSEPANNUAL08(s[3063]);
initDVSPECANNUAL01(s[3064]);
initDVSPECANNUAL02(s[3065]);
initDVSPECANNUAL03(s[3066]);
initDVSPECANNUAL04(s[3067]);
initDVSPECANNUAL05(s[3068]);
initDVSPECANNUAL06(s[3069]);
initDVSPECANNUAL07(s[3070]);
initDVSPECANNUAL08(s[3071]);
initDVSPECANNUAL09(s[3072]);
initDVBENEFITANNUAL_I(s[3073]);
initDVTOTTAXANNUAL(s[3074]);
initDVGIEMP(s[3075]);
initDVGIPPEN(s[3076]);
initDVGRSSESECJOB(s[3077]);
initDVGRSSESECJOB_I(s[3078]);
initDVNETRENTAMTANNUAL(s[3079]);
initDVOIGROANNUAL_I(s[3080]);
initDVBTOGANNUAL(s[3081]);
initDVCTCANNUAL(s[3082]);
initDVGIINV(s[3083]);
initDVGISE(s[3084]);
initDVGRSBONAMT_I(s[3085]);
initDVGRSEMPSECJOB(s[3086]);
initDVGRSEMPSECJOB_I(s[3087]);
initDVGRSPAY(s[3088]);
initDVRENTAMTANNUAL_I(s[3089]);
initDVGRSRENTAMTANNUAL(s[3090]);
initDVNETBONAMT(s[3091]);
initDVNETBONAMT_I(s[3092]);
initDVNETEMPSECJOB(s[3093]);
initDVNETEMPSECJOB_I(s[3094]);
initDVNETPAY(s[3095]);
initDVNETSESECJOB(s[3096]);
initDVNIINV(s[3097]);
initDVNIPPEN(s[3098]);
initDVNISE(s[3099]);
initPARTGRSPAY(s[3100]);
initTOTPARTGRSPAY(s[3101]);
initDVOIGEGANNUAL_I(s[3102]);
initDVOIGFRANNUAL_I(s[3103]);
initDVOIGGTANNUAL_I(s[3104]);
initDVOIGMAANNUAL_I(s[3105]);
initDVOIGOPANNUAL_I(s[3106]);
initDVOIGRRANNUAL_I(s[3107]);
initDVOINEGANNUAL_I(s[3108]);
initDVOINFRANNUAL_I(s[3109]);
initDVOINGTANNUAL_I(s[3110]);
initDVOINMAANNUAL_I(s[3111]);
initDVOINOPANNUAL_I(s[3112]);
initDVOINROANNUAL_I(s[3113]);
initDVOINRRANNUAL_I(s[3114]);
initDVSEGRSPAY(s[3115]);
initDVSEGRSPAY_I(s[3116]);
initDVSENETPAY(s[3117]);
initDVSENETPAY_I(s[3118]);
initDVTOGTCANNUAL(s[3119]);
initDVTOTBENANNUAL(s[3120]);
initDVWTCANNUAL(s[3121]);
initDVNIOTHI(s[3122]);
initDVIRREGOTHANNUAL(s[3123]);
initDVWINANNUAL(s[3124]);
initDVACCINANNUAL(s[3125]);
initDVLUMPPENANNUAL(s[3126]);
initDVREDUNANNUAL(s[3127]);
initDVOTHINSANNUAL(s[3128]);
initDVLIFEANNUAL(s[3129]);
initDVINHERITANNUAL(s[3130]);
initDVGIFTANNUAL(s[3131]);
initGRSPAYEMPORSE(s[3132]);
initSOC2010(s[3133]);
initSICCODE(s[3134]);
initSIC2007(s[3135]);
initMARST(s[3136]);
}
}
